{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1535114556559},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1535114556560},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1535114556560},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1535114556562},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1535114556562},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1535114556562},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1535114556563},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1535114556563},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1535114556563},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1535114556563},{"_id":"themes/next/README.md","hash":"3d438555ca87b1d247536b3b56fc0672eb001518","modified":1535114556564},{"_id":"themes/next/_config - 副本.yml","hash":"6c49705ef11f012db63969e2bdedbd2e17225743","modified":1535114556564},{"_id":"themes/next/_config.yml","hash":"95f75622ff5b5d3f353e4f620970341af44a896f","modified":1535120303951},{"_id":"themes/next/bower.json","hash":"74115626b419f40126e07bb0bbfc5e6ab163f222","modified":1535114556587},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1535114556595},{"_id":"themes/next/package.json","hash":"edcba128994bb34491334db3a49d5c3a50976cf3","modified":1535114556627},{"_id":"source/_posts/2018-08-20-one.md","hash":"1205b97dcc9db4a0b47f533481c188b13089fa33","modified":1535114556510},{"_id":"source/_posts/2018-08-20-shujukujichu1.md","hash":"562dce78f34a6bcf5238dde643305b39c6304b12","modified":1535114556511},{"_id":"source/_posts/2018-08-20-第一篇文章.md~","hash":"ada8e0c12a376b578c5cf9548b3ddbb5401ddd13","modified":1535114556513},{"_id":"source/_posts/2018-08-21-rlwrap.md","hash":"d06c91601642f05ee8505f6a232d4a04ba63da61","modified":1535114556513},{"_id":"source/_posts/2018-08-22-Git-changyongmingling.md","hash":"f3265797a6726a00581373ef033e0739677822c4","modified":1535114556514},{"_id":"source/_posts/2018-08-22-tools.md","hash":"ef445f7f66139f9145efa2c1067a3ab60e497e78","modified":1535114556515},{"_id":"source/_posts/2018-08-24-Oracle-chongyongmingling.md","hash":"1cf552391151a5323efe3c2fbd84402cd89b55a9","modified":1535120575746},{"_id":"source/_posts/726930-5079e6da8900d0e2.jpg","hash":"a2f099798543dfca2563f3cf6c0571e1bfa75332","modified":1535114556516},{"_id":"source/_posts/batjichu.md","hash":"a6920f344216f68efb6407e746ba70f0a555414a","modified":1535114556518},{"_id":"source/_posts/gitjichupeizhi.md","hash":"db3b1d397db72613a2831a6b7589b55a3f9201e6","modified":1535114556518},{"_id":"source/_posts/hello-world.md","hash":"beb64e64956fe8d25ea1317c6315f99f8575c1a5","modified":1535114556518},{"_id":"source/_posts/limqfirst.md","hash":"95f651a2d2d0655d18c0303260f182b6b816aaef","modified":1535114556521},{"_id":"source/_posts/test.md","hash":"e6033cb4f4f136280465cd428ff5604dda73021e","modified":1535114556522},{"_id":"source/_posts/test.md~","hash":"7b8d33dbd4dcb4bbe4f98ac005aed9926debc0fa","modified":1535114556522},{"_id":"source/_posts/test1.md~","hash":"891a8e0c25ae0fe181200c135446fb40f4d0e855","modified":1535114556522},{"_id":"source/about/index.md","hash":"57aa44c407280e7a09b1b9c2c23ceefbfe10ad6e","modified":1535208109043},{"_id":"source/categories/index.md","hash":"e4af71eec5eab6708d39182b2ac3e7954644c4cb","modified":1535204983546},{"_id":"source/categories/index.md~","hash":"1dc48abdc085355dc395c8757c23b84f8d530267","modified":1535114556524},{"_id":"source/tags/index.md","hash":"e12cc2134cea0c35a1f8b5c056092f0578bf325e","modified":1535204994758},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"792b4e3c3544d51164e8a414219dc1b388dc65dc","modified":1535114556560},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"054be54a22f3aea601a29334c7577ffa793f1a48","modified":1535114556561},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1535114556561},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1535114556562},{"_id":"themes/next/.github/stale.yml","hash":"1bbdd20d025010ec57225712be82988a26485836","modified":1535114556562},{"_id":"themes/next/bak.git/FETCH_HEAD","hash":"2afd4121da9d63fd01a81ccf4f4252fc590f6ae1","modified":1535114556565},{"_id":"themes/next/bak.git/HEAD","hash":"c2c77a6e76508eb177da9f2626170bec0486228a","modified":1535114556565},{"_id":"themes/next/bak.git/config","hash":"0c7984aef9bbd2b16e595db3887ccc112c445d3f","modified":1535114556566},{"_id":"themes/next/bak.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1535114556566},{"_id":"themes/next/bak.git/index","hash":"cd756f625445e356841d1a685a85c0365022b3c9","modified":1535114556571},{"_id":"themes/next/bak.git/packed-refs","hash":"1ec1b1c69028543c76b8b255e7bf4e4f652e7b0a","modified":1535114556586},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1535114556588},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1535114556588},{"_id":"themes/next/docs/DATA-FILES.md","hash":"de63aa8466ee8c4d4b418dfbe4e8f27fa117751d","modified":1535114556588},{"_id":"themes/next/docs/INSTALLATION.md","hash":"01a383fd1d46752d4b4f22047b535127b44adb75","modified":1535114556589},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1535114556589},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1535114556589},{"_id":"themes/next/languages/de.yml","hash":"92964c8ed184fa959a5e2001e7c6d9a07d7a4344","modified":1535114556596},{"_id":"themes/next/languages/default.yml","hash":"b39706b2d22696eed6b036f4c90aa5362e331090","modified":1535114556596},{"_id":"themes/next/languages/en.yml","hash":"df63017548589b2e567647e08d736c2a7f342b12","modified":1535114556596},{"_id":"themes/next/languages/fr-FR.yml","hash":"6ee34c8103a95839207dac1201fef7a8f727d2fc","modified":1535114556596},{"_id":"themes/next/languages/id.yml","hash":"60473cc81a871ceb868c97cd3291d602fda1b338","modified":1535114556597},{"_id":"themes/next/languages/it.yml","hash":"5a8a29d145dd2cd882d52b3fbb1203c1a3540cbd","modified":1535114556598},{"_id":"themes/next/languages/ja.yml","hash":"8a3acfb56dc783f261b640dca662c0ec431fea6f","modified":1535114556598},{"_id":"themes/next/languages/ko.yml","hash":"73253087d7754a0213e2ad72de16ab5138b9ba54","modified":1535114556598},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1535114556598},{"_id":"themes/next/languages/pt-BR.yml","hash":"4d017b7b9542050b87a99931dff98889090fc781","modified":1535114556599},{"_id":"themes/next/languages/pt.yml","hash":"95585897cd108d5ff15e998cd0acdc0fba5d572c","modified":1535114556599},{"_id":"themes/next/languages/ru.yml","hash":"4ba9f4971115bce0213c437158424428e0e13d5a","modified":1535114556599},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1535114556599},{"_id":"themes/next/languages/zh-Hans.yml","hash":"5824a6f10816dd71a5f0de8c9922b0b21d564a82","modified":1535114556600},{"_id":"themes/next/languages/zh-hk.yml","hash":"54e4aa1d04ccad1e13cf08124fe5f70a930592dd","modified":1535114556600},{"_id":"themes/next/languages/zh-tw.yml","hash":"280dd00495e90b8a8c4d9351bab8ae65c78bbe87","modified":1535114556600},{"_id":"themes/next/layout/_layout.swig","hash":"51695161f08333535dd504312e453d028fb3d0dd","modified":1535114556601},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1535114556625},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1535114556625},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1535114556625},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1535114556626},{"_id":"themes/next/layout/post.swig","hash":"8e2d079b46076996cc9343213d5bf7da8178d32d","modified":1535114556626},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1535114556626},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1535114556627},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1535114556627},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1535114556628},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1535114556682},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1535114556682},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1535114556683},{"_id":"source/_posts/2018-08-23-Linux-Shell-jichu.md","hash":"2bafeffe2b6cbceb10b6cdc12277d0502cb89ded","modified":1535119548341},{"_id":"source/_posts/Image.png","hash":"1497cd005727341d9f4fc34ecf2a3b38294f4f58","modified":1535114556517},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535114556666},{"_id":"source/_posts/2018-08-22-Git-changyongmingling/726930-5079e6da8900d0e2.jpg","hash":"a2f099798543dfca2563f3cf6c0571e1bfa75332","modified":1535114556514},{"_id":"source/_posts/2018-08-22-Git-changyongmingling/linux.gif","hash":"e3e191e39281ac850560e86311ba6d12d2380736","modified":1535116005983},{"_id":"themes/next/bak.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1535114556566},{"_id":"themes/next/bak.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1535114556567},{"_id":"themes/next/bak.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1535114556567},{"_id":"themes/next/bak.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1535114556567},{"_id":"themes/next/bak.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1535114556568},{"_id":"themes/next/bak.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1535114556568},{"_id":"themes/next/bak.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1535114556569},{"_id":"themes/next/bak.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1535114556570},{"_id":"themes/next/bak.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1535114556570},{"_id":"themes/next/bak.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1535114556570},{"_id":"themes/next/bak.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1535114556571},{"_id":"themes/next/bak.git/logs/HEAD","hash":"c0bb6eae869509b93550f6a561fb0554d8c677df","modified":1535114556571},{"_id":"themes/next/docs/cn/DATA-FILES.md","hash":"58c58c7d98365395dba904a87f9b5f5e0b1e99cb","modified":1535114556590},{"_id":"themes/next/docs/cn/INSTALLATION.md","hash":"15b09b7cf4e4159858895e37ce334fcc96ac08d7","modified":1535114556590},{"_id":"themes/next/docs/cn/README.md","hash":"68b98e7489b8d53e8367500507b9ce43d094d48b","modified":1535114556591},{"_id":"themes/next/docs/cn/UPDATE-FROM-5.1.X.md","hash":"b6422e0e1bbb02ddd29a2f9969fc3ff709555560","modified":1535114556591},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"1f15b876c106bae74148fb526bc3b914721b8ff2","modified":1535114556592},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"43a70e456d15e9eab3753c22a5253ed2ff300ac8","modified":1535114556592},{"_id":"themes/next/docs/ru/README.md","hash":"95a904683da99daf1473fb7c1ffe8a6322ef8fb9","modified":1535114556594},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1535114556595},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1535114556601},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1535114556601},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"01a2f46b710b32a930556b157c192ce772563951","modified":1535114556602},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1535114556602},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1535114556603},{"_id":"themes/next/layout/_macro/post.swig","hash":"307f63a4b38bc489d14fe79a0f26565fc8f5ad76","modified":1535114556603},{"_id":"themes/next/layout/_macro/post.swig.bak","hash":"8cf4aab4f084cb2a5ee6ad17a43e7ea18ff347ae","modified":1535114556603},{"_id":"themes/next/layout/_macro/post.swig.chushihua0821","hash":"443aa293a1735488e838cd5896e549e35b6832aa","modified":1535114556604},{"_id":"themes/next/layout/_macro/reward.swig","hash":"aa620c582143f43ba1cb1a5e59240041a911185b","modified":1535114556605},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43f13d75cfb37ec4ed5386bee0f737641977200b","modified":1535114556605},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"fea45ab314b9ea23edab25c2b8620f909d856b1d","modified":1535114556605},{"_id":"themes/next/layout/_partials/comments.swig","hash":"7993e873618f12888d3ae2c3f6ba2069822e2b13","modified":1535114556606},{"_id":"themes/next/layout/_partials/footer.swig","hash":"fdc2ee35e868c98615efd4ba1965d97bcb0e4fb9","modified":1535114556606},{"_id":"themes/next/layout/_partials/head.swig","hash":"1384aaabd325eeba28772f825308bad58ab904fe","modified":1535114556607},{"_id":"themes/next/layout/_partials/header.swig","hash":"203fabaf17acfafbaf1a97d0015a6613ec71d2b0","modified":1535114556607},{"_id":"themes/next/layout/_macro/post.swig1","hash":"eae9bc578ba3cf36757731e8471e30663fcfdad1","modified":1535114556604},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1535114556608},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1535114556608},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1535114556608},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1535114556611},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1535114556611},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1535114556613},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1535114556620},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1535114556621},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1535114556621},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1535114556621},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1535114556622},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1535114556622},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1535114556629},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1535114556629},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1535114556629},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1535114556629},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1535114556630},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1535114556630},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1535114556630},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1535114556631},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1535114556631},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1535114556666},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1535114556666},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1535114556667},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535114556667},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1535114556668},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1535114556668},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1535114556668},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1535114556669},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1535114556669},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1535114556669},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1535114556670},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1535114556670},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1535114556670},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535114556670},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1535114556671},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535114556671},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1535114556671},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1535114556671},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535114556672},{"_id":"source/_posts/2018-08-20-shujukujichu1/Image.png","hash":"1497cd005727341d9f4fc34ecf2a3b38294f4f58","modified":1535114556513},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535114556612},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535114556612},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535114556655},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535114556655},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535114556656},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535114556664},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535114556665},{"_id":"themes/next/bak.git/refs/heads/master","hash":"e7d5d06a97b02e9fd6141aba44a00feed39541ad","modified":1535114556586},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1535114556607},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1535114556607},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1535114556609},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1535114556609},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1535114556609},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1535114556609},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1535114556610},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1535114556610},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1535114556610},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1535114556612},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1535114556612},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1535114556613},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1535114556614},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1535114556614},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1535114556614},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1535114556615},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1535114556615},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1535114556616},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1535114556616},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1535114556616},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1535114556617},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1535114556617},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1535114556617},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1535114556617},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1535114556618},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1535114556618},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"683955d9dc806c3309c2c6b137c4fb19f089763e","modified":1535114556618},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1535114556619},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"17a54796f6e03fc834880a58efca45c286e40e40","modified":1535114556619},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"40e3cacbd5fa5f2948d0179eff6dd88053e8648e","modified":1535114556619},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f340d122a9816ccdf4b45b662880a4b2d087671","modified":1535114556620},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1535114556620},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"42f62695029834d45934705c619035733762309e","modified":1535114556620},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1535114556623},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1535114556624},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1535114556624},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1535114556624},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1535114556654},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1535114556655},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1535114556655},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1535114556656},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1535114556664},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1535114556664},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1535114556664},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1535114556665},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1535114556672},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1535114556672},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"531cdedd7fbe8cb1dab2e4328774a9f6b15b59da","modified":1535114556673},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1535114556673},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1535114556673},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1535114556674},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1535114556674},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1535114556675},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1535114556675},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1535114556676},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1535114556680},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1535114556681},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1535114556681},{"_id":"themes/next/bak.git/objects/pack/pack-59ccd5c447b91c1959fc50148301893e8f07b025.idx","hash":"5ccd4b141734c83d5f6da0449ee14ee35dcc50d1","modified":1535114556574},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535114556677},{"_id":"themes/next/bak.git/logs/refs/heads/master","hash":"b6c9b8eed3b7611806abb18d888b4e3f5fe61209","modified":1535114556572},{"_id":"themes/next/bak.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1535114556587},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1535114556622},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1535114556623},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1535114556632},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1535114556632},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1535114556633},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1535114556633},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1535114556633},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1535114556638},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1535114556646},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1535114556652},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1535114556652},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1535114556653},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1535114556653},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1535114556653},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1535114556654},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1535114556654},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1535114556656},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1535114556657},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1535114556657},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1535114556657},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"bb20cbd5df6433af2746a0a59aca0415c77bc17e","modified":1535114556658},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1535114556658},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1535114556658},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1535114556659},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1535114556660},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1535114556660},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"3bc53d98f7ab29b48f0d7a6212c6488c5458ed88","modified":1535114556660},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1535114556661},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1535114556661},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1535114556662},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1535114556662},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1535114556663},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d204ef41e5f59aa102baf02e1751075a041ae7f4","modified":1535114556662},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1535114556663},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1535114556663},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1535114556675},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1535114556679},{"_id":"themes/next/bak.git/logs/refs/remotes/origin/HEAD","hash":"b6c9b8eed3b7611806abb18d888b4e3f5fe61209","modified":1535114556572},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1535114556634},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1535114556634},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1535114556634},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1535114556634},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1535114556635},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1535114556635},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1535114556635},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1535114556636},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1535114556636},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1535114556637},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1535114556637},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1535114556637},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1535114556637},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1535114556638},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1535114556638},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1535114556639},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1535114556639},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1535114556639},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1535114556640},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1535114556640},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"0abb074afb6ab7242a22fa6dc3ac688251df708a","modified":1535114556640},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1535114556640},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1535114556641},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1535114556641},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1535114556641},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1535114556641},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1535114556642},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1535114556642},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1535114556642},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8bf095377d28881f63a30bd7db97526829103bf2","modified":1535114556643},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1535114556643},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1535114556643},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1535114556644},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1535114556644},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1535114556644},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1535114556644},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1535114556645},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1535114556645},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1535114556645},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1535114556646},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1535114556646},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1535114556647},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1535114556647},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1535114556647},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1535114556647},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1535114556648},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1535114556648},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1535114556648},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1535114556648},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1535114556649},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1535114556649},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1535114556650},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1535114556650},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1535114556650},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1535114556651},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1535114556651},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1535114556651},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"96326454eb7c7a3ec38d20294c94c4cc63f16ebe","modified":1535114556651},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1535114556659},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1535114556659},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1535114556661},{"_id":"themes/next/bak.git/objects/pack/pack-59ccd5c447b91c1959fc50148301893e8f07b025.pack","hash":"d3098328724ecc3d690260c6ea4ec3cba80d355b","modified":1535114556585}],"Category":[{"name":"life","_id":"cjl9jao990004wswk0jewdy33"},{"name":"Program","_id":"cjl9jao9o000awswkfmm6swk9"},{"name":"效率工具","_id":"cjl9jaoam000pwswkot8oco1g"},{"name":"Oracle","parent":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaoap000twswkze0e0fci"},{"name":"test","parent":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaoau000ywswk9j8be77a"},{"name":"bat","parent":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaoaw0012wswk4nf712xv"},{"name":"Git","parent":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaoaz0017wswkxiptq1au"},{"name":"hexo","parent":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaobd001mwswkbsalpj70"},{"name":"Shell","parent":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaocl0024wswky2jqj4fu"}],"Data":[],"Page":[{"title":"关于我","date":"2018-08-20T05:16:33.000Z","_content":"\n\n\n\n   - 我是\n\n        - stone \n        - 业余 IT 人员\n        - gzlmq1#163.com^#->@^\n\n---\n\n   - 技术\n\n      - GitHub:limqvip\n\n      - 编程语言\n        Python PLSQL \n\n      - DB\n        Oracle\n\n      - 脚本\n        Bash bat\n\n      - OS\n        Windows\n        Debian\n        \n      - Tools\n        Git Vim bash\n\n\n\n---\n\n[Sublime Text使用基础](http://www.sublimetextcn.com/)\n\n[**刘未鹏(pongba)**](http://mindhacks.cn/about/)\n\n[技术阅读收藏](https://icehe.github.io/tech/)    \t\n[文字阅读收藏](https://icehe.github.io/read/)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2018-08-20 13:16:33\n---\n\n\n\n\n   - 我是\n\n        - stone \n        - 业余 IT 人员\n        - gzlmq1#163.com^#->@^\n\n---\n\n   - 技术\n\n      - GitHub:limqvip\n\n      - 编程语言\n        Python PLSQL \n\n      - DB\n        Oracle\n\n      - 脚本\n        Bash bat\n\n      - OS\n        Windows\n        Debian\n        \n      - Tools\n        Git Vim bash\n\n\n\n---\n\n[Sublime Text使用基础](http://www.sublimetextcn.com/)\n\n[**刘未鹏(pongba)**](http://mindhacks.cn/about/)\n\n[技术阅读收藏](https://icehe.github.io/tech/)    \t\n[文字阅读收藏](https://icehe.github.io/read/)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","updated":"2018-08-25T14:41:49.043Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjl9jao8y0001wswknuww33qc","content":"<ul>\n<li><p>我是</p>\n<ul>\n<li>stone </li>\n<li>业余 IT 人员</li>\n<li>gzlmq1#163.com^#-&gt;@^</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>技术</p>\n<ul>\n<li><p>GitHub:limqvip</p>\n</li>\n<li><p>编程语言<br>Python PLSQL </p>\n</li>\n<li><p>DB<br>Oracle</p>\n</li>\n<li><p>脚本<br>Bash bat</p>\n</li>\n<li><p>OS<br>Windows<br>Debian</p>\n</li>\n<li><p>Tools<br>Git Vim bash</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p><a href=\"http://www.sublimetextcn.com/\" target=\"_blank\" rel=\"noopener\">Sublime Text使用基础</a></p>\n<p><a href=\"http://mindhacks.cn/about/\" target=\"_blank\" rel=\"noopener\"><strong>刘未鹏(pongba)</strong></a></p>\n<p><a href=\"https://icehe.github.io/tech/\" target=\"_blank\" rel=\"noopener\">技术阅读收藏</a><br><a href=\"https://icehe.github.io/read/\" target=\"_blank\" rel=\"noopener\">文字阅读收藏</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>我是</p>\n<ul>\n<li>stone </li>\n<li>业余 IT 人员</li>\n<li>gzlmq1#163.com^#-&gt;@^</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>技术</p>\n<ul>\n<li><p>GitHub:limqvip</p>\n</li>\n<li><p>编程语言<br>Python PLSQL </p>\n</li>\n<li><p>DB<br>Oracle</p>\n</li>\n<li><p>脚本<br>Bash bat</p>\n</li>\n<li><p>OS<br>Windows<br>Debian</p>\n</li>\n<li><p>Tools<br>Git Vim bash</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p><a href=\"http://www.sublimetextcn.com/\" target=\"_blank\" rel=\"noopener\">Sublime Text使用基础</a></p>\n<p><a href=\"http://mindhacks.cn/about/\" target=\"_blank\" rel=\"noopener\"><strong>刘未鹏(pongba)</strong></a></p>\n<p><a href=\"https://icehe.github.io/tech/\" target=\"_blank\" rel=\"noopener\">技术阅读收藏</a><br><a href=\"https://icehe.github.io/read/\" target=\"_blank\" rel=\"noopener\">文字阅读收藏</a></p>\n"},{"title":"分类","layout":"categories","type":"categories","date":"2018-08-20T05:16:15.000Z","comments":0,"_content":"\n","source":"categories/index.md","raw":"---\ntitle: 分类\nlayout: categories\ntype: \"categories\"\ndate: 2018-08-20 13:16:15\ncomments: false\n---\n\n","updated":"2018-08-25T13:49:43.546Z","path":"categories/index.html","_id":"cjl9jao940003wswkgbifsmpp","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-08-20T05:16:25.000Z","type":"tags","comments":0,"_content":"\n","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-08-20 13:16:25\ntype: \"tags\"\ncomments: false\n---\n\n","updated":"2018-08-25T13:49:54.758Z","path":"tags/index.html","layout":"page","_id":"cjl9jao9g0007wswk0nlxiek5","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"第一篇文章","comments":1,"date":"2018-08-20T07:48:52.000Z","updated":"2018-08-20T07:48:52.000Z","_content":"\n","source":"_posts/2018-08-20-one.md","raw":"---\ntitle: 第一篇文章\ncomments: true\ndate: 2018-08-20 15:48:52\nupdated: 2018-08-20 15:48:52\ntags: Python\ncategories: life\n---\n\n","slug":"one","published":1,"layout":"post","photos":[],"link":"","_id":"cjl9jao8k0000wswkvetw3ud8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"数据库基础1","comments":1,"date":"2018-08-20T09:05:48.000Z","updated":"2018-08-20T09:05:48.000Z","_content":"\n## 4.1 关系代数运算       \n\n传统的几何运算。并、差、交、笛卡尔积等。        \n专门的关系运算。选择、投影、连接等。    \n### 4.1.1 关系运算   \n\n(1)并(Union)     \n(2)差（Difference）  \n(3)交（Intersect）\n\n![图片](2018-08-20-shujukujichu1\\Image.png)\n\n\n### 4.1.2专门的关系运算        \n\n(1)选择            \nselect * from students where 性别='男'        \n(2)投影            \nselect 学号，姓名，身份证号 from students       \n(3)连接            \n连接是关系的横向结合。连接运算将两个关系模式拼接成一个更宽的关系模式，生成新关系中包含满足条件的元祖。连接过程是通过连接条件来控制的，连接条件中将出现两个表中的公共属性名，或者具有相同语义、可比的属性。连接结果是满足条件的所有记录，连接运算需要两个表作为操作对象，操作结果产生一个关系。若需要连接两个以上的表，则应当两两进行连接。一般可以描述为：JOIN <关系1> AND <关系2> WHERE <条件>SELECT *　FROM STUDENTS A INNER JOIN SECORES B ON A.学号=B.学号该命令查出学生表和成绩表中有相同学号的全部信息。 ","source":"_posts/2018-08-20-shujukujichu1.md","raw":"---\ntitle: 数据库基础1\ncomments: true\ndate: 2018-08-20 17:05:48\nupdated: 2018-08-20 17:05:48\ntags:\ncategories:\n- Program\n- test\n---\n\n## 4.1 关系代数运算       \n\n传统的几何运算。并、差、交、笛卡尔积等。        \n专门的关系运算。选择、投影、连接等。    \n### 4.1.1 关系运算   \n\n(1)并(Union)     \n(2)差（Difference）  \n(3)交（Intersect）\n\n![图片](2018-08-20-shujukujichu1\\Image.png)\n\n\n### 4.1.2专门的关系运算        \n\n(1)选择            \nselect * from students where 性别='男'        \n(2)投影            \nselect 学号，姓名，身份证号 from students       \n(3)连接            \n连接是关系的横向结合。连接运算将两个关系模式拼接成一个更宽的关系模式，生成新关系中包含满足条件的元祖。连接过程是通过连接条件来控制的，连接条件中将出现两个表中的公共属性名，或者具有相同语义、可比的属性。连接结果是满足条件的所有记录，连接运算需要两个表作为操作对象，操作结果产生一个关系。若需要连接两个以上的表，则应当两两进行连接。一般可以描述为：JOIN <关系1> AND <关系2> WHERE <条件>SELECT *　FROM STUDENTS A INNER JOIN SECORES B ON A.学号=B.学号该命令查出学生表和成绩表中有相同学号的全部信息。 ","slug":"shujukujichu1","published":1,"layout":"post","photos":[],"link":"","_id":"cjl9jao910002wswkdq7tcsco","content":"<h2 id=\"4-1-关系代数运算\"><a href=\"#4-1-关系代数运算\" class=\"headerlink\" title=\"4.1 关系代数运算\"></a>4.1 关系代数运算</h2><p>传统的几何运算。并、差、交、笛卡尔积等。<br>专门的关系运算。选择、投影、连接等。    </p>\n<h3 id=\"4-1-1-关系运算\"><a href=\"#4-1-1-关系运算\" class=\"headerlink\" title=\"4.1.1 关系运算\"></a>4.1.1 关系运算</h3><p>(1)并(Union)<br>(2)差（Difference）<br>(3)交（Intersect）</p>\n<p><img src=\"2018-08-20-shujukujichu1\\Image.png\" alt=\"图片\"></p>\n<h3 id=\"4-1-2专门的关系运算\"><a href=\"#4-1-2专门的关系运算\" class=\"headerlink\" title=\"4.1.2专门的关系运算\"></a>4.1.2专门的关系运算</h3><p>(1)选择<br>select <em> from students where 性别=’男’<br>(2)投影<br>select 学号，姓名，身份证号 from students<br>(3)连接<br>连接是关系的横向结合。连接运算将两个关系模式拼接成一个更宽的关系模式，生成新关系中包含满足条件的元祖。连接过程是通过连接条件来控制的，连接条件中将出现两个表中的公共属性名，或者具有相同语义、可比的属性。连接结果是满足条件的所有记录，连接运算需要两个表作为操作对象，操作结果产生一个关系。若需要连接两个以上的表，则应当两两进行连接。一般可以描述为：JOIN &lt;关系1&gt; AND &lt;关系2&gt; WHERE &lt;条件&gt;SELECT </em>　FROM STUDENTS A INNER JOIN SECORES B ON A.学号=B.学号该命令查出学生表和成绩表中有相同学号的全部信息。 </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"4-1-关系代数运算\"><a href=\"#4-1-关系代数运算\" class=\"headerlink\" title=\"4.1 关系代数运算\"></a>4.1 关系代数运算</h2><p>传统的几何运算。并、差、交、笛卡尔积等。<br>专门的关系运算。选择、投影、连接等。    </p>\n<h3 id=\"4-1-1-关系运算\"><a href=\"#4-1-1-关系运算\" class=\"headerlink\" title=\"4.1.1 关系运算\"></a>4.1.1 关系运算</h3><p>(1)并(Union)<br>(2)差（Difference）<br>(3)交（Intersect）</p>\n<p><img src=\"2018-08-20-shujukujichu1\\Image.png\" alt=\"图片\"></p>\n<h3 id=\"4-1-2专门的关系运算\"><a href=\"#4-1-2专门的关系运算\" class=\"headerlink\" title=\"4.1.2专门的关系运算\"></a>4.1.2专门的关系运算</h3><p>(1)选择<br>select <em> from students where 性别=’男’<br>(2)投影<br>select 学号，姓名，身份证号 from students<br>(3)连接<br>连接是关系的横向结合。连接运算将两个关系模式拼接成一个更宽的关系模式，生成新关系中包含满足条件的元祖。连接过程是通过连接条件来控制的，连接条件中将出现两个表中的公共属性名，或者具有相同语义、可比的属性。连接结果是满足条件的所有记录，连接运算需要两个表作为操作对象，操作结果产生一个关系。若需要连接两个以上的表，则应当两两进行连接。一般可以描述为：JOIN &lt;关系1&gt; AND &lt;关系2&gt; WHERE &lt;条件&gt;SELECT </em>　FROM STUDENTS A INNER JOIN SECORES B ON A.学号=B.学号该命令查出学生表和成绩表中有相同学号的全部信息。 </p>\n"},{"title":"Linux 下 Oracle 命令行工具 Rlwrap","comments":1,"date":"2018-08-20T09:05:48.000Z","updated":"2018-08-20T09:05:48.000Z","_content":"\n如果您对Rlwrap这个工具不是很熟悉，建议参考一下这篇文章：[ Rlwrap Linux 上实现 Windows 的 SQL*Plus 保存 SQL 历史记录功能](http://space.itpub.net/519536/viewspace-614104)，这篇文章描述了如何部署安装 Rlwrap 工具。\n\n这个工具可以理解为在 UNIX 或 Linux 平台下模拟 Windows 下 SQL*Plus 的操作习惯（当然不仅限于此），同时在  SQL*Plus 中可以模拟 UNIX 或 Linux 的操作习惯，一旦掌握，可以提高在 SQL*Plus 中的操作效率。 \n\n以下是我尝试出来的一下快捷键，分享在此。\n```\nCtrl+L 将当前行置顶，相当于完成清屏的动作\nCtrl+P 上一条命令\nCtrl+N 下一条命令\nCtrl+U 从光标处删除到行首Ctrl+W 向前删除一个单词\nCtrl+R 增量搜索用过的命令，反复使用\nCtrl+R可以向前继续寻找包含关键字的命令，但不能循环\nCtrl+T 当前字母与前面的字母交换，最后的时候是最后两个字母交换\nCtrl+Z 后台运行，使用fg调出\nCtrl+XX 光标最近两次位置交换\nCtrl+B 光标向前移动\nCtrl+J 相当于Enter键，小心勿执行语句\nCtrl+O 相当于Enter键，小心勿执行语句\nCtrl+M 相当于Enter键，小心勿执行语句\nCtrl+H 相当于Backspace删除键\n```\n\n每一个快捷键都有其适用场合，尤其是`Ctrl + L` 可以非常便捷的完成清屏的作用，慢慢体会吧。如果您发现了更多有趣的使用方法，欢迎分享。\n\n看一个真正的专家操作命令行绝对是一种很好的体验-光标在单词之间来回穿梭，命令行不同的滚动。在这里强烈建立适应GUI节目的开发者尝试一下在提示符下面工作。但是事情也不是那么简单，还是需要知道“如何去做”。在单词之间跳转，使用 `Ctrl + 左右键`。`Ctrl + a` 跳到本行的行首，`Ctrl + e` 则跳到页尾。`Ctrl + u` 删除当前光标前面的文字 `Ctrl + k` -删除当前光标后面的文字 `Ctrl + w` 和`Alt + d` 对于当前的单词进行删除操作，`w`删除光标前面的单词的字符，`d` 则删除后面的字符`Alt + Backsapce` 删除当前光标后面的单词，如果删除错误，使用`Ctrl + y` 进行恢复`Ctrl + L` 进行清屏操作。","source":"_posts/2018-08-21-rlwrap.md","raw":"---\ntitle: Linux 下 Oracle 命令行工具 Rlwrap\ncomments: true\ndate: 2018-08-20 17:05:48\nupdated: 2018-08-20 17:05:48\ntags: Oracle\ncategories: \n- Program\n- Oracle\n---\n\n如果您对Rlwrap这个工具不是很熟悉，建议参考一下这篇文章：[ Rlwrap Linux 上实现 Windows 的 SQL*Plus 保存 SQL 历史记录功能](http://space.itpub.net/519536/viewspace-614104)，这篇文章描述了如何部署安装 Rlwrap 工具。\n\n这个工具可以理解为在 UNIX 或 Linux 平台下模拟 Windows 下 SQL*Plus 的操作习惯（当然不仅限于此），同时在  SQL*Plus 中可以模拟 UNIX 或 Linux 的操作习惯，一旦掌握，可以提高在 SQL*Plus 中的操作效率。 \n\n以下是我尝试出来的一下快捷键，分享在此。\n```\nCtrl+L 将当前行置顶，相当于完成清屏的动作\nCtrl+P 上一条命令\nCtrl+N 下一条命令\nCtrl+U 从光标处删除到行首Ctrl+W 向前删除一个单词\nCtrl+R 增量搜索用过的命令，反复使用\nCtrl+R可以向前继续寻找包含关键字的命令，但不能循环\nCtrl+T 当前字母与前面的字母交换，最后的时候是最后两个字母交换\nCtrl+Z 后台运行，使用fg调出\nCtrl+XX 光标最近两次位置交换\nCtrl+B 光标向前移动\nCtrl+J 相当于Enter键，小心勿执行语句\nCtrl+O 相当于Enter键，小心勿执行语句\nCtrl+M 相当于Enter键，小心勿执行语句\nCtrl+H 相当于Backspace删除键\n```\n\n每一个快捷键都有其适用场合，尤其是`Ctrl + L` 可以非常便捷的完成清屏的作用，慢慢体会吧。如果您发现了更多有趣的使用方法，欢迎分享。\n\n看一个真正的专家操作命令行绝对是一种很好的体验-光标在单词之间来回穿梭，命令行不同的滚动。在这里强烈建立适应GUI节目的开发者尝试一下在提示符下面工作。但是事情也不是那么简单，还是需要知道“如何去做”。在单词之间跳转，使用 `Ctrl + 左右键`。`Ctrl + a` 跳到本行的行首，`Ctrl + e` 则跳到页尾。`Ctrl + u` 删除当前光标前面的文字 `Ctrl + k` -删除当前光标后面的文字 `Ctrl + w` 和`Alt + d` 对于当前的单词进行删除操作，`w`删除光标前面的单词的字符，`d` 则删除后面的字符`Alt + Backsapce` 删除当前光标后面的单词，如果删除错误，使用`Ctrl + y` 进行恢复`Ctrl + L` 进行清屏操作。","slug":"rlwrap","published":1,"layout":"post","photos":[],"link":"","_id":"cjl9jao9d0006wswk676h5zve","content":"<p>如果您对Rlwrap这个工具不是很熟悉，建议参考一下这篇文章：<a href=\"http://space.itpub.net/519536/viewspace-614104\" target=\"_blank\" rel=\"noopener\"> Rlwrap Linux 上实现 Windows 的 SQL*Plus 保存 SQL 历史记录功能</a>，这篇文章描述了如何部署安装 Rlwrap 工具。</p>\n<p>这个工具可以理解为在 UNIX 或 Linux 平台下模拟 Windows 下 SQL<em>Plus 的操作习惯（当然不仅限于此），同时在  SQL</em>Plus 中可以模拟 UNIX 或 Linux 的操作习惯，一旦掌握，可以提高在 SQL*Plus 中的操作效率。 </p>\n<p>以下是我尝试出来的一下快捷键，分享在此。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+L 将当前行置顶，相当于完成清屏的动作</span><br><span class=\"line\">Ctrl+P 上一条命令</span><br><span class=\"line\">Ctrl+N 下一条命令</span><br><span class=\"line\">Ctrl+U 从光标处删除到行首Ctrl+W 向前删除一个单词</span><br><span class=\"line\">Ctrl+R 增量搜索用过的命令，反复使用</span><br><span class=\"line\">Ctrl+R可以向前继续寻找包含关键字的命令，但不能循环</span><br><span class=\"line\">Ctrl+T 当前字母与前面的字母交换，最后的时候是最后两个字母交换</span><br><span class=\"line\">Ctrl+Z 后台运行，使用fg调出</span><br><span class=\"line\">Ctrl+XX 光标最近两次位置交换</span><br><span class=\"line\">Ctrl+B 光标向前移动</span><br><span class=\"line\">Ctrl+J 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+O 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+M 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+H 相当于Backspace删除键</span><br></pre></td></tr></table></figure></p>\n<p>每一个快捷键都有其适用场合，尤其是<code>Ctrl + L</code> 可以非常便捷的完成清屏的作用，慢慢体会吧。如果您发现了更多有趣的使用方法，欢迎分享。</p>\n<p>看一个真正的专家操作命令行绝对是一种很好的体验-光标在单词之间来回穿梭，命令行不同的滚动。在这里强烈建立适应GUI节目的开发者尝试一下在提示符下面工作。但是事情也不是那么简单，还是需要知道“如何去做”。在单词之间跳转，使用 <code>Ctrl + 左右键</code>。<code>Ctrl + a</code> 跳到本行的行首，<code>Ctrl + e</code> 则跳到页尾。<code>Ctrl + u</code> 删除当前光标前面的文字 <code>Ctrl + k</code> -删除当前光标后面的文字 <code>Ctrl + w</code> 和<code>Alt + d</code> 对于当前的单词进行删除操作，<code>w</code>删除光标前面的单词的字符，<code>d</code> 则删除后面的字符<code>Alt + Backsapce</code> 删除当前光标后面的单词，如果删除错误，使用<code>Ctrl + y</code> 进行恢复<code>Ctrl + L</code> 进行清屏操作。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>如果您对Rlwrap这个工具不是很熟悉，建议参考一下这篇文章：<a href=\"http://space.itpub.net/519536/viewspace-614104\" target=\"_blank\" rel=\"noopener\"> Rlwrap Linux 上实现 Windows 的 SQL*Plus 保存 SQL 历史记录功能</a>，这篇文章描述了如何部署安装 Rlwrap 工具。</p>\n<p>这个工具可以理解为在 UNIX 或 Linux 平台下模拟 Windows 下 SQL<em>Plus 的操作习惯（当然不仅限于此），同时在  SQL</em>Plus 中可以模拟 UNIX 或 Linux 的操作习惯，一旦掌握，可以提高在 SQL*Plus 中的操作效率。 </p>\n<p>以下是我尝试出来的一下快捷键，分享在此。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+L 将当前行置顶，相当于完成清屏的动作</span><br><span class=\"line\">Ctrl+P 上一条命令</span><br><span class=\"line\">Ctrl+N 下一条命令</span><br><span class=\"line\">Ctrl+U 从光标处删除到行首Ctrl+W 向前删除一个单词</span><br><span class=\"line\">Ctrl+R 增量搜索用过的命令，反复使用</span><br><span class=\"line\">Ctrl+R可以向前继续寻找包含关键字的命令，但不能循环</span><br><span class=\"line\">Ctrl+T 当前字母与前面的字母交换，最后的时候是最后两个字母交换</span><br><span class=\"line\">Ctrl+Z 后台运行，使用fg调出</span><br><span class=\"line\">Ctrl+XX 光标最近两次位置交换</span><br><span class=\"line\">Ctrl+B 光标向前移动</span><br><span class=\"line\">Ctrl+J 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+O 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+M 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+H 相当于Backspace删除键</span><br></pre></td></tr></table></figure></p>\n<p>每一个快捷键都有其适用场合，尤其是<code>Ctrl + L</code> 可以非常便捷的完成清屏的作用，慢慢体会吧。如果您发现了更多有趣的使用方法，欢迎分享。</p>\n<p>看一个真正的专家操作命令行绝对是一种很好的体验-光标在单词之间来回穿梭，命令行不同的滚动。在这里强烈建立适应GUI节目的开发者尝试一下在提示符下面工作。但是事情也不是那么简单，还是需要知道“如何去做”。在单词之间跳转，使用 <code>Ctrl + 左右键</code>。<code>Ctrl + a</code> 跳到本行的行首，<code>Ctrl + e</code> 则跳到页尾。<code>Ctrl + u</code> 删除当前光标前面的文字 <code>Ctrl + k</code> -删除当前光标后面的文字 <code>Ctrl + w</code> 和<code>Alt + d</code> 对于当前的单词进行删除操作，<code>w</code>删除光标前面的单词的字符，<code>d</code> 则删除后面的字符<code>Alt + Backsapce</code> 删除当前光标后面的单词，如果删除错误，使用<code>Ctrl + y</code> 进行恢复<code>Ctrl + L</code> 进行清屏操作。</p>\n"},{"title":"Git 常用命令小结","comments":1,"date":"2018-08-22T01:23:26.000Z","updated":"2018-08-22T01:23:26.000Z","_content":"## 前言\n\n阅读本篇文章需要读者了解 Git 的基本用法，如果你对 Git 完全不了解，请先行移步了解 Git 基础。\n下面是几份本人觉得不错的 Git 入门教程，新手可以参考。\n- [Git权威指南](http://www.worldhello.net/gotgit/index.html) | 国内一位大牛写的介绍 Git 用法的开源书籍，很详实\n- [Pro Git](https://git-scm.com/book/zh/v2) | Git 官方社区编著的介绍 Git 用法的书籍\n\n#### 创建新分支，并且切换到新分支\n```bash\n> git checkout -b <new_branch_name> # 根据当前所在分支，创建新分支\n> git checkout -b <new_branch_name> <remote_name>/<remote_branch_name> # 根据远程分支，创建分支\n```\n#### 切换分支\n\n`> git checkout <branch_name>`\n\n#### 删除分支（本地/远程）\n\n```bash\n> git branch -d <branch_name> # 删除本地分支，当该分支没有关联远程分支或者关联的远程分支已经合并过，才会被允许删除\n> git branch -D <branch_name> # 强制删除本地分支\n> git push <remote_name> -d <branch_name> # 删除远程分支，git v1.7.0（2010年的版本）之后支持\n> git push <remote_name> :<branch_name> # 删除远程分支，旧方式，新的也兼容这种\n\n```\n\n分支重命名\n\n```bash\n> git branch (-m | -M) [<oldbranch>] <newbranch> # 重命名分支语法，-M 强制重命名，具体参见 git branch --help\n> git branch -m <newbranch> # 重命名当前分支\n> git branch -m <oldbranch> <newbranch> # 重命名指定分支\n\n```\n\n重写 commit 信息\n\n```bash\n> git rebase -i HEAD~<num> # 交互式地重写 commit 信息，将会用终端默认的编辑器进行操作\n\n下面的例子中，保存之后，将会使得[328f67b Update Rust]这一条合并到[f55b189 Update cookbook]\n\npick 164bf1c Update cookbook\npick f55b189 Update cookbook\nf 328f67b Update Rust\npick 9834843 Update cookbook\n\n# Rebase 0b6762c..9834843 onto 0b6762c (4 commands)\n#\n# Commands:\n# p, pick = use commit\n# r, reword = use commit, but edit the commit message\n# e, edit = use commit, but stop for amending\n# s, squash = use commit, but meld into previous commit\n# f, fixup = like \"squash\", but discard this commit's log message\n# x, exec = run command (the rest of the line) using shell\n# d, drop = remove commit\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\n\n```\n\n> 注意：最好不要重写公共的 commit 信息，这会给协作者带来不必要的困惑，推荐仅仅重写本地没有提交的 commit 信息。假设，你非得重写远程 commit 信息，请使用 git push -f 来强制更新远程代码。\n\n#### 从一个分支摘取 commit 到另一个分支\n\n```bash\n> git checkout <target-branch> # 切换到目标分支\n> git cherry-pick <commit_id> # 将源分支的 commit 摘取到目的分支中\n```\n\n#### 想要切换分支时，发现本地有一些写了一半的代码\n\n```bash\n> git stash # 将当前工作目录内容储藏\n> git stash --include-untracked # 如果新添加了文件，将其一并储藏\n> git stash pop # 将储藏的内容恢复到当前分支\n```\n\n#### 回版、撤销commit\n\n```bash\n> git reset --hard <commit_id> # 彻底回退到指定 commit\n```\n\n![img](2018-08-22-Git-changyongmingling\\726930-5079e6da8900d0e2.jpg) \n\n#### 丢弃本地新添加的文件\n\n`> git clean `\n\n#### 丢弃新的改动\n\n`> git checkout . # 注意末尾有个句号`\n\n## 参考资料\n\n- [Git权威指南](http://www.worldhello.net/gotgit/index.html) \n\n- [Pro Git](https://git-scm.com/book/zh/v2)\n\n- Git cheatsheet\n\n- 图解Git\n\n\n转载：本文非原创转载[简书](https://www.jianshu.com/p/15e3a4873d1d)","source":"_posts/2018-08-22-Git-changyongmingling.md","raw":"---\ntitle: Git 常用命令小结\ncomments: true\ndate: 2018-08-22 09:23:26\nupdated: 2018-08-22 09:23:26\ntags: [Git,版本控制]\ncategories: \n- Program \n- Git\n---\n## 前言\n\n阅读本篇文章需要读者了解 Git 的基本用法，如果你对 Git 完全不了解，请先行移步了解 Git 基础。\n下面是几份本人觉得不错的 Git 入门教程，新手可以参考。\n- [Git权威指南](http://www.worldhello.net/gotgit/index.html) | 国内一位大牛写的介绍 Git 用法的开源书籍，很详实\n- [Pro Git](https://git-scm.com/book/zh/v2) | Git 官方社区编著的介绍 Git 用法的书籍\n\n#### 创建新分支，并且切换到新分支\n```bash\n> git checkout -b <new_branch_name> # 根据当前所在分支，创建新分支\n> git checkout -b <new_branch_name> <remote_name>/<remote_branch_name> # 根据远程分支，创建分支\n```\n#### 切换分支\n\n`> git checkout <branch_name>`\n\n#### 删除分支（本地/远程）\n\n```bash\n> git branch -d <branch_name> # 删除本地分支，当该分支没有关联远程分支或者关联的远程分支已经合并过，才会被允许删除\n> git branch -D <branch_name> # 强制删除本地分支\n> git push <remote_name> -d <branch_name> # 删除远程分支，git v1.7.0（2010年的版本）之后支持\n> git push <remote_name> :<branch_name> # 删除远程分支，旧方式，新的也兼容这种\n\n```\n\n分支重命名\n\n```bash\n> git branch (-m | -M) [<oldbranch>] <newbranch> # 重命名分支语法，-M 强制重命名，具体参见 git branch --help\n> git branch -m <newbranch> # 重命名当前分支\n> git branch -m <oldbranch> <newbranch> # 重命名指定分支\n\n```\n\n重写 commit 信息\n\n```bash\n> git rebase -i HEAD~<num> # 交互式地重写 commit 信息，将会用终端默认的编辑器进行操作\n\n下面的例子中，保存之后，将会使得[328f67b Update Rust]这一条合并到[f55b189 Update cookbook]\n\npick 164bf1c Update cookbook\npick f55b189 Update cookbook\nf 328f67b Update Rust\npick 9834843 Update cookbook\n\n# Rebase 0b6762c..9834843 onto 0b6762c (4 commands)\n#\n# Commands:\n# p, pick = use commit\n# r, reword = use commit, but edit the commit message\n# e, edit = use commit, but stop for amending\n# s, squash = use commit, but meld into previous commit\n# f, fixup = like \"squash\", but discard this commit's log message\n# x, exec = run command (the rest of the line) using shell\n# d, drop = remove commit\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\n\n```\n\n> 注意：最好不要重写公共的 commit 信息，这会给协作者带来不必要的困惑，推荐仅仅重写本地没有提交的 commit 信息。假设，你非得重写远程 commit 信息，请使用 git push -f 来强制更新远程代码。\n\n#### 从一个分支摘取 commit 到另一个分支\n\n```bash\n> git checkout <target-branch> # 切换到目标分支\n> git cherry-pick <commit_id> # 将源分支的 commit 摘取到目的分支中\n```\n\n#### 想要切换分支时，发现本地有一些写了一半的代码\n\n```bash\n> git stash # 将当前工作目录内容储藏\n> git stash --include-untracked # 如果新添加了文件，将其一并储藏\n> git stash pop # 将储藏的内容恢复到当前分支\n```\n\n#### 回版、撤销commit\n\n```bash\n> git reset --hard <commit_id> # 彻底回退到指定 commit\n```\n\n![img](2018-08-22-Git-changyongmingling\\726930-5079e6da8900d0e2.jpg) \n\n#### 丢弃本地新添加的文件\n\n`> git clean `\n\n#### 丢弃新的改动\n\n`> git checkout . # 注意末尾有个句号`\n\n## 参考资料\n\n- [Git权威指南](http://www.worldhello.net/gotgit/index.html) \n\n- [Pro Git](https://git-scm.com/book/zh/v2)\n\n- Git cheatsheet\n\n- 图解Git\n\n\n转载：本文非原创转载[简书](https://www.jianshu.com/p/15e3a4873d1d)","slug":"Git-changyongmingling","published":1,"layout":"post","photos":[],"link":"","_id":"cjl9jao9k0008wswkkf8kpz3k","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>阅读本篇文章需要读者了解 Git 的基本用法，如果你对 Git 完全不了解，请先行移步了解 Git 基础。<br>下面是几份本人觉得不错的 Git 入门教程，新手可以参考。</p>\n<ul>\n<li><a href=\"http://www.worldhello.net/gotgit/index.html\" target=\"_blank\" rel=\"noopener\">Git权威指南</a> | 国内一位大牛写的介绍 Git 用法的开源书籍，很详实</li>\n<li><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Pro Git</a> | Git 官方社区编著的介绍 Git 用法的书籍</li>\n</ul>\n<h4 id=\"创建新分支，并且切换到新分支\"><a href=\"#创建新分支，并且切换到新分支\" class=\"headerlink\" title=\"创建新分支，并且切换到新分支\"></a>创建新分支，并且切换到新分支</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout -b &lt;new_branch_name&gt; <span class=\"comment\"># 根据当前所在分支，创建新分支</span></span><br><span class=\"line\">&gt; git checkout -b &lt;new_branch_name&gt; &lt;remote_name&gt;/&lt;remote_branch_name&gt; <span class=\"comment\"># 根据远程分支，创建分支</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"切换分支\"><a href=\"#切换分支\" class=\"headerlink\" title=\"切换分支\"></a>切换分支</h4><p><code>&gt; git checkout &lt;branch_name&gt;</code></p>\n<h4 id=\"删除分支（本地-远程）\"><a href=\"#删除分支（本地-远程）\" class=\"headerlink\" title=\"删除分支（本地/远程）\"></a>删除分支（本地/远程）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch -d &lt;branch_name&gt; <span class=\"comment\"># 删除本地分支，当该分支没有关联远程分支或者关联的远程分支已经合并过，才会被允许删除</span></span><br><span class=\"line\">&gt; git branch -D &lt;branch_name&gt; <span class=\"comment\"># 强制删除本地分支</span></span><br><span class=\"line\">&gt; git push &lt;remote_name&gt; -d &lt;branch_name&gt; <span class=\"comment\"># 删除远程分支，git v1.7.0（2010年的版本）之后支持</span></span><br><span class=\"line\">&gt; git push &lt;remote_name&gt; :&lt;branch_name&gt; <span class=\"comment\"># 删除远程分支，旧方式，新的也兼容这种</span></span><br></pre></td></tr></table></figure>\n<p>分支重命名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch (-m | -M) [&lt;oldbranch&gt;] &lt;newbranch&gt; <span class=\"comment\"># 重命名分支语法，-M 强制重命名，具体参见 git branch --help</span></span><br><span class=\"line\">&gt; git branch -m &lt;newbranch&gt; <span class=\"comment\"># 重命名当前分支</span></span><br><span class=\"line\">&gt; git branch -m &lt;oldbranch&gt; &lt;newbranch&gt; <span class=\"comment\"># 重命名指定分支</span></span><br></pre></td></tr></table></figure>\n<p>重写 commit 信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git rebase -i HEAD~&lt;num&gt; <span class=\"comment\"># 交互式地重写 commit 信息，将会用终端默认的编辑器进行操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">下面的例子中，保存之后，将会使得[328f67b Update Rust]这一条合并到[f55b189 Update cookbook]</span><br><span class=\"line\"></span><br><span class=\"line\">pick 164bf1c Update cookbook</span><br><span class=\"line\">pick f55b189 Update cookbook</span><br><span class=\"line\">f 328f67b Update Rust</span><br><span class=\"line\">pick 9834843 Update cookbook</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Rebase 0b6762c..9834843 onto 0b6762c (4 commands)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Commands:</span></span><br><span class=\"line\"><span class=\"comment\"># p, pick = use commit</span></span><br><span class=\"line\"><span class=\"comment\"># r, reword = use commit, but edit the commit message</span></span><br><span class=\"line\"><span class=\"comment\"># e, edit = use commit, but stop for amending</span></span><br><span class=\"line\"><span class=\"comment\"># s, squash = use commit, but meld into previous commit</span></span><br><span class=\"line\"><span class=\"comment\"># f, fixup = like \"squash\", but discard this commit's log message</span></span><br><span class=\"line\"><span class=\"comment\"># x, exec = run command (the rest of the line) using shell</span></span><br><span class=\"line\"><span class=\"comment\"># d, drop = remove commit</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Note that empty commits are commented out</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：最好不要重写公共的 commit 信息，这会给协作者带来不必要的困惑，推荐仅仅重写本地没有提交的 commit 信息。假设，你非得重写远程 commit 信息，请使用 git push -f 来强制更新远程代码。</p>\n</blockquote>\n<h4 id=\"从一个分支摘取-commit-到另一个分支\"><a href=\"#从一个分支摘取-commit-到另一个分支\" class=\"headerlink\" title=\"从一个分支摘取 commit 到另一个分支\"></a>从一个分支摘取 commit 到另一个分支</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout &lt;target-branch&gt; <span class=\"comment\"># 切换到目标分支</span></span><br><span class=\"line\">&gt; git cherry-pick &lt;commit_id&gt; <span class=\"comment\"># 将源分支的 commit 摘取到目的分支中</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"想要切换分支时，发现本地有一些写了一半的代码\"><a href=\"#想要切换分支时，发现本地有一些写了一半的代码\" class=\"headerlink\" title=\"想要切换分支时，发现本地有一些写了一半的代码\"></a>想要切换分支时，发现本地有一些写了一半的代码</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git stash <span class=\"comment\"># 将当前工作目录内容储藏</span></span><br><span class=\"line\">&gt; git stash --include-untracked <span class=\"comment\"># 如果新添加了文件，将其一并储藏</span></span><br><span class=\"line\">&gt; git stash pop <span class=\"comment\"># 将储藏的内容恢复到当前分支</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"回版、撤销commit\"><a href=\"#回版、撤销commit\" class=\"headerlink\" title=\"回版、撤销commit\"></a>回版、撤销commit</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git reset --hard &lt;commit_id&gt; <span class=\"comment\"># 彻底回退到指定 commit</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"2018-08-22-Git-changyongmingling\\726930-5079e6da8900d0e2.jpg\" alt=\"img\"> </p>\n<h4 id=\"丢弃本地新添加的文件\"><a href=\"#丢弃本地新添加的文件\" class=\"headerlink\" title=\"丢弃本地新添加的文件\"></a>丢弃本地新添加的文件</h4><p><code>&gt; git clean</code></p>\n<h4 id=\"丢弃新的改动\"><a href=\"#丢弃新的改动\" class=\"headerlink\" title=\"丢弃新的改动\"></a>丢弃新的改动</h4><p><code>&gt; git checkout . # 注意末尾有个句号</code></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><p><a href=\"http://www.worldhello.net/gotgit/index.html\" target=\"_blank\" rel=\"noopener\">Git权威指南</a> </p>\n</li>\n<li><p><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n</li>\n<li><p>Git cheatsheet</p>\n</li>\n<li><p>图解Git</p>\n</li>\n</ul>\n<p>转载：本文非原创转载<a href=\"https://www.jianshu.com/p/15e3a4873d1d\" target=\"_blank\" rel=\"noopener\">简书</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>阅读本篇文章需要读者了解 Git 的基本用法，如果你对 Git 完全不了解，请先行移步了解 Git 基础。<br>下面是几份本人觉得不错的 Git 入门教程，新手可以参考。</p>\n<ul>\n<li><a href=\"http://www.worldhello.net/gotgit/index.html\" target=\"_blank\" rel=\"noopener\">Git权威指南</a> | 国内一位大牛写的介绍 Git 用法的开源书籍，很详实</li>\n<li><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Pro Git</a> | Git 官方社区编著的介绍 Git 用法的书籍</li>\n</ul>\n<h4 id=\"创建新分支，并且切换到新分支\"><a href=\"#创建新分支，并且切换到新分支\" class=\"headerlink\" title=\"创建新分支，并且切换到新分支\"></a>创建新分支，并且切换到新分支</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout -b &lt;new_branch_name&gt; <span class=\"comment\"># 根据当前所在分支，创建新分支</span></span><br><span class=\"line\">&gt; git checkout -b &lt;new_branch_name&gt; &lt;remote_name&gt;/&lt;remote_branch_name&gt; <span class=\"comment\"># 根据远程分支，创建分支</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"切换分支\"><a href=\"#切换分支\" class=\"headerlink\" title=\"切换分支\"></a>切换分支</h4><p><code>&gt; git checkout &lt;branch_name&gt;</code></p>\n<h4 id=\"删除分支（本地-远程）\"><a href=\"#删除分支（本地-远程）\" class=\"headerlink\" title=\"删除分支（本地/远程）\"></a>删除分支（本地/远程）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch -d &lt;branch_name&gt; <span class=\"comment\"># 删除本地分支，当该分支没有关联远程分支或者关联的远程分支已经合并过，才会被允许删除</span></span><br><span class=\"line\">&gt; git branch -D &lt;branch_name&gt; <span class=\"comment\"># 强制删除本地分支</span></span><br><span class=\"line\">&gt; git push &lt;remote_name&gt; -d &lt;branch_name&gt; <span class=\"comment\"># 删除远程分支，git v1.7.0（2010年的版本）之后支持</span></span><br><span class=\"line\">&gt; git push &lt;remote_name&gt; :&lt;branch_name&gt; <span class=\"comment\"># 删除远程分支，旧方式，新的也兼容这种</span></span><br></pre></td></tr></table></figure>\n<p>分支重命名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch (-m | -M) [&lt;oldbranch&gt;] &lt;newbranch&gt; <span class=\"comment\"># 重命名分支语法，-M 强制重命名，具体参见 git branch --help</span></span><br><span class=\"line\">&gt; git branch -m &lt;newbranch&gt; <span class=\"comment\"># 重命名当前分支</span></span><br><span class=\"line\">&gt; git branch -m &lt;oldbranch&gt; &lt;newbranch&gt; <span class=\"comment\"># 重命名指定分支</span></span><br></pre></td></tr></table></figure>\n<p>重写 commit 信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git rebase -i HEAD~&lt;num&gt; <span class=\"comment\"># 交互式地重写 commit 信息，将会用终端默认的编辑器进行操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">下面的例子中，保存之后，将会使得[328f67b Update Rust]这一条合并到[f55b189 Update cookbook]</span><br><span class=\"line\"></span><br><span class=\"line\">pick 164bf1c Update cookbook</span><br><span class=\"line\">pick f55b189 Update cookbook</span><br><span class=\"line\">f 328f67b Update Rust</span><br><span class=\"line\">pick 9834843 Update cookbook</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Rebase 0b6762c..9834843 onto 0b6762c (4 commands)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Commands:</span></span><br><span class=\"line\"><span class=\"comment\"># p, pick = use commit</span></span><br><span class=\"line\"><span class=\"comment\"># r, reword = use commit, but edit the commit message</span></span><br><span class=\"line\"><span class=\"comment\"># e, edit = use commit, but stop for amending</span></span><br><span class=\"line\"><span class=\"comment\"># s, squash = use commit, but meld into previous commit</span></span><br><span class=\"line\"><span class=\"comment\"># f, fixup = like \"squash\", but discard this commit's log message</span></span><br><span class=\"line\"><span class=\"comment\"># x, exec = run command (the rest of the line) using shell</span></span><br><span class=\"line\"><span class=\"comment\"># d, drop = remove commit</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Note that empty commits are commented out</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：最好不要重写公共的 commit 信息，这会给协作者带来不必要的困惑，推荐仅仅重写本地没有提交的 commit 信息。假设，你非得重写远程 commit 信息，请使用 git push -f 来强制更新远程代码。</p>\n</blockquote>\n<h4 id=\"从一个分支摘取-commit-到另一个分支\"><a href=\"#从一个分支摘取-commit-到另一个分支\" class=\"headerlink\" title=\"从一个分支摘取 commit 到另一个分支\"></a>从一个分支摘取 commit 到另一个分支</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout &lt;target-branch&gt; <span class=\"comment\"># 切换到目标分支</span></span><br><span class=\"line\">&gt; git cherry-pick &lt;commit_id&gt; <span class=\"comment\"># 将源分支的 commit 摘取到目的分支中</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"想要切换分支时，发现本地有一些写了一半的代码\"><a href=\"#想要切换分支时，发现本地有一些写了一半的代码\" class=\"headerlink\" title=\"想要切换分支时，发现本地有一些写了一半的代码\"></a>想要切换分支时，发现本地有一些写了一半的代码</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git stash <span class=\"comment\"># 将当前工作目录内容储藏</span></span><br><span class=\"line\">&gt; git stash --include-untracked <span class=\"comment\"># 如果新添加了文件，将其一并储藏</span></span><br><span class=\"line\">&gt; git stash pop <span class=\"comment\"># 将储藏的内容恢复到当前分支</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"回版、撤销commit\"><a href=\"#回版、撤销commit\" class=\"headerlink\" title=\"回版、撤销commit\"></a>回版、撤销commit</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git reset --hard &lt;commit_id&gt; <span class=\"comment\"># 彻底回退到指定 commit</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"2018-08-22-Git-changyongmingling\\726930-5079e6da8900d0e2.jpg\" alt=\"img\"> </p>\n<h4 id=\"丢弃本地新添加的文件\"><a href=\"#丢弃本地新添加的文件\" class=\"headerlink\" title=\"丢弃本地新添加的文件\"></a>丢弃本地新添加的文件</h4><p><code>&gt; git clean</code></p>\n<h4 id=\"丢弃新的改动\"><a href=\"#丢弃新的改动\" class=\"headerlink\" title=\"丢弃新的改动\"></a>丢弃新的改动</h4><p><code>&gt; git checkout . # 注意末尾有个句号</code></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><p><a href=\"http://www.worldhello.net/gotgit/index.html\" target=\"_blank\" rel=\"noopener\">Git权威指南</a> </p>\n</li>\n<li><p><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n</li>\n<li><p>Git cheatsheet</p>\n</li>\n<li><p>图解Git</p>\n</li>\n</ul>\n<p>转载：本文非原创转载<a href=\"https://www.jianshu.com/p/15e3a4873d1d\" target=\"_blank\" rel=\"noopener\">简书</a></p>\n"},{"title":"tools","comments":1,"date":"2018-08-22T14:26:12.000Z","updated":"2018-08-22T14:26:12.000Z","description":"tools&#58; 推荐 Windows 和 ios 的 apps 以及日常使用的电子产品。","_content":"\n{% cq %}\n君子生非异也，善假于物也。\n\n荀子\n{% endcq %}\n\n## 说明\n\n- __主要介绍 Windows、[iOS](#iOS) 的 Apps__（下文 Apple 指代  iOS）。\n    - 适合自己的工具，才是最好的工具，所以本文仅供参考，自行尝试最重要。\n    - 笔者是工具控，目力之内看起来还有点用的工具都会折腾过一遍。\n        - 过程中浪费了许多时间精力在很少派上用场甚至无用的工具上。\n        - 善于发现生活中关键的效率瓶颈，再根据需求寻找或创造工具就足够了。\n        - 因为折腾工具而忘记了把事做成的初心，实在是南辕北辙。\n- __App 选择原则__\n    - 「常用」的工具才值得折腾，不常用的凑合着用就行了。\n    - 「实用」最重要，美观次之，价格别太贵就行。\n    - 「稳定」：不能时常引起系统崩溃，起码提升效率的收益得超过操作系统崩溃重启的损失。\n    - 「简洁易用」：满足实际的需求即可，不需要花哨、多余的功能。\n- 参考相关文章\n    - 《[Mac 效率指南](/mac/efficiency)》\n    - 《[Mac 快捷键](/mac/shortcuts)》\n- 参考阅读\n    - [__少数派__](http://sspai.com/) - 高质量 App 推荐媒体，关于 iOS、Mac、硬件。\n    - [__Best App__](https://github.com/hzlzh/Best-App) - List in GitHub\n- 字体格式的含义\n    - ~~删除线~~ 标识的一定是我现在不用的 Apps。\n\n---\n\n## 软件\n\n### 常用\n\n- 网络访问\n\n  - Chrome\n    - 配合 [__cVim__](https://chrome.google.com/webstore/detail/cvim/ihlenndgcmojhcghmfjfneahoeklbjjh) 拓展，可在浏览器内 __使用 Vim 键位__ 浏览网页、操作浏览器！键盘党神器\n      - 可惜它无法在页面未加载完毕的情况下使用 Vim 键位，不够（[Firefox](http://www.firefox.com.cn/) + [VimFX](https://github.com/akhodakivskiy/VimFx)）极致！\n    - 用 __Inspect Element__（审查元素）配合 __Postman__ 等做 Web 开发、调试，比 Firefox 顺手。\n\n- 常用\n\n  - [__Trello__](https://trello.com/) <sup>Favorite</sup>\n\n    基于 Board 的事务管理。\n\n    - 使用 board 看板、list 列表、card 卡片等，组织事务；\n    - 使用 description 描述、comment 评论、attachment 附件等，跟踪记录事务内容；\n    - 根据 事务内容、label 标签、due date 截止期限等，考虑事务的优先次序。\n    - 我在现实管理工作项目的过程中，GitLab Issue Board 的应用，给我带来了很大的帮助。虽然那段时间很忙，但我还是有条不紊地推进了我和同事间的分工协作。自此迷上了使用 Board 的方式去管理事务。\n    - 类似的产品很多，Trello 是最简洁、好用、易上手的，这是我用它的关键原因。Slack 的服务被墙，在移动端访问不便（而 Trello 没被墙）；而国内的模仿者们则做得太复杂了，可能因为他们主攻 toB 的市场，不适合我这样的个人用户来使用，所以无爱。\n\n  - [__2Do__](https://www.2doapp.com/) <sup>Powerful</sup>\n    GTD 事务管理。\n\n    - 功能齐全、好用，用法可简可繁。快捷键完备！\n    - 推荐使用 iCloud Reminders 的 CalDAV 同步方式（支持 2Do 绝大部分特性，足以满足我的需求）；Dropbox 的同步方式虽然可以支持 2Do 的所有特性，可是需要翻墙才能同步数据，iPhone 需要长期开着 VPN 略显麻烦。所以为了稳定和省心，选择了前一种同步方式。\n\n  - [__1Password__](https://agilebits.com/onepassword) <sup>Privacy</sup>\n\n    帐号密码管理，以及私人信息的加密存储。\n\n    - 用一（两）个主密码管理所有其它密码。可生成随机密码，可记录登录网站时用的帐号密码，可自动填写表单登录网站。\n    - 以前一直用不惯，觉得用浏览器自带的自动登录和 iCloud 的 [__KeyChain Access__](https://support.apple.com/kb/PH20093?locale=zh_CN) 来记录管理帐号和密码足矣，可是不便于保存一些私人信息。工作之后，经济独立，更加注意保护个人隐私和财产安全了，要管理的私人信息多而杂乱，所以不得不借助专用的工具。\n    - 其它选择：\n      - [__KeyChain Access__](https://support.apple.com/kb/PH20093?locale=zh_CN)：macOS & iOS 原生支持，方便免费。\n      - [__Dashlane__](https://www.dashlane.com/)：好用，但贵。\n      - [__LastPass__](https://lastpass.com/)：够用，免费。\n\n  - [__Outlook__](https://outlook.live.com/owa/)\n    邮箱客户端，微软出品。\n\n    - 方便设置在邮箱服务器生效的邮件规则（因为公司邮箱用 Outlook 的服务）。\n      自动处理，屏蔽干扰，提高邮件处理效率。\n      - 将不同类型邮件归类到不同文件夹；\n      - 将可以忽略的邮件标为已读；\n      - 自动删除无用邮件。\n","source":"_posts/2018-08-22-tools.md","raw":"title: tools\ncomments: true\ndate: 2018-08-22 22:26:12\nupdated: 2018-08-22 22:26:12\ntags:  [tools,效率工具]\ncategories: 效率工具\n\ndescription: tools&#58; 推荐 Windows 和 ios 的 apps 以及日常使用的电子产品。\n---\n\n{% cq %}\n君子生非异也，善假于物也。\n\n荀子\n{% endcq %}\n\n## 说明\n\n- __主要介绍 Windows、[iOS](#iOS) 的 Apps__（下文 Apple 指代  iOS）。\n    - 适合自己的工具，才是最好的工具，所以本文仅供参考，自行尝试最重要。\n    - 笔者是工具控，目力之内看起来还有点用的工具都会折腾过一遍。\n        - 过程中浪费了许多时间精力在很少派上用场甚至无用的工具上。\n        - 善于发现生活中关键的效率瓶颈，再根据需求寻找或创造工具就足够了。\n        - 因为折腾工具而忘记了把事做成的初心，实在是南辕北辙。\n- __App 选择原则__\n    - 「常用」的工具才值得折腾，不常用的凑合着用就行了。\n    - 「实用」最重要，美观次之，价格别太贵就行。\n    - 「稳定」：不能时常引起系统崩溃，起码提升效率的收益得超过操作系统崩溃重启的损失。\n    - 「简洁易用」：满足实际的需求即可，不需要花哨、多余的功能。\n- 参考相关文章\n    - 《[Mac 效率指南](/mac/efficiency)》\n    - 《[Mac 快捷键](/mac/shortcuts)》\n- 参考阅读\n    - [__少数派__](http://sspai.com/) - 高质量 App 推荐媒体，关于 iOS、Mac、硬件。\n    - [__Best App__](https://github.com/hzlzh/Best-App) - List in GitHub\n- 字体格式的含义\n    - ~~删除线~~ 标识的一定是我现在不用的 Apps。\n\n---\n\n## 软件\n\n### 常用\n\n- 网络访问\n\n  - Chrome\n    - 配合 [__cVim__](https://chrome.google.com/webstore/detail/cvim/ihlenndgcmojhcghmfjfneahoeklbjjh) 拓展，可在浏览器内 __使用 Vim 键位__ 浏览网页、操作浏览器！键盘党神器\n      - 可惜它无法在页面未加载完毕的情况下使用 Vim 键位，不够（[Firefox](http://www.firefox.com.cn/) + [VimFX](https://github.com/akhodakivskiy/VimFx)）极致！\n    - 用 __Inspect Element__（审查元素）配合 __Postman__ 等做 Web 开发、调试，比 Firefox 顺手。\n\n- 常用\n\n  - [__Trello__](https://trello.com/) <sup>Favorite</sup>\n\n    基于 Board 的事务管理。\n\n    - 使用 board 看板、list 列表、card 卡片等，组织事务；\n    - 使用 description 描述、comment 评论、attachment 附件等，跟踪记录事务内容；\n    - 根据 事务内容、label 标签、due date 截止期限等，考虑事务的优先次序。\n    - 我在现实管理工作项目的过程中，GitLab Issue Board 的应用，给我带来了很大的帮助。虽然那段时间很忙，但我还是有条不紊地推进了我和同事间的分工协作。自此迷上了使用 Board 的方式去管理事务。\n    - 类似的产品很多，Trello 是最简洁、好用、易上手的，这是我用它的关键原因。Slack 的服务被墙，在移动端访问不便（而 Trello 没被墙）；而国内的模仿者们则做得太复杂了，可能因为他们主攻 toB 的市场，不适合我这样的个人用户来使用，所以无爱。\n\n  - [__2Do__](https://www.2doapp.com/) <sup>Powerful</sup>\n    GTD 事务管理。\n\n    - 功能齐全、好用，用法可简可繁。快捷键完备！\n    - 推荐使用 iCloud Reminders 的 CalDAV 同步方式（支持 2Do 绝大部分特性，足以满足我的需求）；Dropbox 的同步方式虽然可以支持 2Do 的所有特性，可是需要翻墙才能同步数据，iPhone 需要长期开着 VPN 略显麻烦。所以为了稳定和省心，选择了前一种同步方式。\n\n  - [__1Password__](https://agilebits.com/onepassword) <sup>Privacy</sup>\n\n    帐号密码管理，以及私人信息的加密存储。\n\n    - 用一（两）个主密码管理所有其它密码。可生成随机密码，可记录登录网站时用的帐号密码，可自动填写表单登录网站。\n    - 以前一直用不惯，觉得用浏览器自带的自动登录和 iCloud 的 [__KeyChain Access__](https://support.apple.com/kb/PH20093?locale=zh_CN) 来记录管理帐号和密码足矣，可是不便于保存一些私人信息。工作之后，经济独立，更加注意保护个人隐私和财产安全了，要管理的私人信息多而杂乱，所以不得不借助专用的工具。\n    - 其它选择：\n      - [__KeyChain Access__](https://support.apple.com/kb/PH20093?locale=zh_CN)：macOS & iOS 原生支持，方便免费。\n      - [__Dashlane__](https://www.dashlane.com/)：好用，但贵。\n      - [__LastPass__](https://lastpass.com/)：够用，免费。\n\n  - [__Outlook__](https://outlook.live.com/owa/)\n    邮箱客户端，微软出品。\n\n    - 方便设置在邮箱服务器生效的邮件规则（因为公司邮箱用 Outlook 的服务）。\n      自动处理，屏蔽干扰，提高邮件处理效率。\n      - 将不同类型邮件归类到不同文件夹；\n      - 将可以忽略的邮件标为已读；\n      - 自动删除无用邮件。\n","slug":"tools","published":1,"layout":"post","photos":[],"link":"","_id":"cjl9jao9m0009wswklhxrelmo","content":"<blockquote class=\"blockquote-center\"><p>君子生非异也，善假于物也。</p>\n<p>荀子</p>\n</blockquote>\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><ul>\n<li><strong>主要介绍 Windows、<a href=\"#iOS\">iOS</a> 的 Apps</strong>（下文 Apple 指代  iOS）。<ul>\n<li>适合自己的工具，才是最好的工具，所以本文仅供参考，自行尝试最重要。</li>\n<li>笔者是工具控，目力之内看起来还有点用的工具都会折腾过一遍。<ul>\n<li>过程中浪费了许多时间精力在很少派上用场甚至无用的工具上。</li>\n<li>善于发现生活中关键的效率瓶颈，再根据需求寻找或创造工具就足够了。</li>\n<li>因为折腾工具而忘记了把事做成的初心，实在是南辕北辙。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>App 选择原则</strong><ul>\n<li>「常用」的工具才值得折腾，不常用的凑合着用就行了。</li>\n<li>「实用」最重要，美观次之，价格别太贵就行。</li>\n<li>「稳定」：不能时常引起系统崩溃，起码提升效率的收益得超过操作系统崩溃重启的损失。</li>\n<li>「简洁易用」：满足实际的需求即可，不需要花哨、多余的功能。</li>\n</ul>\n</li>\n<li>参考相关文章<ul>\n<li>《<a href=\"/mac/efficiency\">Mac 效率指南</a>》</li>\n<li>《<a href=\"/mac/shortcuts\">Mac 快捷键</a>》</li>\n</ul>\n</li>\n<li>参考阅读<ul>\n<li><a href=\"http://sspai.com/\" target=\"_blank\" rel=\"noopener\"><strong>少数派</strong></a> - 高质量 App 推荐媒体，关于 iOS、Mac、硬件。</li>\n<li><a href=\"https://github.com/hzlzh/Best-App\" target=\"_blank\" rel=\"noopener\"><strong>Best App</strong></a> - List in GitHub</li>\n</ul>\n</li>\n<li>字体格式的含义<ul>\n<li><del>删除线</del> 标识的一定是我现在不用的 Apps。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h2><h3 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h3><ul>\n<li><p>网络访问</p>\n<ul>\n<li>Chrome<ul>\n<li>配合 <a href=\"https://chrome.google.com/webstore/detail/cvim/ihlenndgcmojhcghmfjfneahoeklbjjh\" target=\"_blank\" rel=\"noopener\"><strong>cVim</strong></a> 拓展，可在浏览器内 <strong>使用 Vim 键位</strong> 浏览网页、操作浏览器！键盘党神器<ul>\n<li>可惜它无法在页面未加载完毕的情况下使用 Vim 键位，不够（<a href=\"http://www.firefox.com.cn/\" target=\"_blank\" rel=\"noopener\">Firefox</a> + <a href=\"https://github.com/akhodakivskiy/VimFx\" target=\"_blank\" rel=\"noopener\">VimFX</a>）极致！</li>\n</ul>\n</li>\n<li>用 <strong>Inspect Element</strong>（审查元素）配合 <strong>Postman</strong> 等做 Web 开发、调试，比 Firefox 顺手。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>常用</p>\n<ul>\n<li><p><a href=\"https://trello.com/\" target=\"_blank\" rel=\"noopener\"><strong>Trello</strong></a> <sup>Favorite</sup></p>\n<p>基于 Board 的事务管理。</p>\n<ul>\n<li>使用 board 看板、list 列表、card 卡片等，组织事务；</li>\n<li>使用 description 描述、comment 评论、attachment 附件等，跟踪记录事务内容；</li>\n<li>根据 事务内容、label 标签、due date 截止期限等，考虑事务的优先次序。</li>\n<li>我在现实管理工作项目的过程中，GitLab Issue Board 的应用，给我带来了很大的帮助。虽然那段时间很忙，但我还是有条不紊地推进了我和同事间的分工协作。自此迷上了使用 Board 的方式去管理事务。</li>\n<li>类似的产品很多，Trello 是最简洁、好用、易上手的，这是我用它的关键原因。Slack 的服务被墙，在移动端访问不便（而 Trello 没被墙）；而国内的模仿者们则做得太复杂了，可能因为他们主攻 toB 的市场，不适合我这样的个人用户来使用，所以无爱。</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.2doapp.com/\" target=\"_blank\" rel=\"noopener\"><strong>2Do</strong></a> <sup>Powerful</sup><br>GTD 事务管理。</p>\n<ul>\n<li>功能齐全、好用，用法可简可繁。快捷键完备！</li>\n<li>推荐使用 iCloud Reminders 的 CalDAV 同步方式（支持 2Do 绝大部分特性，足以满足我的需求）；Dropbox 的同步方式虽然可以支持 2Do 的所有特性，可是需要翻墙才能同步数据，iPhone 需要长期开着 VPN 略显麻烦。所以为了稳定和省心，选择了前一种同步方式。</li>\n</ul>\n</li>\n<li><p><a href=\"https://agilebits.com/onepassword\" target=\"_blank\" rel=\"noopener\"><strong>1Password</strong></a> <sup>Privacy</sup></p>\n<p>帐号密码管理，以及私人信息的加密存储。</p>\n<ul>\n<li>用一（两）个主密码管理所有其它密码。可生成随机密码，可记录登录网站时用的帐号密码，可自动填写表单登录网站。</li>\n<li>以前一直用不惯，觉得用浏览器自带的自动登录和 iCloud 的 <a href=\"https://support.apple.com/kb/PH20093?locale=zh_CN\" target=\"_blank\" rel=\"noopener\"><strong>KeyChain Access</strong></a> 来记录管理帐号和密码足矣，可是不便于保存一些私人信息。工作之后，经济独立，更加注意保护个人隐私和财产安全了，要管理的私人信息多而杂乱，所以不得不借助专用的工具。</li>\n<li>其它选择：<ul>\n<li><a href=\"https://support.apple.com/kb/PH20093?locale=zh_CN\" target=\"_blank\" rel=\"noopener\"><strong>KeyChain Access</strong></a>：macOS &amp; iOS 原生支持，方便免费。</li>\n<li><a href=\"https://www.dashlane.com/\" target=\"_blank\" rel=\"noopener\"><strong>Dashlane</strong></a>：好用，但贵。</li>\n<li><a href=\"https://lastpass.com/\" target=\"_blank\" rel=\"noopener\"><strong>LastPass</strong></a>：够用，免费。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://outlook.live.com/owa/\" target=\"_blank\" rel=\"noopener\"><strong>Outlook</strong></a><br>邮箱客户端，微软出品。</p>\n<ul>\n<li>方便设置在邮箱服务器生效的邮件规则（因为公司邮箱用 Outlook 的服务）。<br>自动处理，屏蔽干扰，提高邮件处理效率。<ul>\n<li>将不同类型邮件归类到不同文件夹；</li>\n<li>将可以忽略的邮件标为已读；</li>\n<li>自动删除无用邮件。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\"><p>君子生非异也，善假于物也。</p>\n<p>荀子</p>\n</blockquote>\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><ul>\n<li><strong>主要介绍 Windows、<a href=\"#iOS\">iOS</a> 的 Apps</strong>（下文 Apple 指代  iOS）。<ul>\n<li>适合自己的工具，才是最好的工具，所以本文仅供参考，自行尝试最重要。</li>\n<li>笔者是工具控，目力之内看起来还有点用的工具都会折腾过一遍。<ul>\n<li>过程中浪费了许多时间精力在很少派上用场甚至无用的工具上。</li>\n<li>善于发现生活中关键的效率瓶颈，再根据需求寻找或创造工具就足够了。</li>\n<li>因为折腾工具而忘记了把事做成的初心，实在是南辕北辙。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>App 选择原则</strong><ul>\n<li>「常用」的工具才值得折腾，不常用的凑合着用就行了。</li>\n<li>「实用」最重要，美观次之，价格别太贵就行。</li>\n<li>「稳定」：不能时常引起系统崩溃，起码提升效率的收益得超过操作系统崩溃重启的损失。</li>\n<li>「简洁易用」：满足实际的需求即可，不需要花哨、多余的功能。</li>\n</ul>\n</li>\n<li>参考相关文章<ul>\n<li>《<a href=\"/mac/efficiency\">Mac 效率指南</a>》</li>\n<li>《<a href=\"/mac/shortcuts\">Mac 快捷键</a>》</li>\n</ul>\n</li>\n<li>参考阅读<ul>\n<li><a href=\"http://sspai.com/\" target=\"_blank\" rel=\"noopener\"><strong>少数派</strong></a> - 高质量 App 推荐媒体，关于 iOS、Mac、硬件。</li>\n<li><a href=\"https://github.com/hzlzh/Best-App\" target=\"_blank\" rel=\"noopener\"><strong>Best App</strong></a> - List in GitHub</li>\n</ul>\n</li>\n<li>字体格式的含义<ul>\n<li><del>删除线</del> 标识的一定是我现在不用的 Apps。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h2><h3 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h3><ul>\n<li><p>网络访问</p>\n<ul>\n<li>Chrome<ul>\n<li>配合 <a href=\"https://chrome.google.com/webstore/detail/cvim/ihlenndgcmojhcghmfjfneahoeklbjjh\" target=\"_blank\" rel=\"noopener\"><strong>cVim</strong></a> 拓展，可在浏览器内 <strong>使用 Vim 键位</strong> 浏览网页、操作浏览器！键盘党神器<ul>\n<li>可惜它无法在页面未加载完毕的情况下使用 Vim 键位，不够（<a href=\"http://www.firefox.com.cn/\" target=\"_blank\" rel=\"noopener\">Firefox</a> + <a href=\"https://github.com/akhodakivskiy/VimFx\" target=\"_blank\" rel=\"noopener\">VimFX</a>）极致！</li>\n</ul>\n</li>\n<li>用 <strong>Inspect Element</strong>（审查元素）配合 <strong>Postman</strong> 等做 Web 开发、调试，比 Firefox 顺手。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>常用</p>\n<ul>\n<li><p><a href=\"https://trello.com/\" target=\"_blank\" rel=\"noopener\"><strong>Trello</strong></a> <sup>Favorite</sup></p>\n<p>基于 Board 的事务管理。</p>\n<ul>\n<li>使用 board 看板、list 列表、card 卡片等，组织事务；</li>\n<li>使用 description 描述、comment 评论、attachment 附件等，跟踪记录事务内容；</li>\n<li>根据 事务内容、label 标签、due date 截止期限等，考虑事务的优先次序。</li>\n<li>我在现实管理工作项目的过程中，GitLab Issue Board 的应用，给我带来了很大的帮助。虽然那段时间很忙，但我还是有条不紊地推进了我和同事间的分工协作。自此迷上了使用 Board 的方式去管理事务。</li>\n<li>类似的产品很多，Trello 是最简洁、好用、易上手的，这是我用它的关键原因。Slack 的服务被墙，在移动端访问不便（而 Trello 没被墙）；而国内的模仿者们则做得太复杂了，可能因为他们主攻 toB 的市场，不适合我这样的个人用户来使用，所以无爱。</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.2doapp.com/\" target=\"_blank\" rel=\"noopener\"><strong>2Do</strong></a> <sup>Powerful</sup><br>GTD 事务管理。</p>\n<ul>\n<li>功能齐全、好用，用法可简可繁。快捷键完备！</li>\n<li>推荐使用 iCloud Reminders 的 CalDAV 同步方式（支持 2Do 绝大部分特性，足以满足我的需求）；Dropbox 的同步方式虽然可以支持 2Do 的所有特性，可是需要翻墙才能同步数据，iPhone 需要长期开着 VPN 略显麻烦。所以为了稳定和省心，选择了前一种同步方式。</li>\n</ul>\n</li>\n<li><p><a href=\"https://agilebits.com/onepassword\" target=\"_blank\" rel=\"noopener\"><strong>1Password</strong></a> <sup>Privacy</sup></p>\n<p>帐号密码管理，以及私人信息的加密存储。</p>\n<ul>\n<li>用一（两）个主密码管理所有其它密码。可生成随机密码，可记录登录网站时用的帐号密码，可自动填写表单登录网站。</li>\n<li>以前一直用不惯，觉得用浏览器自带的自动登录和 iCloud 的 <a href=\"https://support.apple.com/kb/PH20093?locale=zh_CN\" target=\"_blank\" rel=\"noopener\"><strong>KeyChain Access</strong></a> 来记录管理帐号和密码足矣，可是不便于保存一些私人信息。工作之后，经济独立，更加注意保护个人隐私和财产安全了，要管理的私人信息多而杂乱，所以不得不借助专用的工具。</li>\n<li>其它选择：<ul>\n<li><a href=\"https://support.apple.com/kb/PH20093?locale=zh_CN\" target=\"_blank\" rel=\"noopener\"><strong>KeyChain Access</strong></a>：macOS &amp; iOS 原生支持，方便免费。</li>\n<li><a href=\"https://www.dashlane.com/\" target=\"_blank\" rel=\"noopener\"><strong>Dashlane</strong></a>：好用，但贵。</li>\n<li><a href=\"https://lastpass.com/\" target=\"_blank\" rel=\"noopener\"><strong>LastPass</strong></a>：够用，免费。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://outlook.live.com/owa/\" target=\"_blank\" rel=\"noopener\"><strong>Outlook</strong></a><br>邮箱客户端，微软出品。</p>\n<ul>\n<li>方便设置在邮箱服务器生效的邮件规则（因为公司邮箱用 Outlook 的服务）。<br>自动处理，屏蔽干扰，提高邮件处理效率。<ul>\n<li>将不同类型邮件归类到不同文件夹；</li>\n<li>将可以忽略的邮件标为已读；</li>\n<li>自动删除无用邮件。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Oracle 常用命令","comments":1,"date":"2018-08-24T13:29:14.000Z","updated":"2018-08-24T13:29:14.000Z","description":"Oacle&#58; Oracle 用命令，适合初学者。","_content":"\n## oracle常用命令\n\noracle 常用命令，适合初学者……\n查日期：select * from crd_cardmain where to_char(mindate,'YYYY-MM-DD')='20080826'\n\n### 一、ORACLE的启动和关闭\n\n- #### 在单机环境下\n\n要想启动或关闭ORACLE系统必须首先切换到ORACLE用户，如下\nsu - oracle\n\n- 启动ORACLE系统\n\n  ```plsql\n  oracle>svrmgrl\n  SVRMGR>connect internal\n  SVRMGR>startup\n  SVRMGR>quit\n  ```\n\n- 关闭ORACLE系统\n\n  ```plsql\n  oracle>svrmgrl\n  SVRMGR>connect internal\n  SVRMGR>shutdown\n  SVRMGR>quit\n  ```\n\n- 启动oracle9i数据库命令：\n\n  ```plsql\n  $ sqlplus /nolog\n  SQL*Plus: Release 9.2.0.1.0 - Production on Fri Oct 31 13:53:53 2003\n  Copyright (c) 1982, 2002, Oracle Corporation.  All rights reserved.\n  SQL> connect / as sysdba  \n  Connected to an idle instance.\n  SQL> startup^C\n  SQL> startup\n  ORACLE instance started.\n  ```\n\n- #### 在双机环境下\n\n要想启动或关闭ORACLE系统必须首先切换到root用户，如下\nsu － root\n\n- 启动ORACLE系统\n\n  hareg －y oracle\n\n- 关闭ORACLE系统\n  hareg －n oracle\n\nOracle数据库有哪几种启动方式\n\n\n说明：\n\n有以下几种启动方式：\n\n1. startup nomount\n   非安装启动，这种方式启动下可执行：重建控制文件、重建数据库\n\n   读取init.ora文件，启动instance，即启动SGA和后台进程，这种启动只需要init.ora文件。\n\n2. startup mount dbname\n   安装启动，这种方式启动下可执行：\n   数据库日志归档、\n   数据库介质恢复、\n   使数据文件联机或脱机，\n   重新定位数据文件、重做日志文件。\n\n   执行“nomount”，然后打开控制文件，确认数据文件和联机日志文件的位置，\n   但此时不对数据文件和日志文件进行校验检查。\n\n3. startup open dbname\n   先执行“nomount”，然后执行“mount”，再打开包括Redo log文件在内的所有数据库文件，\n   这种方式下可访问数据库中的数据。\n\n4. startup，等于以下三个命令\n   startup nomount\n   alter database mount\n   alter database open\n\n5. startup restrict\n   约束方式启动\n   这种方式能够启动数据库，但只允许具有一定特权的用户访问\n   非特权用户访问时，会出现以下提示：\n   ERROR：\n   ORA-01035: ORACLE 只允许具有 RESTRICTED SESSION 权限的用户使用\n\n6. startup force\n   强制启动方式\n   当不能关闭数据库时，可以用startup force来完成数据库的关闭\n   先关闭数据库，再执行正常启动数据库命令\n\n7. startup pfile=参数文件名\n   带初始化参数文件的启动方式\n   先读取参数文件，再按参数文件中的设置启动数据库\n   例：startup pfile=E:Oracleadminoradbpfileinit.ora\n\n8. startup EXCLUSIVE\n\n### 二、用户如何有效地利用数据字典\n\n     　ORACLE的数据字典是数据库的重要组成部分之一，它随着数据库的产生而产生, 随着数据库的变化而变化,\n   体现为sys用户下的一些表和视图。数据字典名称是大写的英文字符。\n\n    数据字典里存有用户信息、用户的权限信息、所有数据对象信息、表的约束条件、统计分析数据库的视图等。\n我们不能手工修改数据字典里的信息。\n\n　　很多时候，一般的ORACLE用户不知道如何有效地利用它。\n\n　　dictionary　　　全部数据字典表的名称和解释，它有一个同义词dict\n    dict_column　　 全部数据字典表里字段名称和解释\n\n    如果我们想查询跟索引有关的数据字典时，可以用下面这条SQL语句:\n    \n    SQL>select * from dictionary where instr(comments,'index')>0;\n    \n    如果我们想知道user_indexes表各字段名称的详细含义，可以用下面这条SQL语句:\n    \n    SQL>select column_name,comments from dict_columns where table_name='USER_INDEXES';\n    \n    依此类推，就可以轻松知道数据字典的详细名称和解释，不用查看ORACLE的其它文档资料了。\n    \n    下面按类别列出一些ORACLE用户常用数据字典的查询使用方法。\n    \n    1、用户\n    \n            查看当前用户的缺省表空间\n            SQL>select username,default_tablespace from user_users;\n    \n        查看当前用户的角色\n        SQL>select * from user_role_privs;\n    \n        查看当前用户的系统权限和表级权限\n        SQL>select * from user_sys_privs;\n        SQL>select * from user_tab_privs;\n    \n    2、表\n    \n            查看用户下所有的表\n            SQL>select * from user_tables;\n    \n            查看名称包含log字符的表\n            SQL>select object_name,object_id from user_objects\n                where instr(object_name,'LOG')>0;\n    \n            查看某表的创建时间\n            SQL>select object_name,created from user_objects where object_name=upper('&table_name');\n    \n            查看某表的大小\n            SQL>select sum(bytes)/(1024*1024) as \"size(M)\" from user_segments\n                where segment_name=upper('&table_name');\n    \n            查看放在ORACLE的内存区里的表\n            SQL>select table_name,cache from user_tables where instr(cache,'Y')>0;\n    \n    3、索引\n    \n            查看索引个数和类别\n            SQL>select index_name,index_type,table_name from user_indexes order by table_name;\n    \n            查看索引被索引的字段\n            SQL>select * from user_ind_columns where index_name=upper('&index_name');\n    \n            查看索引的大小\n            SQL>select sum(bytes)/(1024*1024) as \"size(M)\" from user_segments\n                where segment_name=upper('&index_name');\n    \n    4、序列号\n    \n            查看序列号，last_number是当前值\n            SQL>select * from user_sequences;\n    \n    5、视图\n    \n            查看视图的名称\n            SQL>select view_name from user_views;\n    \n            查看创建视图的select语句\n            SQL>set view_name,text_length from user_views;\n            SQL>set long 2000;                说明：可以根据视图的text_length值设定set long 的大小\n            SQL>select text from user_views where view_name=upper('&view_name');\n    \n    6、同义词\n    \n            查看同义词的名称\n            SQL>select * from user_synonyms;\n    \n    7、约束条件\n    \n            查看某表的约束条件\n            SQL>select constraint_name, constraint_type,search_condition, r_constraint_name\n                from user_constraints where table_name = upper('&table_name');\n    \n        SQL>select c.constraint_name,c.constraint_type,cc.column_name\n            from user_constraints c,user_cons_columns cc\n            where c.owner = upper('&table_owner') and c.table_name = upper('&table_name')\n            and c.owner = cc.owner and c.constraint_name = cc.constraint_name\n            order by cc.position;\n    \n    8、存储函数和过程\n    \n            查看函数和过程的状态\n            SQL>select object_name,status from user_objects where object_type='FUNCTION';\n            SQL>select object_name,status from user_objects where object_type='PROCEDURE';\n    \n            查看函数和过程的源代码\n            SQL>select text from all_source where owner=user and name=upper('&plsql_name');\n\n### 三、查看数据库的SQL\n\n#### 1、查看表空间的名称及大小\n\n    select t.tablespace_name, round(sum(bytes/(1024*1024)),0) ts_size\n    from dba_tablespaces t, dba_data_files d\n    where t.tablespace_name = d.tablespace_name\n    group by t.tablespace_name;\n\n#### 2、查看表空间物理文件的名称及大小\n\n    select tablespace_name, file_id, file_name,\n    round(bytes/(1024*1024),0) total_space\n    from dba_data_files\n    order by tablespace_name;\n\n#### 3、查看回滚段名称及大小\n\n    select segment_name, tablespace_name, r.status,\n    (initial_extent/1024) InitialExtent,(next_extent/1024) NextExtent,\n    max_extents, v.curext CurExtent\n    From dba_rollback_segs r, v$rollstat v\n    Where r.segment_id = v.usn(+)\n    order by segment_name ;\n\n#### 4、查看控制文件\n\n    select name from v$controlfile;\n\n#### 5、查看日志文件\n\n    select member from v$logfile;\n\n#### 6、查看表空间的使用情况\n\n    select sum(bytes)/(1024*1024) as free_space,tablespace_name\n    from dba_free_space\n    group by tablespace_name;\n    \n    SELECT A.TABLESPACE_NAME,A.BYTES TOTAL,B.BYTES USED, C.BYTES FREE,\n    (B.BYTES*100)/A.BYTES \"% USED\",(C.BYTES*100)/A.BYTES \"% FREE\"\n    FROM SYS.SM$TS_AVAIL A,SYS.SM$TS_USED B,SYS.SM$TS_FREE C\n    WHERE A.TABLESPACE_NAME=B.TABLESPACE_NAME AND A.TABLESPACE_NAME=C.TABLESPACE_NAME;\n\n#### 7、查看数据库库对象\n\n    select owner, object_type, status, count(*) count# from all_objects group by owner, object_type, status;\n\n#### 8、查看数据库的版本\n\n    Select version FROM Product_component_version\n    Where SUBSTR(PRODUCT,1,6)='Oracle';\n\n#### 9、查看数据库的创建日期和归档方式\n\n    Select Created, Log_Mode, Log_Mode From V$Database;\n### 四、ORACLE用户连接的管理\n\n用系统管理员，查看当前数据库有几个用户连接：\n\nSQL> select username,sid,serial# from v$session;\n\n如果要停某个连接用\n\nSQL> alter system kill session 'sid,serial#';\n\n如果这命令不行,找它UNIX的进程数\n\nSQL> select pro.spid from v$session ses,v$process pro where ses.sid=21 and ses.paddr=pro.addr;\n\n说明：21是某个连接的sid数\n\n然后用 kill 命令杀此进程号。\n\n### 五、SQL*PLUS使用\n\na、进入SQL*Plus\n$sqlplus 用户名/密码\n\n   退出SQL*Plus\nSQL>exit\n\nb、在sqlplus下得到帮助信息\n列出全部SQL命令和SQL*Plus命令\nSQL>help\n列出某个特定的命令的信息\nSQL>help 命令名\n\nc、显示表结构命令DESCRIBE\nSQL>DESC 表名\n\nd、SQL*Plus中的编辑命令\n显示SQL缓冲区命令\nSQL>L\n\n修改SQL命令\n首先要将待改正行变为当前行\nSQL>n\n用CHANGE命令修改内容\nSQL>c/旧/新\n重新确认是否已正确\nSQL>L\n\n使用INPUT命令可以在SQL缓冲区中增加一行或多行\nSQL>i\nSQL>输入内容\n\ne、调用外部系统编辑器\nSQL>edit 文件名\n可以使用DEFINE命令设置系统变量EDITOR来改变文本编辑器的类型，在login.sql文件中定义如下一行\nDEFINE_EDITOR=vi\n\nf、运行命令文件\nSQL>START test\nSQL>@test\n\n常用SQL*Plus语句\na、表的创建、修改、删除\n创建表的命令格式如下：\ncreate table 表名 （列说明列表）；\n\n为基表增加新列命令如下：\nALTER TABLE 表名 ADD （列说明列表）\n例：为test表增加一列Age，用来存放年龄\n    sql>alter table test\n        add （Age number(3)）；\n\n修改基表列定义命令如下：\nALTER TABLE 表名\nMODIFY （列名 数据类型）\n例：将test表中的Count列宽度加长为10个字符\n    sql>alter atble test\n        modify （County char(10)）；\n\nb、将一张表删除语句的格式如下：\nDORP TABLE 表名；\n例：表删除将同时删除表的数据和表的定义\nsql>drop table test\n\nc、表空间的创建、删除\n\n### 六、ORACLE逻辑备份的SH文件\n\n```bash\n完全备份的SH文件：exp_comp.sh\n\nrq=date +\"%m%d\"\n\nsu - oracle -c \"exp system/manager full=y inctype=complete file=/oracle/export/db_comp$rq.dmp\"\n\n累计备份的SH文件：exp_cumu.sh\n\nrq=date +\"%m%d\"\n\nsu - oracle -c \"exp system/manager full=y inctype=cumulative file=/oracle/export/db_cumu$rq.dmp\"\n\n增量备份的SH文件: exp_incr.sh\n\nrq=date +\"%m%d\"\n\nsu - oracle -c \"exp system/manager full=y inctype=incremental file=/oracle/export/db_incr$rq.dmp\"\n\nroot用户crontab文件\n/var/spool/cron/crontabs/root增加以下内容\n0 2 1 * * /oracle/exp_comp.sh\n30 2 * * 0-5 /oracle/exp_incr.sh\n45 2 * * 6 /oracle/exp_cumu.sh\n\n```\n\n当然这个时间表可以根据不同的需求来改变的，这只是一个例子。\n\n### 七、ORACLE 常用的SQL语法和数据对象\n\n#### 一.数据控制语句 (DML) 部分\n\n1.INSERT  (往数据表里插入记录的语句)\n\nINSERT INTO 表名(字段名1, 字段名2, ……) VALUES ( 值1, 值2, ……);\nINSERT INTO 表名(字段名1, 字段名2, ……)  SELECT (字段名1, 字段名2, ……) FROM 另外的表名;\n\n字符串类型的字段值必须用单引号括起来, 例如: ’GOOD DAY’\n如果字段值里包含单引号’ 需要进行字符串转换, 我们把它替换成两个单引号''.\n字符串类型的字段值超过定义的长度会出错, 最好在插入前进行长度校验.\n\n日期字段的字段值可以用当前数据库的系统时间SYSDATE, 精确到秒\n或者用字符串转换成日期型函数TO_DATE(‘2001-08-01’,’YYYY-MM-DD’)\nTO_DATE()还有很多种日期格式, 可以参看ORACLE DOC.\n年-月-日 小时:分钟:秒 的格式YYYY-MM-DD HH24:MI:SS\n\nINSERT时最大可操作的字符串长度小于等于4000个单字节, 如果要插入更长的字符串, 请考虑字段用CLOB类型,\n方法借用ORACLE里自带的DBMS_LOB程序包.\n\nINSERT时如果要用到从1开始自动增长的序列号, 应该先建立一个序列号\nCREATE SEQUENCE 序列号的名称 (最好是表名+序列号标记) INCREMENT BY 1  START  WITH  1\nMAXVALUE  99999  CYCLE  NOCACHE;\n其中最大的值按字段的长度来定, 如果定义的自动增长的序列号 NUMBER(6) , 最大值为999999\nINSERT 语句插入这个字段值为: 序列号的名称.NEXTVAL\n\n2.DELETE  (删除数据表里记录的语句)\n\nDELETE FROM表名 WHERE 条件;\n\n注意：删除记录并不能释放ORACLE里被占用的数据块表空间. 它只把那些被删除的数据块标成unused.\n\n如果确实要删除一个大表里的全部记录, 可以用 TRUNCATE 命令, 它可以释放占用的数据块表空间\nTRUNCATE TABLE 表名;\n此操作不可回退.\n\n3.UPDATE  (修改数据表里记录的语句)\n\nUPDATE表名 SET 字段名1=值1, 字段名2=值2, …… WHERE 条件;\n\n如果修改的值N没有赋值或定义时, 将把原来的记录内容清为NULL, 最好在修改前进行非空校验;\n值N超过定义的长度会出错, 最好在插入前进行长度校验..\n\n注意事项:\nA.        以上SQL语句对表都加上了行级锁,\n        确认完成后, 必须加上事物处理结束的命令 COMMIT 才能正式生效,\n        否则改变不一定写入数据库里.\n        如果想撤回这些操作, 可以用命令 ROLLBACK 复原.\n\nB.        在运行INSERT, DELETE 和 UPDATE 语句前最好估算一下可能操作的记录范围,\n        应该把它限定在较小 (一万条记录) 范围内,. 否则ORACLE处理这个事物用到很大的回退段.\n        程序响应慢甚至失去响应. 如果记录数上十万以上这些操作, 可以把这些SQL语句分段分次完成,\n        其间加上COMMIT 确认事物处理.\n\n#### 二.数据定义 (DDL) 部分\n\n1.CREATE (创建表, 索引, 视图, 同义词, 过程, 函数, 数据库链接等)\n\nORACLE常用的字段类型有\nCHAR                        固定长度的字符串\nVARCHAR2                可变长度的字符串\nNUMBER(M,N)                数字型M是位数总长度, N是小数的长度\nDATE                        日期类型\n\n创建表时要把较小的不为空的字段放在前面, 可能为空的字段放在后面\n\n创建表时可以用中文的字段名, 但最好还是用英文的字段名\n\n创建表时可以给字段加上默认值, 例如 DEFAULT SYSDATE\n这样每次插入和修改时, 不用程序操作这个字段都能得到动作的时间\n\n创建表时可以给字段加上约束条件\n例如 不允许重复 UNIQUE, 关键字 PRIMARY KEY\n\n2.ALTER        (改变表, 索引, 视图等)\n\n改变表的名称\nALTER TABLE 表名1  TO 表名2;\n\n在表的后面增加一个字段\nALTER TABLE表名 ADD 字段名 字段名描述;\n\n修改表里字段的定义描述\nALTER TABLE表名 MODIFY字段名 字段名描述;\n\n给表里的字段加上约束条件\nALTER TABLE 表名 ADD CONSTRAINT 约束名 PRIMARY KEY (字段名);\nALTER TABLE 表名 ADD CONSTRAINT 约束名 UNIQUE (字段名);\n\n把表放在或取出数据库的内存区\nALTER TABLE 表名 CACHE;\nALTER TABLE 表名 NOCACHE;\n\n3.DROP        (删除表, 索引, 视图, 同义词, 过程, 函数, 数据库链接等)\n\n删除表和它所有的约束条件\nDROP TABLE 表名 CASCADE CONSTRAINTS;\n\n4.TRUNCATE (清空表里的所有记录, 保留表的结构)\n\nTRUNCATE 表名;\n\n#### 三.查询语句 (SELECT) 部分\n\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE 条件;\n\n字段名可以带入函数\n  例如:  COUNT(*), MIN(字段名),  MAX(字段名),  AVG(字段名), DISTINCT(字段名),\n           TO_CHAR(DATE字段名,'YYYY-MM-DD HH24:MI:SS')\n\nNVL(EXPR1, EXPR2)函数\n解释:\nIF EXPR1=NULL\n                RETURN EXPR2\nELSE\n                       RETURN EXPR1\n\nDECODE(AA﹐V1﹐R1﹐V2﹐R2....)函数\n解释:\nIF AA=V1 THEN RETURN R1\nIF AA=V2 THEN RETURN R2\n..…\nELSE\nRETURN NULL\n\nLPAD(char1,n,char2)函数\n解释:\n字符char1按制定的位数n显示，不足的位数用char2字符串替换左边的空位\n\n字段名之间可以进行算术运算\n例如:  (字段名1*字段名1)/3\n\n查询语句可以嵌套\n例如:\n```plsql\nSELECT …… FROM\n(SELECT …… FROM表名1, [表名2, ……] WHERE 条件) WHERE 条件2;\n```\n两个查询语句的结果可以做集合操作\n例如: \n```plsql\n并集UNION(去掉重复记录), 并集UNION ALL(不去掉重复记录), 差集MINUS,  交集INTERSECT\n```\n分组查询\n```plsql\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] GROUP BY字段名1\n[HAVING 条件] ;\n```\n两个以上表之间的连接查询\n```plsql\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE\n                表名1.字段名 = 表名2. 字段名 [ AND ……] ;\n\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE\n                表名1.字段名 = 表名2. 字段名(+) [ AND ……] ;\n​```plsql\n有(+)号的字段位置自动补空值\n\n查询结果集的排序操作, 默认的排序是升序ASC, 降序是DESC\n​```plsql\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……]\nORDER BY字段名1, 字段名2 DESC;\n```\n字符串模糊比较的方法\n\nINSTR(字段名, ‘字符串’)>0\n字段名 LIKE  ‘字符串%’  [‘%字符串%’]\n\n每个表都有一个隐含的字段ROWID, 它标记着记录的唯一性.\n\n#### 四.ORACLE里常用的数据对象 (SCHEMA)\n\n1.索引 (INDEX)\n```plsql\nCREATE INDEX 索引名ON 表名 ( 字段1, [字段2, ……] );\nALTER INDEX 索引名 REBUILD;\n```\n一个表的索引最好不要超过三个 (特殊的大表除外), 最好用单字段索引, 结合SQL语句的分析执行情况,\n也可以建立多字段的组合索引和基于函数的索引\n\nORACLE8.1.7字符串可以索引的最大长度为1578 单字节\nORACLE8.0.6字符串可以索引的最大长度为758 单字节\n\n2.视图 (VIEW)\n```plsql\nCREATE VIEW 视图名AS SELECT …. FROM …..;\nALTER VIEW视图名 COMPILE;\n```\n视图仅是一个SQL查询语句, 它可以把表之间复杂的关系简洁化.\n\n3.同义词 (SYNONMY)\n```plsql\nCREATE SYNONYM同义词名FOR 表名;\nCREATE SYNONYM同义词名FOR 表名@数据库链接名;\n```\n4.数据库链接 (DATABASE LINK)\n```plsql\nCREATE DATABASE LINK数据库链接名CONNECT TO 用户名 IDENTIFIED BY 密码 USING ‘数据库连接字符串’;\n```\n数据库连接字符串可以用NET8 EASY CONFIG或者直接修改TNSNAMES.ORA里定义.\n\n数据库参数global_name=true时要求数据库链接名称跟远端数据库名称一样\n\n数据库全局名称可以用以下命令查出\n```sql\nSELECT * FROM GLOBAL_NAME;\n```\n查询远端数据库里的表\n```sql\nSELECT …… FROM 表名@数据库链接名;\n```\n#### 五.权限管理 (DCL) 语句\n\n1.GRANT        赋于权限\n常用的系统权限集合有以下三个:\nCONNECT(基本的连接), RESOURCE(程序开发), DBA(数据库管理)\n常用的数据对象权限有以下五个:\n```sql\nALL         ON 数据对象名,         SELECT ON 数据对象名,         UPDATE ON 数据对象名,\nDELETE         ON 数据对象名,  INSERT ON 数据对象名,   ALTER  ON 数据对象名\n```\n```plsql\nGRANT CONNECT, RESOURCE TO 用户名;\nGRANT SELECT ON 表名 TO 用户名;\nGRANT SELECT, INSERT, DELETE ON表名 TO 用户名1, 用户名2;\n```\n2.REVOKE 回收权限\n\n```sql\nREVOKE CONNECT, RESOURCE FROM 用户名;\nREVOKE SELECT ON 表名 FROM 用户名;\nREVOKE SELECT, INSERT, DELETE ON表名 FROM 用户名1, 用户名2;\n```\n\n\n查询数据库中第63号错误：\n```sql\nselect orgaddr,destaddr from sm_histable0116 where error_code='63';\n```\n查询数据库中开户用户最大提交和最大下发数： \n```sql\nselect MSISDN,TCOS,OCOS from ms_usertable；\n```\n\n查询数据库中各种错误代码的总和：\n```sql\nselect error_code,count(*) from sm_histable0513 group by error_code order\nby error_code;\n```\n查询报表数据库中话单统计种类查询。\n\n```sql\nselect sum(Successcount) from tbl_MiddleMt0411 where ServiceType2=111\nselect sum(successcount),servicetype from tbl_middlemt0411 group by servicetype\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-08-24-Oracle-chongyongmingling.md","raw":"title: Oracle 常用命令\ncomments: true\ndate: 2018-08-24 21:29:14\nupdated: 2018-08-24 21:29:14\ntags: [Oracle, SQL,PLSQL]\ncategories: \n- Program \n- Oracle\n\ndescription: Oacle&#58; Oracle 用命令，适合初学者。\n---\n\n## oracle常用命令\n\noracle 常用命令，适合初学者……\n查日期：select * from crd_cardmain where to_char(mindate,'YYYY-MM-DD')='20080826'\n\n### 一、ORACLE的启动和关闭\n\n- #### 在单机环境下\n\n要想启动或关闭ORACLE系统必须首先切换到ORACLE用户，如下\nsu - oracle\n\n- 启动ORACLE系统\n\n  ```plsql\n  oracle>svrmgrl\n  SVRMGR>connect internal\n  SVRMGR>startup\n  SVRMGR>quit\n  ```\n\n- 关闭ORACLE系统\n\n  ```plsql\n  oracle>svrmgrl\n  SVRMGR>connect internal\n  SVRMGR>shutdown\n  SVRMGR>quit\n  ```\n\n- 启动oracle9i数据库命令：\n\n  ```plsql\n  $ sqlplus /nolog\n  SQL*Plus: Release 9.2.0.1.0 - Production on Fri Oct 31 13:53:53 2003\n  Copyright (c) 1982, 2002, Oracle Corporation.  All rights reserved.\n  SQL> connect / as sysdba  \n  Connected to an idle instance.\n  SQL> startup^C\n  SQL> startup\n  ORACLE instance started.\n  ```\n\n- #### 在双机环境下\n\n要想启动或关闭ORACLE系统必须首先切换到root用户，如下\nsu － root\n\n- 启动ORACLE系统\n\n  hareg －y oracle\n\n- 关闭ORACLE系统\n  hareg －n oracle\n\nOracle数据库有哪几种启动方式\n\n\n说明：\n\n有以下几种启动方式：\n\n1. startup nomount\n   非安装启动，这种方式启动下可执行：重建控制文件、重建数据库\n\n   读取init.ora文件，启动instance，即启动SGA和后台进程，这种启动只需要init.ora文件。\n\n2. startup mount dbname\n   安装启动，这种方式启动下可执行：\n   数据库日志归档、\n   数据库介质恢复、\n   使数据文件联机或脱机，\n   重新定位数据文件、重做日志文件。\n\n   执行“nomount”，然后打开控制文件，确认数据文件和联机日志文件的位置，\n   但此时不对数据文件和日志文件进行校验检查。\n\n3. startup open dbname\n   先执行“nomount”，然后执行“mount”，再打开包括Redo log文件在内的所有数据库文件，\n   这种方式下可访问数据库中的数据。\n\n4. startup，等于以下三个命令\n   startup nomount\n   alter database mount\n   alter database open\n\n5. startup restrict\n   约束方式启动\n   这种方式能够启动数据库，但只允许具有一定特权的用户访问\n   非特权用户访问时，会出现以下提示：\n   ERROR：\n   ORA-01035: ORACLE 只允许具有 RESTRICTED SESSION 权限的用户使用\n\n6. startup force\n   强制启动方式\n   当不能关闭数据库时，可以用startup force来完成数据库的关闭\n   先关闭数据库，再执行正常启动数据库命令\n\n7. startup pfile=参数文件名\n   带初始化参数文件的启动方式\n   先读取参数文件，再按参数文件中的设置启动数据库\n   例：startup pfile=E:Oracleadminoradbpfileinit.ora\n\n8. startup EXCLUSIVE\n\n### 二、用户如何有效地利用数据字典\n\n     　ORACLE的数据字典是数据库的重要组成部分之一，它随着数据库的产生而产生, 随着数据库的变化而变化,\n   体现为sys用户下的一些表和视图。数据字典名称是大写的英文字符。\n\n    数据字典里存有用户信息、用户的权限信息、所有数据对象信息、表的约束条件、统计分析数据库的视图等。\n我们不能手工修改数据字典里的信息。\n\n　　很多时候，一般的ORACLE用户不知道如何有效地利用它。\n\n　　dictionary　　　全部数据字典表的名称和解释，它有一个同义词dict\n    dict_column　　 全部数据字典表里字段名称和解释\n\n    如果我们想查询跟索引有关的数据字典时，可以用下面这条SQL语句:\n    \n    SQL>select * from dictionary where instr(comments,'index')>0;\n    \n    如果我们想知道user_indexes表各字段名称的详细含义，可以用下面这条SQL语句:\n    \n    SQL>select column_name,comments from dict_columns where table_name='USER_INDEXES';\n    \n    依此类推，就可以轻松知道数据字典的详细名称和解释，不用查看ORACLE的其它文档资料了。\n    \n    下面按类别列出一些ORACLE用户常用数据字典的查询使用方法。\n    \n    1、用户\n    \n            查看当前用户的缺省表空间\n            SQL>select username,default_tablespace from user_users;\n    \n        查看当前用户的角色\n        SQL>select * from user_role_privs;\n    \n        查看当前用户的系统权限和表级权限\n        SQL>select * from user_sys_privs;\n        SQL>select * from user_tab_privs;\n    \n    2、表\n    \n            查看用户下所有的表\n            SQL>select * from user_tables;\n    \n            查看名称包含log字符的表\n            SQL>select object_name,object_id from user_objects\n                where instr(object_name,'LOG')>0;\n    \n            查看某表的创建时间\n            SQL>select object_name,created from user_objects where object_name=upper('&table_name');\n    \n            查看某表的大小\n            SQL>select sum(bytes)/(1024*1024) as \"size(M)\" from user_segments\n                where segment_name=upper('&table_name');\n    \n            查看放在ORACLE的内存区里的表\n            SQL>select table_name,cache from user_tables where instr(cache,'Y')>0;\n    \n    3、索引\n    \n            查看索引个数和类别\n            SQL>select index_name,index_type,table_name from user_indexes order by table_name;\n    \n            查看索引被索引的字段\n            SQL>select * from user_ind_columns where index_name=upper('&index_name');\n    \n            查看索引的大小\n            SQL>select sum(bytes)/(1024*1024) as \"size(M)\" from user_segments\n                where segment_name=upper('&index_name');\n    \n    4、序列号\n    \n            查看序列号，last_number是当前值\n            SQL>select * from user_sequences;\n    \n    5、视图\n    \n            查看视图的名称\n            SQL>select view_name from user_views;\n    \n            查看创建视图的select语句\n            SQL>set view_name,text_length from user_views;\n            SQL>set long 2000;                说明：可以根据视图的text_length值设定set long 的大小\n            SQL>select text from user_views where view_name=upper('&view_name');\n    \n    6、同义词\n    \n            查看同义词的名称\n            SQL>select * from user_synonyms;\n    \n    7、约束条件\n    \n            查看某表的约束条件\n            SQL>select constraint_name, constraint_type,search_condition, r_constraint_name\n                from user_constraints where table_name = upper('&table_name');\n    \n        SQL>select c.constraint_name,c.constraint_type,cc.column_name\n            from user_constraints c,user_cons_columns cc\n            where c.owner = upper('&table_owner') and c.table_name = upper('&table_name')\n            and c.owner = cc.owner and c.constraint_name = cc.constraint_name\n            order by cc.position;\n    \n    8、存储函数和过程\n    \n            查看函数和过程的状态\n            SQL>select object_name,status from user_objects where object_type='FUNCTION';\n            SQL>select object_name,status from user_objects where object_type='PROCEDURE';\n    \n            查看函数和过程的源代码\n            SQL>select text from all_source where owner=user and name=upper('&plsql_name');\n\n### 三、查看数据库的SQL\n\n#### 1、查看表空间的名称及大小\n\n    select t.tablespace_name, round(sum(bytes/(1024*1024)),0) ts_size\n    from dba_tablespaces t, dba_data_files d\n    where t.tablespace_name = d.tablespace_name\n    group by t.tablespace_name;\n\n#### 2、查看表空间物理文件的名称及大小\n\n    select tablespace_name, file_id, file_name,\n    round(bytes/(1024*1024),0) total_space\n    from dba_data_files\n    order by tablespace_name;\n\n#### 3、查看回滚段名称及大小\n\n    select segment_name, tablespace_name, r.status,\n    (initial_extent/1024) InitialExtent,(next_extent/1024) NextExtent,\n    max_extents, v.curext CurExtent\n    From dba_rollback_segs r, v$rollstat v\n    Where r.segment_id = v.usn(+)\n    order by segment_name ;\n\n#### 4、查看控制文件\n\n    select name from v$controlfile;\n\n#### 5、查看日志文件\n\n    select member from v$logfile;\n\n#### 6、查看表空间的使用情况\n\n    select sum(bytes)/(1024*1024) as free_space,tablespace_name\n    from dba_free_space\n    group by tablespace_name;\n    \n    SELECT A.TABLESPACE_NAME,A.BYTES TOTAL,B.BYTES USED, C.BYTES FREE,\n    (B.BYTES*100)/A.BYTES \"% USED\",(C.BYTES*100)/A.BYTES \"% FREE\"\n    FROM SYS.SM$TS_AVAIL A,SYS.SM$TS_USED B,SYS.SM$TS_FREE C\n    WHERE A.TABLESPACE_NAME=B.TABLESPACE_NAME AND A.TABLESPACE_NAME=C.TABLESPACE_NAME;\n\n#### 7、查看数据库库对象\n\n    select owner, object_type, status, count(*) count# from all_objects group by owner, object_type, status;\n\n#### 8、查看数据库的版本\n\n    Select version FROM Product_component_version\n    Where SUBSTR(PRODUCT,1,6)='Oracle';\n\n#### 9、查看数据库的创建日期和归档方式\n\n    Select Created, Log_Mode, Log_Mode From V$Database;\n### 四、ORACLE用户连接的管理\n\n用系统管理员，查看当前数据库有几个用户连接：\n\nSQL> select username,sid,serial# from v$session;\n\n如果要停某个连接用\n\nSQL> alter system kill session 'sid,serial#';\n\n如果这命令不行,找它UNIX的进程数\n\nSQL> select pro.spid from v$session ses,v$process pro where ses.sid=21 and ses.paddr=pro.addr;\n\n说明：21是某个连接的sid数\n\n然后用 kill 命令杀此进程号。\n\n### 五、SQL*PLUS使用\n\na、进入SQL*Plus\n$sqlplus 用户名/密码\n\n   退出SQL*Plus\nSQL>exit\n\nb、在sqlplus下得到帮助信息\n列出全部SQL命令和SQL*Plus命令\nSQL>help\n列出某个特定的命令的信息\nSQL>help 命令名\n\nc、显示表结构命令DESCRIBE\nSQL>DESC 表名\n\nd、SQL*Plus中的编辑命令\n显示SQL缓冲区命令\nSQL>L\n\n修改SQL命令\n首先要将待改正行变为当前行\nSQL>n\n用CHANGE命令修改内容\nSQL>c/旧/新\n重新确认是否已正确\nSQL>L\n\n使用INPUT命令可以在SQL缓冲区中增加一行或多行\nSQL>i\nSQL>输入内容\n\ne、调用外部系统编辑器\nSQL>edit 文件名\n可以使用DEFINE命令设置系统变量EDITOR来改变文本编辑器的类型，在login.sql文件中定义如下一行\nDEFINE_EDITOR=vi\n\nf、运行命令文件\nSQL>START test\nSQL>@test\n\n常用SQL*Plus语句\na、表的创建、修改、删除\n创建表的命令格式如下：\ncreate table 表名 （列说明列表）；\n\n为基表增加新列命令如下：\nALTER TABLE 表名 ADD （列说明列表）\n例：为test表增加一列Age，用来存放年龄\n    sql>alter table test\n        add （Age number(3)）；\n\n修改基表列定义命令如下：\nALTER TABLE 表名\nMODIFY （列名 数据类型）\n例：将test表中的Count列宽度加长为10个字符\n    sql>alter atble test\n        modify （County char(10)）；\n\nb、将一张表删除语句的格式如下：\nDORP TABLE 表名；\n例：表删除将同时删除表的数据和表的定义\nsql>drop table test\n\nc、表空间的创建、删除\n\n### 六、ORACLE逻辑备份的SH文件\n\n```bash\n完全备份的SH文件：exp_comp.sh\n\nrq=date +\"%m%d\"\n\nsu - oracle -c \"exp system/manager full=y inctype=complete file=/oracle/export/db_comp$rq.dmp\"\n\n累计备份的SH文件：exp_cumu.sh\n\nrq=date +\"%m%d\"\n\nsu - oracle -c \"exp system/manager full=y inctype=cumulative file=/oracle/export/db_cumu$rq.dmp\"\n\n增量备份的SH文件: exp_incr.sh\n\nrq=date +\"%m%d\"\n\nsu - oracle -c \"exp system/manager full=y inctype=incremental file=/oracle/export/db_incr$rq.dmp\"\n\nroot用户crontab文件\n/var/spool/cron/crontabs/root增加以下内容\n0 2 1 * * /oracle/exp_comp.sh\n30 2 * * 0-5 /oracle/exp_incr.sh\n45 2 * * 6 /oracle/exp_cumu.sh\n\n```\n\n当然这个时间表可以根据不同的需求来改变的，这只是一个例子。\n\n### 七、ORACLE 常用的SQL语法和数据对象\n\n#### 一.数据控制语句 (DML) 部分\n\n1.INSERT  (往数据表里插入记录的语句)\n\nINSERT INTO 表名(字段名1, 字段名2, ……) VALUES ( 值1, 值2, ……);\nINSERT INTO 表名(字段名1, 字段名2, ……)  SELECT (字段名1, 字段名2, ……) FROM 另外的表名;\n\n字符串类型的字段值必须用单引号括起来, 例如: ’GOOD DAY’\n如果字段值里包含单引号’ 需要进行字符串转换, 我们把它替换成两个单引号''.\n字符串类型的字段值超过定义的长度会出错, 最好在插入前进行长度校验.\n\n日期字段的字段值可以用当前数据库的系统时间SYSDATE, 精确到秒\n或者用字符串转换成日期型函数TO_DATE(‘2001-08-01’,’YYYY-MM-DD’)\nTO_DATE()还有很多种日期格式, 可以参看ORACLE DOC.\n年-月-日 小时:分钟:秒 的格式YYYY-MM-DD HH24:MI:SS\n\nINSERT时最大可操作的字符串长度小于等于4000个单字节, 如果要插入更长的字符串, 请考虑字段用CLOB类型,\n方法借用ORACLE里自带的DBMS_LOB程序包.\n\nINSERT时如果要用到从1开始自动增长的序列号, 应该先建立一个序列号\nCREATE SEQUENCE 序列号的名称 (最好是表名+序列号标记) INCREMENT BY 1  START  WITH  1\nMAXVALUE  99999  CYCLE  NOCACHE;\n其中最大的值按字段的长度来定, 如果定义的自动增长的序列号 NUMBER(6) , 最大值为999999\nINSERT 语句插入这个字段值为: 序列号的名称.NEXTVAL\n\n2.DELETE  (删除数据表里记录的语句)\n\nDELETE FROM表名 WHERE 条件;\n\n注意：删除记录并不能释放ORACLE里被占用的数据块表空间. 它只把那些被删除的数据块标成unused.\n\n如果确实要删除一个大表里的全部记录, 可以用 TRUNCATE 命令, 它可以释放占用的数据块表空间\nTRUNCATE TABLE 表名;\n此操作不可回退.\n\n3.UPDATE  (修改数据表里记录的语句)\n\nUPDATE表名 SET 字段名1=值1, 字段名2=值2, …… WHERE 条件;\n\n如果修改的值N没有赋值或定义时, 将把原来的记录内容清为NULL, 最好在修改前进行非空校验;\n值N超过定义的长度会出错, 最好在插入前进行长度校验..\n\n注意事项:\nA.        以上SQL语句对表都加上了行级锁,\n        确认完成后, 必须加上事物处理结束的命令 COMMIT 才能正式生效,\n        否则改变不一定写入数据库里.\n        如果想撤回这些操作, 可以用命令 ROLLBACK 复原.\n\nB.        在运行INSERT, DELETE 和 UPDATE 语句前最好估算一下可能操作的记录范围,\n        应该把它限定在较小 (一万条记录) 范围内,. 否则ORACLE处理这个事物用到很大的回退段.\n        程序响应慢甚至失去响应. 如果记录数上十万以上这些操作, 可以把这些SQL语句分段分次完成,\n        其间加上COMMIT 确认事物处理.\n\n#### 二.数据定义 (DDL) 部分\n\n1.CREATE (创建表, 索引, 视图, 同义词, 过程, 函数, 数据库链接等)\n\nORACLE常用的字段类型有\nCHAR                        固定长度的字符串\nVARCHAR2                可变长度的字符串\nNUMBER(M,N)                数字型M是位数总长度, N是小数的长度\nDATE                        日期类型\n\n创建表时要把较小的不为空的字段放在前面, 可能为空的字段放在后面\n\n创建表时可以用中文的字段名, 但最好还是用英文的字段名\n\n创建表时可以给字段加上默认值, 例如 DEFAULT SYSDATE\n这样每次插入和修改时, 不用程序操作这个字段都能得到动作的时间\n\n创建表时可以给字段加上约束条件\n例如 不允许重复 UNIQUE, 关键字 PRIMARY KEY\n\n2.ALTER        (改变表, 索引, 视图等)\n\n改变表的名称\nALTER TABLE 表名1  TO 表名2;\n\n在表的后面增加一个字段\nALTER TABLE表名 ADD 字段名 字段名描述;\n\n修改表里字段的定义描述\nALTER TABLE表名 MODIFY字段名 字段名描述;\n\n给表里的字段加上约束条件\nALTER TABLE 表名 ADD CONSTRAINT 约束名 PRIMARY KEY (字段名);\nALTER TABLE 表名 ADD CONSTRAINT 约束名 UNIQUE (字段名);\n\n把表放在或取出数据库的内存区\nALTER TABLE 表名 CACHE;\nALTER TABLE 表名 NOCACHE;\n\n3.DROP        (删除表, 索引, 视图, 同义词, 过程, 函数, 数据库链接等)\n\n删除表和它所有的约束条件\nDROP TABLE 表名 CASCADE CONSTRAINTS;\n\n4.TRUNCATE (清空表里的所有记录, 保留表的结构)\n\nTRUNCATE 表名;\n\n#### 三.查询语句 (SELECT) 部分\n\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE 条件;\n\n字段名可以带入函数\n  例如:  COUNT(*), MIN(字段名),  MAX(字段名),  AVG(字段名), DISTINCT(字段名),\n           TO_CHAR(DATE字段名,'YYYY-MM-DD HH24:MI:SS')\n\nNVL(EXPR1, EXPR2)函数\n解释:\nIF EXPR1=NULL\n                RETURN EXPR2\nELSE\n                       RETURN EXPR1\n\nDECODE(AA﹐V1﹐R1﹐V2﹐R2....)函数\n解释:\nIF AA=V1 THEN RETURN R1\nIF AA=V2 THEN RETURN R2\n..…\nELSE\nRETURN NULL\n\nLPAD(char1,n,char2)函数\n解释:\n字符char1按制定的位数n显示，不足的位数用char2字符串替换左边的空位\n\n字段名之间可以进行算术运算\n例如:  (字段名1*字段名1)/3\n\n查询语句可以嵌套\n例如:\n```plsql\nSELECT …… FROM\n(SELECT …… FROM表名1, [表名2, ……] WHERE 条件) WHERE 条件2;\n```\n两个查询语句的结果可以做集合操作\n例如: \n```plsql\n并集UNION(去掉重复记录), 并集UNION ALL(不去掉重复记录), 差集MINUS,  交集INTERSECT\n```\n分组查询\n```plsql\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] GROUP BY字段名1\n[HAVING 条件] ;\n```\n两个以上表之间的连接查询\n```plsql\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE\n                表名1.字段名 = 表名2. 字段名 [ AND ……] ;\n\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE\n                表名1.字段名 = 表名2. 字段名(+) [ AND ……] ;\n​```plsql\n有(+)号的字段位置自动补空值\n\n查询结果集的排序操作, 默认的排序是升序ASC, 降序是DESC\n​```plsql\nSELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……]\nORDER BY字段名1, 字段名2 DESC;\n```\n字符串模糊比较的方法\n\nINSTR(字段名, ‘字符串’)>0\n字段名 LIKE  ‘字符串%’  [‘%字符串%’]\n\n每个表都有一个隐含的字段ROWID, 它标记着记录的唯一性.\n\n#### 四.ORACLE里常用的数据对象 (SCHEMA)\n\n1.索引 (INDEX)\n```plsql\nCREATE INDEX 索引名ON 表名 ( 字段1, [字段2, ……] );\nALTER INDEX 索引名 REBUILD;\n```\n一个表的索引最好不要超过三个 (特殊的大表除外), 最好用单字段索引, 结合SQL语句的分析执行情况,\n也可以建立多字段的组合索引和基于函数的索引\n\nORACLE8.1.7字符串可以索引的最大长度为1578 单字节\nORACLE8.0.6字符串可以索引的最大长度为758 单字节\n\n2.视图 (VIEW)\n```plsql\nCREATE VIEW 视图名AS SELECT …. FROM …..;\nALTER VIEW视图名 COMPILE;\n```\n视图仅是一个SQL查询语句, 它可以把表之间复杂的关系简洁化.\n\n3.同义词 (SYNONMY)\n```plsql\nCREATE SYNONYM同义词名FOR 表名;\nCREATE SYNONYM同义词名FOR 表名@数据库链接名;\n```\n4.数据库链接 (DATABASE LINK)\n```plsql\nCREATE DATABASE LINK数据库链接名CONNECT TO 用户名 IDENTIFIED BY 密码 USING ‘数据库连接字符串’;\n```\n数据库连接字符串可以用NET8 EASY CONFIG或者直接修改TNSNAMES.ORA里定义.\n\n数据库参数global_name=true时要求数据库链接名称跟远端数据库名称一样\n\n数据库全局名称可以用以下命令查出\n```sql\nSELECT * FROM GLOBAL_NAME;\n```\n查询远端数据库里的表\n```sql\nSELECT …… FROM 表名@数据库链接名;\n```\n#### 五.权限管理 (DCL) 语句\n\n1.GRANT        赋于权限\n常用的系统权限集合有以下三个:\nCONNECT(基本的连接), RESOURCE(程序开发), DBA(数据库管理)\n常用的数据对象权限有以下五个:\n```sql\nALL         ON 数据对象名,         SELECT ON 数据对象名,         UPDATE ON 数据对象名,\nDELETE         ON 数据对象名,  INSERT ON 数据对象名,   ALTER  ON 数据对象名\n```\n```plsql\nGRANT CONNECT, RESOURCE TO 用户名;\nGRANT SELECT ON 表名 TO 用户名;\nGRANT SELECT, INSERT, DELETE ON表名 TO 用户名1, 用户名2;\n```\n2.REVOKE 回收权限\n\n```sql\nREVOKE CONNECT, RESOURCE FROM 用户名;\nREVOKE SELECT ON 表名 FROM 用户名;\nREVOKE SELECT, INSERT, DELETE ON表名 FROM 用户名1, 用户名2;\n```\n\n\n查询数据库中第63号错误：\n```sql\nselect orgaddr,destaddr from sm_histable0116 where error_code='63';\n```\n查询数据库中开户用户最大提交和最大下发数： \n```sql\nselect MSISDN,TCOS,OCOS from ms_usertable；\n```\n\n查询数据库中各种错误代码的总和：\n```sql\nselect error_code,count(*) from sm_histable0513 group by error_code order\nby error_code;\n```\n查询报表数据库中话单统计种类查询。\n\n```sql\nselect sum(Successcount) from tbl_MiddleMt0411 where ServiceType2=111\nselect sum(successcount),servicetype from tbl_middlemt0411 group by servicetype\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Oracle-chongyongmingling","published":1,"layout":"post","photos":[],"link":"","_id":"cjl9jao9q000dwswkxpk71ndj","content":"<h2 id=\"oracle常用命令\"><a href=\"#oracle常用命令\" class=\"headerlink\" title=\"oracle常用命令\"></a>oracle常用命令</h2><p>oracle 常用命令，适合初学者……<br>查日期：select * from crd_cardmain where to_char(mindate,’YYYY-MM-DD’)=’20080826’</p>\n<h3 id=\"一、ORACLE的启动和关闭\"><a href=\"#一、ORACLE的启动和关闭\" class=\"headerlink\" title=\"一、ORACLE的启动和关闭\"></a>一、ORACLE的启动和关闭</h3><ul>\n<li><h4 id=\"在单机环境下\"><a href=\"#在单机环境下\" class=\"headerlink\" title=\"在单机环境下\"></a>在单机环境下</h4></li>\n</ul>\n<p>要想启动或关闭ORACLE系统必须首先切换到ORACLE用户，如下<br>su - oracle</p>\n<ul>\n<li><p>启动ORACLE系统</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">oracle&gt;svrmgrl</span><br><span class=\"line\">SVRMGR&gt;connect internal</span><br><span class=\"line\">SVRMGR&gt;startup</span><br><span class=\"line\">SVRMGR&gt;quit</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭ORACLE系统</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">oracle&gt;svrmgrl</span><br><span class=\"line\">SVRMGR&gt;connect internal</span><br><span class=\"line\">SVRMGR&gt;shutdown</span><br><span class=\"line\">SVRMGR&gt;quit</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动oracle9i数据库命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sqlplus /nolog</span><br><span class=\"line\">SQL*Plus: Release 9.2.0.1.0 - Production on Fri Oct 31 13:53:53 2003</span><br><span class=\"line\">Copyright (c) 1982, 2002, Oracle Corporation.  All rights reserved.</span><br><span class=\"line\">SQL&gt; connect / as sysdba  </span><br><span class=\"line\">Connected to an idle instance.</span><br><span class=\"line\">SQL&gt; startup^C</span><br><span class=\"line\">SQL&gt; startup</span><br><span class=\"line\">ORACLE instance started.</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"在双机环境下\"><a href=\"#在双机环境下\" class=\"headerlink\" title=\"在双机环境下\"></a>在双机环境下</h4></li>\n</ul>\n<p>要想启动或关闭ORACLE系统必须首先切换到root用户，如下<br>su － root</p>\n<ul>\n<li><p>启动ORACLE系统</p>\n<p>hareg －y oracle</p>\n</li>\n<li><p>关闭ORACLE系统<br>hareg －n oracle</p>\n</li>\n</ul>\n<p>Oracle数据库有哪几种启动方式</p>\n<p>说明：</p>\n<p>有以下几种启动方式：</p>\n<ol>\n<li><p>startup nomount<br>非安装启动，这种方式启动下可执行：重建控制文件、重建数据库</p>\n<p>读取init.ora文件，启动instance，即启动SGA和后台进程，这种启动只需要init.ora文件。</p>\n</li>\n<li><p>startup mount dbname<br>安装启动，这种方式启动下可执行：<br>数据库日志归档、<br>数据库介质恢复、<br>使数据文件联机或脱机，<br>重新定位数据文件、重做日志文件。</p>\n<p>执行“nomount”，然后打开控制文件，确认数据文件和联机日志文件的位置，<br>但此时不对数据文件和日志文件进行校验检查。</p>\n</li>\n<li><p>startup open dbname<br>先执行“nomount”，然后执行“mount”，再打开包括Redo log文件在内的所有数据库文件，<br>这种方式下可访问数据库中的数据。</p>\n</li>\n<li><p>startup，等于以下三个命令<br>startup nomount<br>alter database mount<br>alter database open</p>\n</li>\n<li><p>startup restrict<br>约束方式启动<br>这种方式能够启动数据库，但只允许具有一定特权的用户访问<br>非特权用户访问时，会出现以下提示：<br>ERROR：<br>ORA-01035: ORACLE 只允许具有 RESTRICTED SESSION 权限的用户使用</p>\n</li>\n<li><p>startup force<br>强制启动方式<br>当不能关闭数据库时，可以用startup force来完成数据库的关闭<br>先关闭数据库，再执行正常启动数据库命令</p>\n</li>\n<li><p>startup pfile=参数文件名<br>带初始化参数文件的启动方式<br>先读取参数文件，再按参数文件中的设置启动数据库<br>例：startup pfile=E:Oracleadminoradbpfileinit.ora</p>\n</li>\n<li><p>startup EXCLUSIVE</p>\n</li>\n</ol>\n<h3 id=\"二、用户如何有效地利用数据字典\"><a href=\"#二、用户如何有效地利用数据字典\" class=\"headerlink\" title=\"二、用户如何有效地利用数据字典\"></a>二、用户如何有效地利用数据字典</h3><pre><code> 　ORACLE的数据字典是数据库的重要组成部分之一，它随着数据库的产生而产生, 随着数据库的变化而变化,\n</code></pre><p>   体现为sys用户下的一些表和视图。数据字典名称是大写的英文字符。</p>\n<pre><code>数据字典里存有用户信息、用户的权限信息、所有数据对象信息、表的约束条件、统计分析数据库的视图等。\n</code></pre><p>我们不能手工修改数据字典里的信息。</p>\n<p>　　很多时候，一般的ORACLE用户不知道如何有效地利用它。</p>\n<p>　　dictionary　　　全部数据字典表的名称和解释，它有一个同义词dict<br>    dict_column　　 全部数据字典表里字段名称和解释</p>\n<pre><code>如果我们想查询跟索引有关的数据字典时，可以用下面这条SQL语句:\n\nSQL&gt;select * from dictionary where instr(comments,&apos;index&apos;)&gt;0;\n\n如果我们想知道user_indexes表各字段名称的详细含义，可以用下面这条SQL语句:\n\nSQL&gt;select column_name,comments from dict_columns where table_name=&apos;USER_INDEXES&apos;;\n\n依此类推，就可以轻松知道数据字典的详细名称和解释，不用查看ORACLE的其它文档资料了。\n\n下面按类别列出一些ORACLE用户常用数据字典的查询使用方法。\n\n1、用户\n\n        查看当前用户的缺省表空间\n        SQL&gt;select username,default_tablespace from user_users;\n\n    查看当前用户的角色\n    SQL&gt;select * from user_role_privs;\n\n    查看当前用户的系统权限和表级权限\n    SQL&gt;select * from user_sys_privs;\n    SQL&gt;select * from user_tab_privs;\n\n2、表\n\n        查看用户下所有的表\n        SQL&gt;select * from user_tables;\n\n        查看名称包含log字符的表\n        SQL&gt;select object_name,object_id from user_objects\n            where instr(object_name,&apos;LOG&apos;)&gt;0;\n\n        查看某表的创建时间\n        SQL&gt;select object_name,created from user_objects where object_name=upper(&apos;&amp;table_name&apos;);\n\n        查看某表的大小\n        SQL&gt;select sum(bytes)/(1024*1024) as &quot;size(M)&quot; from user_segments\n            where segment_name=upper(&apos;&amp;table_name&apos;);\n\n        查看放在ORACLE的内存区里的表\n        SQL&gt;select table_name,cache from user_tables where instr(cache,&apos;Y&apos;)&gt;0;\n\n3、索引\n\n        查看索引个数和类别\n        SQL&gt;select index_name,index_type,table_name from user_indexes order by table_name;\n\n        查看索引被索引的字段\n        SQL&gt;select * from user_ind_columns where index_name=upper(&apos;&amp;index_name&apos;);\n\n        查看索引的大小\n        SQL&gt;select sum(bytes)/(1024*1024) as &quot;size(M)&quot; from user_segments\n            where segment_name=upper(&apos;&amp;index_name&apos;);\n\n4、序列号\n\n        查看序列号，last_number是当前值\n        SQL&gt;select * from user_sequences;\n\n5、视图\n\n        查看视图的名称\n        SQL&gt;select view_name from user_views;\n\n        查看创建视图的select语句\n        SQL&gt;set view_name,text_length from user_views;\n        SQL&gt;set long 2000;                说明：可以根据视图的text_length值设定set long 的大小\n        SQL&gt;select text from user_views where view_name=upper(&apos;&amp;view_name&apos;);\n\n6、同义词\n\n        查看同义词的名称\n        SQL&gt;select * from user_synonyms;\n\n7、约束条件\n\n        查看某表的约束条件\n        SQL&gt;select constraint_name, constraint_type,search_condition, r_constraint_name\n            from user_constraints where table_name = upper(&apos;&amp;table_name&apos;);\n\n    SQL&gt;select c.constraint_name,c.constraint_type,cc.column_name\n        from user_constraints c,user_cons_columns cc\n        where c.owner = upper(&apos;&amp;table_owner&apos;) and c.table_name = upper(&apos;&amp;table_name&apos;)\n        and c.owner = cc.owner and c.constraint_name = cc.constraint_name\n        order by cc.position;\n\n8、存储函数和过程\n\n        查看函数和过程的状态\n        SQL&gt;select object_name,status from user_objects where object_type=&apos;FUNCTION&apos;;\n        SQL&gt;select object_name,status from user_objects where object_type=&apos;PROCEDURE&apos;;\n\n        查看函数和过程的源代码\n        SQL&gt;select text from all_source where owner=user and name=upper(&apos;&amp;plsql_name&apos;);\n</code></pre><h3 id=\"三、查看数据库的SQL\"><a href=\"#三、查看数据库的SQL\" class=\"headerlink\" title=\"三、查看数据库的SQL\"></a>三、查看数据库的SQL</h3><h4 id=\"1、查看表空间的名称及大小\"><a href=\"#1、查看表空间的名称及大小\" class=\"headerlink\" title=\"1、查看表空间的名称及大小\"></a>1、查看表空间的名称及大小</h4><pre><code>select t.tablespace_name, round(sum(bytes/(1024*1024)),0) ts_size\nfrom dba_tablespaces t, dba_data_files d\nwhere t.tablespace_name = d.tablespace_name\ngroup by t.tablespace_name;\n</code></pre><h4 id=\"2、查看表空间物理文件的名称及大小\"><a href=\"#2、查看表空间物理文件的名称及大小\" class=\"headerlink\" title=\"2、查看表空间物理文件的名称及大小\"></a>2、查看表空间物理文件的名称及大小</h4><pre><code>select tablespace_name, file_id, file_name,\nround(bytes/(1024*1024),0) total_space\nfrom dba_data_files\norder by tablespace_name;\n</code></pre><h4 id=\"3、查看回滚段名称及大小\"><a href=\"#3、查看回滚段名称及大小\" class=\"headerlink\" title=\"3、查看回滚段名称及大小\"></a>3、查看回滚段名称及大小</h4><pre><code>select segment_name, tablespace_name, r.status,\n(initial_extent/1024) InitialExtent,(next_extent/1024) NextExtent,\nmax_extents, v.curext CurExtent\nFrom dba_rollback_segs r, v$rollstat v\nWhere r.segment_id = v.usn(+)\norder by segment_name ;\n</code></pre><h4 id=\"4、查看控制文件\"><a href=\"#4、查看控制文件\" class=\"headerlink\" title=\"4、查看控制文件\"></a>4、查看控制文件</h4><pre><code>select name from v$controlfile;\n</code></pre><h4 id=\"5、查看日志文件\"><a href=\"#5、查看日志文件\" class=\"headerlink\" title=\"5、查看日志文件\"></a>5、查看日志文件</h4><pre><code>select member from v$logfile;\n</code></pre><h4 id=\"6、查看表空间的使用情况\"><a href=\"#6、查看表空间的使用情况\" class=\"headerlink\" title=\"6、查看表空间的使用情况\"></a>6、查看表空间的使用情况</h4><pre><code>select sum(bytes)/(1024*1024) as free_space,tablespace_name\nfrom dba_free_space\ngroup by tablespace_name;\n\nSELECT A.TABLESPACE_NAME,A.BYTES TOTAL,B.BYTES USED, C.BYTES FREE,\n(B.BYTES*100)/A.BYTES &quot;% USED&quot;,(C.BYTES*100)/A.BYTES &quot;% FREE&quot;\nFROM SYS.SM$TS_AVAIL A,SYS.SM$TS_USED B,SYS.SM$TS_FREE C\nWHERE A.TABLESPACE_NAME=B.TABLESPACE_NAME AND A.TABLESPACE_NAME=C.TABLESPACE_NAME;\n</code></pre><h4 id=\"7、查看数据库库对象\"><a href=\"#7、查看数据库库对象\" class=\"headerlink\" title=\"7、查看数据库库对象\"></a>7、查看数据库库对象</h4><pre><code>select owner, object_type, status, count(*) count# from all_objects group by owner, object_type, status;\n</code></pre><h4 id=\"8、查看数据库的版本\"><a href=\"#8、查看数据库的版本\" class=\"headerlink\" title=\"8、查看数据库的版本\"></a>8、查看数据库的版本</h4><pre><code>Select version FROM Product_component_version\nWhere SUBSTR(PRODUCT,1,6)=&apos;Oracle&apos;;\n</code></pre><h4 id=\"9、查看数据库的创建日期和归档方式\"><a href=\"#9、查看数据库的创建日期和归档方式\" class=\"headerlink\" title=\"9、查看数据库的创建日期和归档方式\"></a>9、查看数据库的创建日期和归档方式</h4><pre><code>Select Created, Log_Mode, Log_Mode From V$Database;\n</code></pre><h3 id=\"四、ORACLE用户连接的管理\"><a href=\"#四、ORACLE用户连接的管理\" class=\"headerlink\" title=\"四、ORACLE用户连接的管理\"></a>四、ORACLE用户连接的管理</h3><p>用系统管理员，查看当前数据库有几个用户连接：</p>\n<p>SQL&gt; select username,sid,serial# from v$session;</p>\n<p>如果要停某个连接用</p>\n<p>SQL&gt; alter system kill session ‘sid,serial#’;</p>\n<p>如果这命令不行,找它UNIX的进程数</p>\n<p>SQL&gt; select pro.spid from v$session ses,v$process pro where ses.sid=21 and ses.paddr=pro.addr;</p>\n<p>说明：21是某个连接的sid数</p>\n<p>然后用 kill 命令杀此进程号。</p>\n<h3 id=\"五、SQL-PLUS使用\"><a href=\"#五、SQL-PLUS使用\" class=\"headerlink\" title=\"五、SQL*PLUS使用\"></a>五、SQL*PLUS使用</h3><p>a、进入SQL*Plus<br>$sqlplus 用户名/密码</p>\n<p>   退出SQL*Plus<br>SQL&gt;exit</p>\n<p>b、在sqlplus下得到帮助信息<br>列出全部SQL命令和SQL*Plus命令<br>SQL&gt;help<br>列出某个特定的命令的信息<br>SQL&gt;help 命令名</p>\n<p>c、显示表结构命令DESCRIBE<br>SQL&gt;DESC 表名</p>\n<p>d、SQL*Plus中的编辑命令<br>显示SQL缓冲区命令<br>SQL&gt;L</p>\n<p>修改SQL命令<br>首先要将待改正行变为当前行<br>SQL&gt;n<br>用CHANGE命令修改内容<br>SQL&gt;c/旧/新<br>重新确认是否已正确<br>SQL&gt;L</p>\n<p>使用INPUT命令可以在SQL缓冲区中增加一行或多行<br>SQL&gt;i<br>SQL&gt;输入内容</p>\n<p>e、调用外部系统编辑器<br>SQL&gt;edit 文件名<br>可以使用DEFINE命令设置系统变量EDITOR来改变文本编辑器的类型，在login.sql文件中定义如下一行<br>DEFINE_EDITOR=vi</p>\n<p>f、运行命令文件<br>SQL&gt;START test<br>SQL&gt;@test</p>\n<p>常用SQL*Plus语句<br>a、表的创建、修改、删除<br>创建表的命令格式如下：<br>create table 表名 （列说明列表）；</p>\n<p>为基表增加新列命令如下：<br>ALTER TABLE 表名 ADD （列说明列表）<br>例：为test表增加一列Age，用来存放年龄<br>    sql&gt;alter table test<br>        add （Age number(3)）；</p>\n<p>修改基表列定义命令如下：<br>ALTER TABLE 表名<br>MODIFY （列名 数据类型）<br>例：将test表中的Count列宽度加长为10个字符<br>    sql&gt;alter atble test<br>        modify （County char(10)）；</p>\n<p>b、将一张表删除语句的格式如下：<br>DORP TABLE 表名；<br>例：表删除将同时删除表的数据和表的定义<br>sql&gt;drop table test</p>\n<p>c、表空间的创建、删除</p>\n<h3 id=\"六、ORACLE逻辑备份的SH文件\"><a href=\"#六、ORACLE逻辑备份的SH文件\" class=\"headerlink\" title=\"六、ORACLE逻辑备份的SH文件\"></a>六、ORACLE逻辑备份的SH文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">完全备份的SH文件：exp_comp.sh</span><br><span class=\"line\"></span><br><span class=\"line\">rq=date +<span class=\"string\">\"%m%d\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">su - oracle -c <span class=\"string\">\"exp system/manager full=y inctype=complete file=/oracle/export/db_comp<span class=\"variable\">$rq</span>.dmp\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">累计备份的SH文件：exp_cumu.sh</span><br><span class=\"line\"></span><br><span class=\"line\">rq=date +<span class=\"string\">\"%m%d\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">su - oracle -c <span class=\"string\">\"exp system/manager full=y inctype=cumulative file=/oracle/export/db_cumu<span class=\"variable\">$rq</span>.dmp\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">增量备份的SH文件: exp_incr.sh</span><br><span class=\"line\"></span><br><span class=\"line\">rq=date +<span class=\"string\">\"%m%d\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">su - oracle -c <span class=\"string\">\"exp system/manager full=y inctype=incremental file=/oracle/export/db_incr<span class=\"variable\">$rq</span>.dmp\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">root用户crontab文件</span><br><span class=\"line\">/var/spool/cron/crontabs/root增加以下内容</span><br><span class=\"line\">0 2 1 * * /oracle/exp_comp.sh</span><br><span class=\"line\">30 2 * * 0-5 /oracle/exp_incr.sh</span><br><span class=\"line\">45 2 * * 6 /oracle/exp_cumu.sh</span><br></pre></td></tr></table></figure>\n<p>当然这个时间表可以根据不同的需求来改变的，这只是一个例子。</p>\n<h3 id=\"七、ORACLE-常用的SQL语法和数据对象\"><a href=\"#七、ORACLE-常用的SQL语法和数据对象\" class=\"headerlink\" title=\"七、ORACLE 常用的SQL语法和数据对象\"></a>七、ORACLE 常用的SQL语法和数据对象</h3><h4 id=\"一-数据控制语句-DML-部分\"><a href=\"#一-数据控制语句-DML-部分\" class=\"headerlink\" title=\"一.数据控制语句 (DML) 部分\"></a>一.数据控制语句 (DML) 部分</h4><p>1.INSERT  (往数据表里插入记录的语句)</p>\n<p>INSERT INTO 表名(字段名1, 字段名2, ……) VALUES ( 值1, 值2, ……);<br>INSERT INTO 表名(字段名1, 字段名2, ……)  SELECT (字段名1, 字段名2, ……) FROM 另外的表名;</p>\n<p>字符串类型的字段值必须用单引号括起来, 例如: ’GOOD DAY’<br>如果字段值里包含单引号’ 需要进行字符串转换, 我们把它替换成两个单引号’’.<br>字符串类型的字段值超过定义的长度会出错, 最好在插入前进行长度校验.</p>\n<p>日期字段的字段值可以用当前数据库的系统时间SYSDATE, 精确到秒<br>或者用字符串转换成日期型函数TO_DATE(‘2001-08-01’,’YYYY-MM-DD’)<br>TO_DATE()还有很多种日期格式, 可以参看ORACLE DOC.<br>年-月-日 小时:分钟:秒 的格式YYYY-MM-DD HH24:MI:SS</p>\n<p>INSERT时最大可操作的字符串长度小于等于4000个单字节, 如果要插入更长的字符串, 请考虑字段用CLOB类型,<br>方法借用ORACLE里自带的DBMS_LOB程序包.</p>\n<p>INSERT时如果要用到从1开始自动增长的序列号, 应该先建立一个序列号<br>CREATE SEQUENCE 序列号的名称 (最好是表名+序列号标记) INCREMENT BY 1  START  WITH  1<br>MAXVALUE  99999  CYCLE  NOCACHE;<br>其中最大的值按字段的长度来定, 如果定义的自动增长的序列号 NUMBER(6) , 最大值为999999<br>INSERT 语句插入这个字段值为: 序列号的名称.NEXTVAL</p>\n<p>2.DELETE  (删除数据表里记录的语句)</p>\n<p>DELETE FROM表名 WHERE 条件;</p>\n<p>注意：删除记录并不能释放ORACLE里被占用的数据块表空间. 它只把那些被删除的数据块标成unused.</p>\n<p>如果确实要删除一个大表里的全部记录, 可以用 TRUNCATE 命令, 它可以释放占用的数据块表空间<br>TRUNCATE TABLE 表名;<br>此操作不可回退.</p>\n<p>3.UPDATE  (修改数据表里记录的语句)</p>\n<p>UPDATE表名 SET 字段名1=值1, 字段名2=值2, …… WHERE 条件;</p>\n<p>如果修改的值N没有赋值或定义时, 将把原来的记录内容清为NULL, 最好在修改前进行非空校验;<br>值N超过定义的长度会出错, 最好在插入前进行长度校验..</p>\n<p>注意事项:<br>A.        以上SQL语句对表都加上了行级锁,<br>        确认完成后, 必须加上事物处理结束的命令 COMMIT 才能正式生效,<br>        否则改变不一定写入数据库里.<br>        如果想撤回这些操作, 可以用命令 ROLLBACK 复原.</p>\n<p>B.        在运行INSERT, DELETE 和 UPDATE 语句前最好估算一下可能操作的记录范围,<br>        应该把它限定在较小 (一万条记录) 范围内,. 否则ORACLE处理这个事物用到很大的回退段.<br>        程序响应慢甚至失去响应. 如果记录数上十万以上这些操作, 可以把这些SQL语句分段分次完成,<br>        其间加上COMMIT 确认事物处理.</p>\n<h4 id=\"二-数据定义-DDL-部分\"><a href=\"#二-数据定义-DDL-部分\" class=\"headerlink\" title=\"二.数据定义 (DDL) 部分\"></a>二.数据定义 (DDL) 部分</h4><p>1.CREATE (创建表, 索引, 视图, 同义词, 过程, 函数, 数据库链接等)</p>\n<p>ORACLE常用的字段类型有<br>CHAR                        固定长度的字符串<br>VARCHAR2                可变长度的字符串<br>NUMBER(M,N)                数字型M是位数总长度, N是小数的长度<br>DATE                        日期类型</p>\n<p>创建表时要把较小的不为空的字段放在前面, 可能为空的字段放在后面</p>\n<p>创建表时可以用中文的字段名, 但最好还是用英文的字段名</p>\n<p>创建表时可以给字段加上默认值, 例如 DEFAULT SYSDATE<br>这样每次插入和修改时, 不用程序操作这个字段都能得到动作的时间</p>\n<p>创建表时可以给字段加上约束条件<br>例如 不允许重复 UNIQUE, 关键字 PRIMARY KEY</p>\n<p>2.ALTER        (改变表, 索引, 视图等)</p>\n<p>改变表的名称<br>ALTER TABLE 表名1  TO 表名2;</p>\n<p>在表的后面增加一个字段<br>ALTER TABLE表名 ADD 字段名 字段名描述;</p>\n<p>修改表里字段的定义描述<br>ALTER TABLE表名 MODIFY字段名 字段名描述;</p>\n<p>给表里的字段加上约束条件<br>ALTER TABLE 表名 ADD CONSTRAINT 约束名 PRIMARY KEY (字段名);<br>ALTER TABLE 表名 ADD CONSTRAINT 约束名 UNIQUE (字段名);</p>\n<p>把表放在或取出数据库的内存区<br>ALTER TABLE 表名 CACHE;<br>ALTER TABLE 表名 NOCACHE;</p>\n<p>3.DROP        (删除表, 索引, 视图, 同义词, 过程, 函数, 数据库链接等)</p>\n<p>删除表和它所有的约束条件<br>DROP TABLE 表名 CASCADE CONSTRAINTS;</p>\n<p>4.TRUNCATE (清空表里的所有记录, 保留表的结构)</p>\n<p>TRUNCATE 表名;</p>\n<h4 id=\"三-查询语句-SELECT-部分\"><a href=\"#三-查询语句-SELECT-部分\" class=\"headerlink\" title=\"三.查询语句 (SELECT) 部分\"></a>三.查询语句 (SELECT) 部分</h4><p>SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE 条件;</p>\n<p>字段名可以带入函数<br>  例如:  COUNT(*), MIN(字段名),  MAX(字段名),  AVG(字段名), DISTINCT(字段名),<br>           TO_CHAR(DATE字段名,’YYYY-MM-DD HH24:MI:SS’)</p>\n<p>NVL(EXPR1, EXPR2)函数<br>解释:<br>IF EXPR1=NULL<br>                RETURN EXPR2<br>ELSE<br>                       RETURN EXPR1</p>\n<p>DECODE(AA﹐V1﹐R1﹐V2﹐R2….)函数<br>解释:<br>IF AA=V1 THEN RETURN R1<br>IF AA=V2 THEN RETURN R2<br>..…<br>ELSE<br>RETURN NULL</p>\n<p>LPAD(char1,n,char2)函数<br>解释:<br>字符char1按制定的位数n显示，不足的位数用char2字符串替换左边的空位</p>\n<p>字段名之间可以进行算术运算<br>例如:  (字段名1*字段名1)/3</p>\n<p>查询语句可以嵌套<br>例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT …… FROM</span><br><span class=\"line\">(SELECT …… FROM表名1, [表名2, ……] WHERE 条件) WHERE 条件2;</span><br></pre></td></tr></table></figure></p>\n<p>两个查询语句的结果可以做集合操作<br>例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">并集UNION(去掉重复记录), 并集UNION ALL(不去掉重复记录), 差集MINUS,  交集INTERSECT</span><br></pre></td></tr></table></figure></p>\n<p>分组查询<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] GROUP BY字段名1</span><br><span class=\"line\">[HAVING 条件] ;</span><br></pre></td></tr></table></figure></p>\n<p>两个以上表之间的连接查询<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE</span><br><span class=\"line\">                表名1.字段名 = 表名2. 字段名 [ AND ……] ;</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE</span><br><span class=\"line\">                表名1.字段名 = 表名2. 字段名(+) [ AND ……] ;</span><br><span class=\"line\">​```plsql</span><br><span class=\"line\">有(+)号的字段位置自动补空值</span><br><span class=\"line\"></span><br><span class=\"line\">查询结果集的排序操作, 默认的排序是升序ASC, 降序是DESC</span><br><span class=\"line\">​```plsql</span><br><span class=\"line\">SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……]</span><br><span class=\"line\">ORDER BY字段名1, 字段名2 DESC;</span><br></pre></td></tr></table></figure></p>\n<p>字符串模糊比较的方法</p>\n<p>INSTR(字段名, ‘字符串’)&gt;0<br>字段名 LIKE  ‘字符串%’  [‘%字符串%’]</p>\n<p>每个表都有一个隐含的字段ROWID, 它标记着记录的唯一性.</p>\n<h4 id=\"四-ORACLE里常用的数据对象-SCHEMA\"><a href=\"#四-ORACLE里常用的数据对象-SCHEMA\" class=\"headerlink\" title=\"四.ORACLE里常用的数据对象 (SCHEMA)\"></a>四.ORACLE里常用的数据对象 (SCHEMA)</h4><p>1.索引 (INDEX)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE INDEX 索引名ON 表名 ( 字段1, [字段2, ……] );</span><br><span class=\"line\">ALTER INDEX 索引名 REBUILD;</span><br></pre></td></tr></table></figure></p>\n<p>一个表的索引最好不要超过三个 (特殊的大表除外), 最好用单字段索引, 结合SQL语句的分析执行情况,<br>也可以建立多字段的组合索引和基于函数的索引</p>\n<p>ORACLE8.1.7字符串可以索引的最大长度为1578 单字节<br>ORACLE8.0.6字符串可以索引的最大长度为758 单字节</p>\n<p>2.视图 (VIEW)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE VIEW 视图名AS SELECT …. FROM …..;</span><br><span class=\"line\">ALTER VIEW视图名 COMPILE;</span><br></pre></td></tr></table></figure></p>\n<p>视图仅是一个SQL查询语句, 它可以把表之间复杂的关系简洁化.</p>\n<p>3.同义词 (SYNONMY)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE SYNONYM同义词名FOR 表名;</span><br><span class=\"line\">CREATE SYNONYM同义词名FOR 表名@数据库链接名;</span><br></pre></td></tr></table></figure></p>\n<p>4.数据库链接 (DATABASE LINK)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE LINK数据库链接名CONNECT TO 用户名 IDENTIFIED BY 密码 USING ‘数据库连接字符串’;</span><br></pre></td></tr></table></figure></p>\n<p>数据库连接字符串可以用NET8 EASY CONFIG或者直接修改TNSNAMES.ORA里定义.</p>\n<p>数据库参数global_name=true时要求数据库链接名称跟远端数据库名称一样</p>\n<p>数据库全局名称可以用以下命令查出<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">GLOBAL_NAME</span>;</span><br></pre></td></tr></table></figure></p>\n<p>查询远端数据库里的表<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> …… <span class=\"keyword\">FROM</span> 表名@数据库链接名;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"五-权限管理-DCL-语句\"><a href=\"#五-权限管理-DCL-语句\" class=\"headerlink\" title=\"五.权限管理 (DCL) 语句\"></a>五.权限管理 (DCL) 语句</h4><p>1.GRANT        赋于权限<br>常用的系统权限集合有以下三个:<br>CONNECT(基本的连接), RESOURCE(程序开发), DBA(数据库管理)<br>常用的数据对象权限有以下五个:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALL         ON 数据对象名,         <span class=\"keyword\">SELECT</span> <span class=\"keyword\">ON</span> 数据对象名,         <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">ON</span> 数据对象名,</span><br><span class=\"line\"><span class=\"keyword\">DELETE</span>         <span class=\"keyword\">ON</span> 数据对象名,  <span class=\"keyword\">INSERT</span> <span class=\"keyword\">ON</span> 数据对象名,   <span class=\"keyword\">ALTER</span>  <span class=\"keyword\">ON</span> 数据对象名</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT CONNECT, RESOURCE TO 用户名;</span><br><span class=\"line\">GRANT SELECT ON 表名 TO 用户名;</span><br><span class=\"line\">GRANT SELECT, INSERT, DELETE ON表名 TO 用户名1, 用户名2;</span><br></pre></td></tr></table></figure>\n<p>2.REVOKE 回收权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">CONNECT</span>, <span class=\"keyword\">RESOURCE</span> <span class=\"keyword\">FROM</span> 用户名;</span><br><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">SELECT</span> <span class=\"keyword\">ON</span> 表名 <span class=\"keyword\">FROM</span> 用户名;</span><br><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">SELECT</span>, <span class=\"keyword\">INSERT</span>, <span class=\"keyword\">DELETE</span> <span class=\"keyword\">ON</span>表名 <span class=\"keyword\">FROM</span> 用户名<span class=\"number\">1</span>, 用户名<span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n<p>查询数据库中第63号错误：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> orgaddr,destaddr <span class=\"keyword\">from</span> sm_histable0116 <span class=\"keyword\">where</span> error_code=<span class=\"string\">'63'</span>;</span><br></pre></td></tr></table></figure></p>\n<p>查询数据库中开户用户最大提交和最大下发数：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> MSISDN,TCOS,OCOS <span class=\"keyword\">from</span> ms_usertable；</span><br></pre></td></tr></table></figure></p>\n<p>查询数据库中各种错误代码的总和：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> error_code,<span class=\"keyword\">count</span>(*) <span class=\"keyword\">from</span> sm_histable0513 <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> error_code <span class=\"keyword\">order</span></span><br><span class=\"line\"><span class=\"keyword\">by</span> error_code;</span><br></pre></td></tr></table></figure></p>\n<p>查询报表数据库中话单统计种类查询。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sum</span>(Successcount) <span class=\"keyword\">from</span> tbl_MiddleMt0411 <span class=\"keyword\">where</span> ServiceType2=<span class=\"number\">111</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sum</span>(successcount),servicetype <span class=\"keyword\">from</span> tbl_middlemt0411 <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> servicetype</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"oracle常用命令\"><a href=\"#oracle常用命令\" class=\"headerlink\" title=\"oracle常用命令\"></a>oracle常用命令</h2><p>oracle 常用命令，适合初学者……<br>查日期：select * from crd_cardmain where to_char(mindate,’YYYY-MM-DD’)=’20080826’</p>\n<h3 id=\"一、ORACLE的启动和关闭\"><a href=\"#一、ORACLE的启动和关闭\" class=\"headerlink\" title=\"一、ORACLE的启动和关闭\"></a>一、ORACLE的启动和关闭</h3><ul>\n<li><h4 id=\"在单机环境下\"><a href=\"#在单机环境下\" class=\"headerlink\" title=\"在单机环境下\"></a>在单机环境下</h4></li>\n</ul>\n<p>要想启动或关闭ORACLE系统必须首先切换到ORACLE用户，如下<br>su - oracle</p>\n<ul>\n<li><p>启动ORACLE系统</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">oracle&gt;svrmgrl</span><br><span class=\"line\">SVRMGR&gt;connect internal</span><br><span class=\"line\">SVRMGR&gt;startup</span><br><span class=\"line\">SVRMGR&gt;quit</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭ORACLE系统</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">oracle&gt;svrmgrl</span><br><span class=\"line\">SVRMGR&gt;connect internal</span><br><span class=\"line\">SVRMGR&gt;shutdown</span><br><span class=\"line\">SVRMGR&gt;quit</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动oracle9i数据库命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sqlplus /nolog</span><br><span class=\"line\">SQL*Plus: Release 9.2.0.1.0 - Production on Fri Oct 31 13:53:53 2003</span><br><span class=\"line\">Copyright (c) 1982, 2002, Oracle Corporation.  All rights reserved.</span><br><span class=\"line\">SQL&gt; connect / as sysdba  </span><br><span class=\"line\">Connected to an idle instance.</span><br><span class=\"line\">SQL&gt; startup^C</span><br><span class=\"line\">SQL&gt; startup</span><br><span class=\"line\">ORACLE instance started.</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"在双机环境下\"><a href=\"#在双机环境下\" class=\"headerlink\" title=\"在双机环境下\"></a>在双机环境下</h4></li>\n</ul>\n<p>要想启动或关闭ORACLE系统必须首先切换到root用户，如下<br>su － root</p>\n<ul>\n<li><p>启动ORACLE系统</p>\n<p>hareg －y oracle</p>\n</li>\n<li><p>关闭ORACLE系统<br>hareg －n oracle</p>\n</li>\n</ul>\n<p>Oracle数据库有哪几种启动方式</p>\n<p>说明：</p>\n<p>有以下几种启动方式：</p>\n<ol>\n<li><p>startup nomount<br>非安装启动，这种方式启动下可执行：重建控制文件、重建数据库</p>\n<p>读取init.ora文件，启动instance，即启动SGA和后台进程，这种启动只需要init.ora文件。</p>\n</li>\n<li><p>startup mount dbname<br>安装启动，这种方式启动下可执行：<br>数据库日志归档、<br>数据库介质恢复、<br>使数据文件联机或脱机，<br>重新定位数据文件、重做日志文件。</p>\n<p>执行“nomount”，然后打开控制文件，确认数据文件和联机日志文件的位置，<br>但此时不对数据文件和日志文件进行校验检查。</p>\n</li>\n<li><p>startup open dbname<br>先执行“nomount”，然后执行“mount”，再打开包括Redo log文件在内的所有数据库文件，<br>这种方式下可访问数据库中的数据。</p>\n</li>\n<li><p>startup，等于以下三个命令<br>startup nomount<br>alter database mount<br>alter database open</p>\n</li>\n<li><p>startup restrict<br>约束方式启动<br>这种方式能够启动数据库，但只允许具有一定特权的用户访问<br>非特权用户访问时，会出现以下提示：<br>ERROR：<br>ORA-01035: ORACLE 只允许具有 RESTRICTED SESSION 权限的用户使用</p>\n</li>\n<li><p>startup force<br>强制启动方式<br>当不能关闭数据库时，可以用startup force来完成数据库的关闭<br>先关闭数据库，再执行正常启动数据库命令</p>\n</li>\n<li><p>startup pfile=参数文件名<br>带初始化参数文件的启动方式<br>先读取参数文件，再按参数文件中的设置启动数据库<br>例：startup pfile=E:Oracleadminoradbpfileinit.ora</p>\n</li>\n<li><p>startup EXCLUSIVE</p>\n</li>\n</ol>\n<h3 id=\"二、用户如何有效地利用数据字典\"><a href=\"#二、用户如何有效地利用数据字典\" class=\"headerlink\" title=\"二、用户如何有效地利用数据字典\"></a>二、用户如何有效地利用数据字典</h3><pre><code> 　ORACLE的数据字典是数据库的重要组成部分之一，它随着数据库的产生而产生, 随着数据库的变化而变化,\n</code></pre><p>   体现为sys用户下的一些表和视图。数据字典名称是大写的英文字符。</p>\n<pre><code>数据字典里存有用户信息、用户的权限信息、所有数据对象信息、表的约束条件、统计分析数据库的视图等。\n</code></pre><p>我们不能手工修改数据字典里的信息。</p>\n<p>　　很多时候，一般的ORACLE用户不知道如何有效地利用它。</p>\n<p>　　dictionary　　　全部数据字典表的名称和解释，它有一个同义词dict<br>    dict_column　　 全部数据字典表里字段名称和解释</p>\n<pre><code>如果我们想查询跟索引有关的数据字典时，可以用下面这条SQL语句:\n\nSQL&gt;select * from dictionary where instr(comments,&apos;index&apos;)&gt;0;\n\n如果我们想知道user_indexes表各字段名称的详细含义，可以用下面这条SQL语句:\n\nSQL&gt;select column_name,comments from dict_columns where table_name=&apos;USER_INDEXES&apos;;\n\n依此类推，就可以轻松知道数据字典的详细名称和解释，不用查看ORACLE的其它文档资料了。\n\n下面按类别列出一些ORACLE用户常用数据字典的查询使用方法。\n\n1、用户\n\n        查看当前用户的缺省表空间\n        SQL&gt;select username,default_tablespace from user_users;\n\n    查看当前用户的角色\n    SQL&gt;select * from user_role_privs;\n\n    查看当前用户的系统权限和表级权限\n    SQL&gt;select * from user_sys_privs;\n    SQL&gt;select * from user_tab_privs;\n\n2、表\n\n        查看用户下所有的表\n        SQL&gt;select * from user_tables;\n\n        查看名称包含log字符的表\n        SQL&gt;select object_name,object_id from user_objects\n            where instr(object_name,&apos;LOG&apos;)&gt;0;\n\n        查看某表的创建时间\n        SQL&gt;select object_name,created from user_objects where object_name=upper(&apos;&amp;table_name&apos;);\n\n        查看某表的大小\n        SQL&gt;select sum(bytes)/(1024*1024) as &quot;size(M)&quot; from user_segments\n            where segment_name=upper(&apos;&amp;table_name&apos;);\n\n        查看放在ORACLE的内存区里的表\n        SQL&gt;select table_name,cache from user_tables where instr(cache,&apos;Y&apos;)&gt;0;\n\n3、索引\n\n        查看索引个数和类别\n        SQL&gt;select index_name,index_type,table_name from user_indexes order by table_name;\n\n        查看索引被索引的字段\n        SQL&gt;select * from user_ind_columns where index_name=upper(&apos;&amp;index_name&apos;);\n\n        查看索引的大小\n        SQL&gt;select sum(bytes)/(1024*1024) as &quot;size(M)&quot; from user_segments\n            where segment_name=upper(&apos;&amp;index_name&apos;);\n\n4、序列号\n\n        查看序列号，last_number是当前值\n        SQL&gt;select * from user_sequences;\n\n5、视图\n\n        查看视图的名称\n        SQL&gt;select view_name from user_views;\n\n        查看创建视图的select语句\n        SQL&gt;set view_name,text_length from user_views;\n        SQL&gt;set long 2000;                说明：可以根据视图的text_length值设定set long 的大小\n        SQL&gt;select text from user_views where view_name=upper(&apos;&amp;view_name&apos;);\n\n6、同义词\n\n        查看同义词的名称\n        SQL&gt;select * from user_synonyms;\n\n7、约束条件\n\n        查看某表的约束条件\n        SQL&gt;select constraint_name, constraint_type,search_condition, r_constraint_name\n            from user_constraints where table_name = upper(&apos;&amp;table_name&apos;);\n\n    SQL&gt;select c.constraint_name,c.constraint_type,cc.column_name\n        from user_constraints c,user_cons_columns cc\n        where c.owner = upper(&apos;&amp;table_owner&apos;) and c.table_name = upper(&apos;&amp;table_name&apos;)\n        and c.owner = cc.owner and c.constraint_name = cc.constraint_name\n        order by cc.position;\n\n8、存储函数和过程\n\n        查看函数和过程的状态\n        SQL&gt;select object_name,status from user_objects where object_type=&apos;FUNCTION&apos;;\n        SQL&gt;select object_name,status from user_objects where object_type=&apos;PROCEDURE&apos;;\n\n        查看函数和过程的源代码\n        SQL&gt;select text from all_source where owner=user and name=upper(&apos;&amp;plsql_name&apos;);\n</code></pre><h3 id=\"三、查看数据库的SQL\"><a href=\"#三、查看数据库的SQL\" class=\"headerlink\" title=\"三、查看数据库的SQL\"></a>三、查看数据库的SQL</h3><h4 id=\"1、查看表空间的名称及大小\"><a href=\"#1、查看表空间的名称及大小\" class=\"headerlink\" title=\"1、查看表空间的名称及大小\"></a>1、查看表空间的名称及大小</h4><pre><code>select t.tablespace_name, round(sum(bytes/(1024*1024)),0) ts_size\nfrom dba_tablespaces t, dba_data_files d\nwhere t.tablespace_name = d.tablespace_name\ngroup by t.tablespace_name;\n</code></pre><h4 id=\"2、查看表空间物理文件的名称及大小\"><a href=\"#2、查看表空间物理文件的名称及大小\" class=\"headerlink\" title=\"2、查看表空间物理文件的名称及大小\"></a>2、查看表空间物理文件的名称及大小</h4><pre><code>select tablespace_name, file_id, file_name,\nround(bytes/(1024*1024),0) total_space\nfrom dba_data_files\norder by tablespace_name;\n</code></pre><h4 id=\"3、查看回滚段名称及大小\"><a href=\"#3、查看回滚段名称及大小\" class=\"headerlink\" title=\"3、查看回滚段名称及大小\"></a>3、查看回滚段名称及大小</h4><pre><code>select segment_name, tablespace_name, r.status,\n(initial_extent/1024) InitialExtent,(next_extent/1024) NextExtent,\nmax_extents, v.curext CurExtent\nFrom dba_rollback_segs r, v$rollstat v\nWhere r.segment_id = v.usn(+)\norder by segment_name ;\n</code></pre><h4 id=\"4、查看控制文件\"><a href=\"#4、查看控制文件\" class=\"headerlink\" title=\"4、查看控制文件\"></a>4、查看控制文件</h4><pre><code>select name from v$controlfile;\n</code></pre><h4 id=\"5、查看日志文件\"><a href=\"#5、查看日志文件\" class=\"headerlink\" title=\"5、查看日志文件\"></a>5、查看日志文件</h4><pre><code>select member from v$logfile;\n</code></pre><h4 id=\"6、查看表空间的使用情况\"><a href=\"#6、查看表空间的使用情况\" class=\"headerlink\" title=\"6、查看表空间的使用情况\"></a>6、查看表空间的使用情况</h4><pre><code>select sum(bytes)/(1024*1024) as free_space,tablespace_name\nfrom dba_free_space\ngroup by tablespace_name;\n\nSELECT A.TABLESPACE_NAME,A.BYTES TOTAL,B.BYTES USED, C.BYTES FREE,\n(B.BYTES*100)/A.BYTES &quot;% USED&quot;,(C.BYTES*100)/A.BYTES &quot;% FREE&quot;\nFROM SYS.SM$TS_AVAIL A,SYS.SM$TS_USED B,SYS.SM$TS_FREE C\nWHERE A.TABLESPACE_NAME=B.TABLESPACE_NAME AND A.TABLESPACE_NAME=C.TABLESPACE_NAME;\n</code></pre><h4 id=\"7、查看数据库库对象\"><a href=\"#7、查看数据库库对象\" class=\"headerlink\" title=\"7、查看数据库库对象\"></a>7、查看数据库库对象</h4><pre><code>select owner, object_type, status, count(*) count# from all_objects group by owner, object_type, status;\n</code></pre><h4 id=\"8、查看数据库的版本\"><a href=\"#8、查看数据库的版本\" class=\"headerlink\" title=\"8、查看数据库的版本\"></a>8、查看数据库的版本</h4><pre><code>Select version FROM Product_component_version\nWhere SUBSTR(PRODUCT,1,6)=&apos;Oracle&apos;;\n</code></pre><h4 id=\"9、查看数据库的创建日期和归档方式\"><a href=\"#9、查看数据库的创建日期和归档方式\" class=\"headerlink\" title=\"9、查看数据库的创建日期和归档方式\"></a>9、查看数据库的创建日期和归档方式</h4><pre><code>Select Created, Log_Mode, Log_Mode From V$Database;\n</code></pre><h3 id=\"四、ORACLE用户连接的管理\"><a href=\"#四、ORACLE用户连接的管理\" class=\"headerlink\" title=\"四、ORACLE用户连接的管理\"></a>四、ORACLE用户连接的管理</h3><p>用系统管理员，查看当前数据库有几个用户连接：</p>\n<p>SQL&gt; select username,sid,serial# from v$session;</p>\n<p>如果要停某个连接用</p>\n<p>SQL&gt; alter system kill session ‘sid,serial#’;</p>\n<p>如果这命令不行,找它UNIX的进程数</p>\n<p>SQL&gt; select pro.spid from v$session ses,v$process pro where ses.sid=21 and ses.paddr=pro.addr;</p>\n<p>说明：21是某个连接的sid数</p>\n<p>然后用 kill 命令杀此进程号。</p>\n<h3 id=\"五、SQL-PLUS使用\"><a href=\"#五、SQL-PLUS使用\" class=\"headerlink\" title=\"五、SQL*PLUS使用\"></a>五、SQL*PLUS使用</h3><p>a、进入SQL*Plus<br>$sqlplus 用户名/密码</p>\n<p>   退出SQL*Plus<br>SQL&gt;exit</p>\n<p>b、在sqlplus下得到帮助信息<br>列出全部SQL命令和SQL*Plus命令<br>SQL&gt;help<br>列出某个特定的命令的信息<br>SQL&gt;help 命令名</p>\n<p>c、显示表结构命令DESCRIBE<br>SQL&gt;DESC 表名</p>\n<p>d、SQL*Plus中的编辑命令<br>显示SQL缓冲区命令<br>SQL&gt;L</p>\n<p>修改SQL命令<br>首先要将待改正行变为当前行<br>SQL&gt;n<br>用CHANGE命令修改内容<br>SQL&gt;c/旧/新<br>重新确认是否已正确<br>SQL&gt;L</p>\n<p>使用INPUT命令可以在SQL缓冲区中增加一行或多行<br>SQL&gt;i<br>SQL&gt;输入内容</p>\n<p>e、调用外部系统编辑器<br>SQL&gt;edit 文件名<br>可以使用DEFINE命令设置系统变量EDITOR来改变文本编辑器的类型，在login.sql文件中定义如下一行<br>DEFINE_EDITOR=vi</p>\n<p>f、运行命令文件<br>SQL&gt;START test<br>SQL&gt;@test</p>\n<p>常用SQL*Plus语句<br>a、表的创建、修改、删除<br>创建表的命令格式如下：<br>create table 表名 （列说明列表）；</p>\n<p>为基表增加新列命令如下：<br>ALTER TABLE 表名 ADD （列说明列表）<br>例：为test表增加一列Age，用来存放年龄<br>    sql&gt;alter table test<br>        add （Age number(3)）；</p>\n<p>修改基表列定义命令如下：<br>ALTER TABLE 表名<br>MODIFY （列名 数据类型）<br>例：将test表中的Count列宽度加长为10个字符<br>    sql&gt;alter atble test<br>        modify （County char(10)）；</p>\n<p>b、将一张表删除语句的格式如下：<br>DORP TABLE 表名；<br>例：表删除将同时删除表的数据和表的定义<br>sql&gt;drop table test</p>\n<p>c、表空间的创建、删除</p>\n<h3 id=\"六、ORACLE逻辑备份的SH文件\"><a href=\"#六、ORACLE逻辑备份的SH文件\" class=\"headerlink\" title=\"六、ORACLE逻辑备份的SH文件\"></a>六、ORACLE逻辑备份的SH文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">完全备份的SH文件：exp_comp.sh</span><br><span class=\"line\"></span><br><span class=\"line\">rq=date +<span class=\"string\">\"%m%d\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">su - oracle -c <span class=\"string\">\"exp system/manager full=y inctype=complete file=/oracle/export/db_comp<span class=\"variable\">$rq</span>.dmp\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">累计备份的SH文件：exp_cumu.sh</span><br><span class=\"line\"></span><br><span class=\"line\">rq=date +<span class=\"string\">\"%m%d\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">su - oracle -c <span class=\"string\">\"exp system/manager full=y inctype=cumulative file=/oracle/export/db_cumu<span class=\"variable\">$rq</span>.dmp\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">增量备份的SH文件: exp_incr.sh</span><br><span class=\"line\"></span><br><span class=\"line\">rq=date +<span class=\"string\">\"%m%d\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">su - oracle -c <span class=\"string\">\"exp system/manager full=y inctype=incremental file=/oracle/export/db_incr<span class=\"variable\">$rq</span>.dmp\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">root用户crontab文件</span><br><span class=\"line\">/var/spool/cron/crontabs/root增加以下内容</span><br><span class=\"line\">0 2 1 * * /oracle/exp_comp.sh</span><br><span class=\"line\">30 2 * * 0-5 /oracle/exp_incr.sh</span><br><span class=\"line\">45 2 * * 6 /oracle/exp_cumu.sh</span><br></pre></td></tr></table></figure>\n<p>当然这个时间表可以根据不同的需求来改变的，这只是一个例子。</p>\n<h3 id=\"七、ORACLE-常用的SQL语法和数据对象\"><a href=\"#七、ORACLE-常用的SQL语法和数据对象\" class=\"headerlink\" title=\"七、ORACLE 常用的SQL语法和数据对象\"></a>七、ORACLE 常用的SQL语法和数据对象</h3><h4 id=\"一-数据控制语句-DML-部分\"><a href=\"#一-数据控制语句-DML-部分\" class=\"headerlink\" title=\"一.数据控制语句 (DML) 部分\"></a>一.数据控制语句 (DML) 部分</h4><p>1.INSERT  (往数据表里插入记录的语句)</p>\n<p>INSERT INTO 表名(字段名1, 字段名2, ……) VALUES ( 值1, 值2, ……);<br>INSERT INTO 表名(字段名1, 字段名2, ……)  SELECT (字段名1, 字段名2, ……) FROM 另外的表名;</p>\n<p>字符串类型的字段值必须用单引号括起来, 例如: ’GOOD DAY’<br>如果字段值里包含单引号’ 需要进行字符串转换, 我们把它替换成两个单引号’’.<br>字符串类型的字段值超过定义的长度会出错, 最好在插入前进行长度校验.</p>\n<p>日期字段的字段值可以用当前数据库的系统时间SYSDATE, 精确到秒<br>或者用字符串转换成日期型函数TO_DATE(‘2001-08-01’,’YYYY-MM-DD’)<br>TO_DATE()还有很多种日期格式, 可以参看ORACLE DOC.<br>年-月-日 小时:分钟:秒 的格式YYYY-MM-DD HH24:MI:SS</p>\n<p>INSERT时最大可操作的字符串长度小于等于4000个单字节, 如果要插入更长的字符串, 请考虑字段用CLOB类型,<br>方法借用ORACLE里自带的DBMS_LOB程序包.</p>\n<p>INSERT时如果要用到从1开始自动增长的序列号, 应该先建立一个序列号<br>CREATE SEQUENCE 序列号的名称 (最好是表名+序列号标记) INCREMENT BY 1  START  WITH  1<br>MAXVALUE  99999  CYCLE  NOCACHE;<br>其中最大的值按字段的长度来定, 如果定义的自动增长的序列号 NUMBER(6) , 最大值为999999<br>INSERT 语句插入这个字段值为: 序列号的名称.NEXTVAL</p>\n<p>2.DELETE  (删除数据表里记录的语句)</p>\n<p>DELETE FROM表名 WHERE 条件;</p>\n<p>注意：删除记录并不能释放ORACLE里被占用的数据块表空间. 它只把那些被删除的数据块标成unused.</p>\n<p>如果确实要删除一个大表里的全部记录, 可以用 TRUNCATE 命令, 它可以释放占用的数据块表空间<br>TRUNCATE TABLE 表名;<br>此操作不可回退.</p>\n<p>3.UPDATE  (修改数据表里记录的语句)</p>\n<p>UPDATE表名 SET 字段名1=值1, 字段名2=值2, …… WHERE 条件;</p>\n<p>如果修改的值N没有赋值或定义时, 将把原来的记录内容清为NULL, 最好在修改前进行非空校验;<br>值N超过定义的长度会出错, 最好在插入前进行长度校验..</p>\n<p>注意事项:<br>A.        以上SQL语句对表都加上了行级锁,<br>        确认完成后, 必须加上事物处理结束的命令 COMMIT 才能正式生效,<br>        否则改变不一定写入数据库里.<br>        如果想撤回这些操作, 可以用命令 ROLLBACK 复原.</p>\n<p>B.        在运行INSERT, DELETE 和 UPDATE 语句前最好估算一下可能操作的记录范围,<br>        应该把它限定在较小 (一万条记录) 范围内,. 否则ORACLE处理这个事物用到很大的回退段.<br>        程序响应慢甚至失去响应. 如果记录数上十万以上这些操作, 可以把这些SQL语句分段分次完成,<br>        其间加上COMMIT 确认事物处理.</p>\n<h4 id=\"二-数据定义-DDL-部分\"><a href=\"#二-数据定义-DDL-部分\" class=\"headerlink\" title=\"二.数据定义 (DDL) 部分\"></a>二.数据定义 (DDL) 部分</h4><p>1.CREATE (创建表, 索引, 视图, 同义词, 过程, 函数, 数据库链接等)</p>\n<p>ORACLE常用的字段类型有<br>CHAR                        固定长度的字符串<br>VARCHAR2                可变长度的字符串<br>NUMBER(M,N)                数字型M是位数总长度, N是小数的长度<br>DATE                        日期类型</p>\n<p>创建表时要把较小的不为空的字段放在前面, 可能为空的字段放在后面</p>\n<p>创建表时可以用中文的字段名, 但最好还是用英文的字段名</p>\n<p>创建表时可以给字段加上默认值, 例如 DEFAULT SYSDATE<br>这样每次插入和修改时, 不用程序操作这个字段都能得到动作的时间</p>\n<p>创建表时可以给字段加上约束条件<br>例如 不允许重复 UNIQUE, 关键字 PRIMARY KEY</p>\n<p>2.ALTER        (改变表, 索引, 视图等)</p>\n<p>改变表的名称<br>ALTER TABLE 表名1  TO 表名2;</p>\n<p>在表的后面增加一个字段<br>ALTER TABLE表名 ADD 字段名 字段名描述;</p>\n<p>修改表里字段的定义描述<br>ALTER TABLE表名 MODIFY字段名 字段名描述;</p>\n<p>给表里的字段加上约束条件<br>ALTER TABLE 表名 ADD CONSTRAINT 约束名 PRIMARY KEY (字段名);<br>ALTER TABLE 表名 ADD CONSTRAINT 约束名 UNIQUE (字段名);</p>\n<p>把表放在或取出数据库的内存区<br>ALTER TABLE 表名 CACHE;<br>ALTER TABLE 表名 NOCACHE;</p>\n<p>3.DROP        (删除表, 索引, 视图, 同义词, 过程, 函数, 数据库链接等)</p>\n<p>删除表和它所有的约束条件<br>DROP TABLE 表名 CASCADE CONSTRAINTS;</p>\n<p>4.TRUNCATE (清空表里的所有记录, 保留表的结构)</p>\n<p>TRUNCATE 表名;</p>\n<h4 id=\"三-查询语句-SELECT-部分\"><a href=\"#三-查询语句-SELECT-部分\" class=\"headerlink\" title=\"三.查询语句 (SELECT) 部分\"></a>三.查询语句 (SELECT) 部分</h4><p>SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE 条件;</p>\n<p>字段名可以带入函数<br>  例如:  COUNT(*), MIN(字段名),  MAX(字段名),  AVG(字段名), DISTINCT(字段名),<br>           TO_CHAR(DATE字段名,’YYYY-MM-DD HH24:MI:SS’)</p>\n<p>NVL(EXPR1, EXPR2)函数<br>解释:<br>IF EXPR1=NULL<br>                RETURN EXPR2<br>ELSE<br>                       RETURN EXPR1</p>\n<p>DECODE(AA﹐V1﹐R1﹐V2﹐R2….)函数<br>解释:<br>IF AA=V1 THEN RETURN R1<br>IF AA=V2 THEN RETURN R2<br>..…<br>ELSE<br>RETURN NULL</p>\n<p>LPAD(char1,n,char2)函数<br>解释:<br>字符char1按制定的位数n显示，不足的位数用char2字符串替换左边的空位</p>\n<p>字段名之间可以进行算术运算<br>例如:  (字段名1*字段名1)/3</p>\n<p>查询语句可以嵌套<br>例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT …… FROM</span><br><span class=\"line\">(SELECT …… FROM表名1, [表名2, ……] WHERE 条件) WHERE 条件2;</span><br></pre></td></tr></table></figure></p>\n<p>两个查询语句的结果可以做集合操作<br>例如:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">并集UNION(去掉重复记录), 并集UNION ALL(不去掉重复记录), 差集MINUS,  交集INTERSECT</span><br></pre></td></tr></table></figure></p>\n<p>分组查询<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] GROUP BY字段名1</span><br><span class=\"line\">[HAVING 条件] ;</span><br></pre></td></tr></table></figure></p>\n<p>两个以上表之间的连接查询<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE</span><br><span class=\"line\">                表名1.字段名 = 表名2. 字段名 [ AND ……] ;</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……] WHERE</span><br><span class=\"line\">                表名1.字段名 = 表名2. 字段名(+) [ AND ……] ;</span><br><span class=\"line\">​```plsql</span><br><span class=\"line\">有(+)号的字段位置自动补空值</span><br><span class=\"line\"></span><br><span class=\"line\">查询结果集的排序操作, 默认的排序是升序ASC, 降序是DESC</span><br><span class=\"line\">​```plsql</span><br><span class=\"line\">SELECT字段名1, 字段名2, …… FROM 表名1, [表名2, ……]</span><br><span class=\"line\">ORDER BY字段名1, 字段名2 DESC;</span><br></pre></td></tr></table></figure></p>\n<p>字符串模糊比较的方法</p>\n<p>INSTR(字段名, ‘字符串’)&gt;0<br>字段名 LIKE  ‘字符串%’  [‘%字符串%’]</p>\n<p>每个表都有一个隐含的字段ROWID, 它标记着记录的唯一性.</p>\n<h4 id=\"四-ORACLE里常用的数据对象-SCHEMA\"><a href=\"#四-ORACLE里常用的数据对象-SCHEMA\" class=\"headerlink\" title=\"四.ORACLE里常用的数据对象 (SCHEMA)\"></a>四.ORACLE里常用的数据对象 (SCHEMA)</h4><p>1.索引 (INDEX)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE INDEX 索引名ON 表名 ( 字段1, [字段2, ……] );</span><br><span class=\"line\">ALTER INDEX 索引名 REBUILD;</span><br></pre></td></tr></table></figure></p>\n<p>一个表的索引最好不要超过三个 (特殊的大表除外), 最好用单字段索引, 结合SQL语句的分析执行情况,<br>也可以建立多字段的组合索引和基于函数的索引</p>\n<p>ORACLE8.1.7字符串可以索引的最大长度为1578 单字节<br>ORACLE8.0.6字符串可以索引的最大长度为758 单字节</p>\n<p>2.视图 (VIEW)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE VIEW 视图名AS SELECT …. FROM …..;</span><br><span class=\"line\">ALTER VIEW视图名 COMPILE;</span><br></pre></td></tr></table></figure></p>\n<p>视图仅是一个SQL查询语句, 它可以把表之间复杂的关系简洁化.</p>\n<p>3.同义词 (SYNONMY)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE SYNONYM同义词名FOR 表名;</span><br><span class=\"line\">CREATE SYNONYM同义词名FOR 表名@数据库链接名;</span><br></pre></td></tr></table></figure></p>\n<p>4.数据库链接 (DATABASE LINK)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE LINK数据库链接名CONNECT TO 用户名 IDENTIFIED BY 密码 USING ‘数据库连接字符串’;</span><br></pre></td></tr></table></figure></p>\n<p>数据库连接字符串可以用NET8 EASY CONFIG或者直接修改TNSNAMES.ORA里定义.</p>\n<p>数据库参数global_name=true时要求数据库链接名称跟远端数据库名称一样</p>\n<p>数据库全局名称可以用以下命令查出<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">GLOBAL_NAME</span>;</span><br></pre></td></tr></table></figure></p>\n<p>查询远端数据库里的表<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> …… <span class=\"keyword\">FROM</span> 表名@数据库链接名;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"五-权限管理-DCL-语句\"><a href=\"#五-权限管理-DCL-语句\" class=\"headerlink\" title=\"五.权限管理 (DCL) 语句\"></a>五.权限管理 (DCL) 语句</h4><p>1.GRANT        赋于权限<br>常用的系统权限集合有以下三个:<br>CONNECT(基本的连接), RESOURCE(程序开发), DBA(数据库管理)<br>常用的数据对象权限有以下五个:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALL         ON 数据对象名,         <span class=\"keyword\">SELECT</span> <span class=\"keyword\">ON</span> 数据对象名,         <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">ON</span> 数据对象名,</span><br><span class=\"line\"><span class=\"keyword\">DELETE</span>         <span class=\"keyword\">ON</span> 数据对象名,  <span class=\"keyword\">INSERT</span> <span class=\"keyword\">ON</span> 数据对象名,   <span class=\"keyword\">ALTER</span>  <span class=\"keyword\">ON</span> 数据对象名</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT CONNECT, RESOURCE TO 用户名;</span><br><span class=\"line\">GRANT SELECT ON 表名 TO 用户名;</span><br><span class=\"line\">GRANT SELECT, INSERT, DELETE ON表名 TO 用户名1, 用户名2;</span><br></pre></td></tr></table></figure>\n<p>2.REVOKE 回收权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">CONNECT</span>, <span class=\"keyword\">RESOURCE</span> <span class=\"keyword\">FROM</span> 用户名;</span><br><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">SELECT</span> <span class=\"keyword\">ON</span> 表名 <span class=\"keyword\">FROM</span> 用户名;</span><br><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">SELECT</span>, <span class=\"keyword\">INSERT</span>, <span class=\"keyword\">DELETE</span> <span class=\"keyword\">ON</span>表名 <span class=\"keyword\">FROM</span> 用户名<span class=\"number\">1</span>, 用户名<span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n<p>查询数据库中第63号错误：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> orgaddr,destaddr <span class=\"keyword\">from</span> sm_histable0116 <span class=\"keyword\">where</span> error_code=<span class=\"string\">'63'</span>;</span><br></pre></td></tr></table></figure></p>\n<p>查询数据库中开户用户最大提交和最大下发数：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> MSISDN,TCOS,OCOS <span class=\"keyword\">from</span> ms_usertable；</span><br></pre></td></tr></table></figure></p>\n<p>查询数据库中各种错误代码的总和：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> error_code,<span class=\"keyword\">count</span>(*) <span class=\"keyword\">from</span> sm_histable0513 <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> error_code <span class=\"keyword\">order</span></span><br><span class=\"line\"><span class=\"keyword\">by</span> error_code;</span><br></pre></td></tr></table></figure></p>\n<p>查询报表数据库中话单统计种类查询。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sum</span>(Successcount) <span class=\"keyword\">from</span> tbl_MiddleMt0411 <span class=\"keyword\">where</span> ServiceType2=<span class=\"number\">111</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sum</span>(successcount),servicetype <span class=\"keyword\">from</span> tbl_middlemt0411 <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> servicetype</span><br></pre></td></tr></table></figure>\n"},{"title":"Winddows bat 基础","date":"2018-08-20T03:13:56.000Z","_content":"\n### bat语法\n\n```cmd\ncd  ./RptFile/%Today%\ndir /B /A-D .\\end.ok 2>nul | find /V /C \"\">D:/TT/count.txt\nset /P c=<D:/TT/count.txt\necho END.OK   %c%个\n```\n\n```cmd\n::此脚本用来统计目录下文件与文件夹个数 与wind属性相似。\n::把D:\\putty替换成统计目录\n\n@echo off&title limq @ BAT-GO  At:2010-09-19 12:23:59\nset Today=%Date:~0,4%%Date:~5,2%%Date:~8,2%\necho 今天是%Today%下面开始统计文件\necho 统计中~~~\nfor /f \"delims=\" %%a in ('dir /s/b/a-d D:\\putty ') do set/a a+=1\nfor /f \"delims=\" %%a in ('dir /s/b/ad  D:\\putty ') do set/a b+=1\nset /p=【D:\\putty 】文件夹内有 %b% 个文件夹， %a% 个文件，<nul&pause\n```\n例子1：\n`for /r %%i in (  ) do echo %%i`\n解释：\n如果在括号里的是一些无特殊意义的字符如\".\"  \"abc\"之类的， 那输出的%%i\n的值为遍历到的文件夹的绝对地址（地址带有\\号）后加上这些特殊字符。\n\n如果括号里的是含有通配符（* ？）的，那么不是像上边那样直接加在文件夹地址后了。含有通配符的字符串会被扩展成实际存在的文件名。\n比如 `for /r %%i in (1.t*t) do echo %%i` 这个代码将显示所有符合要求（比如 1.txt 1.tt 1.tst）的文件的绝对路径。\n\n\n\n例子2：\n`for /d /r %%i in ( ) do echo %%i`\n解释：\n第一种情况和上面相似，直接把字符加在路径后面。\n\n如果含有通配符的，那么它将显示所有的文件夹名符合通配规则的文件夹的绝对路径，同时去掉\\号。\n\nps：\n\n例子1的代码会把当前目录和子目录显示出来，而例子2只显示当前目录的子目录。\n例子1显示的结果可以看成是文件，而例子2显示的结果则应该看成是文件夹，因为有/d 的存在。\n如果输出的%%i格式达不到要求，还可以用%%~fi 之类的修正。","source":"_posts/batjichu.md","raw":"---\ntitle: Winddows bat 基础\ndate: 2018-08-20 11:13:56\ntags: [bat, Windows]\ncategories: \n- Program \n- bat\n---\n\n### bat语法\n\n```cmd\ncd  ./RptFile/%Today%\ndir /B /A-D .\\end.ok 2>nul | find /V /C \"\">D:/TT/count.txt\nset /P c=<D:/TT/count.txt\necho END.OK   %c%个\n```\n\n```cmd\n::此脚本用来统计目录下文件与文件夹个数 与wind属性相似。\n::把D:\\putty替换成统计目录\n\n@echo off&title limq @ BAT-GO  At:2010-09-19 12:23:59\nset Today=%Date:~0,4%%Date:~5,2%%Date:~8,2%\necho 今天是%Today%下面开始统计文件\necho 统计中~~~\nfor /f \"delims=\" %%a in ('dir /s/b/a-d D:\\putty ') do set/a a+=1\nfor /f \"delims=\" %%a in ('dir /s/b/ad  D:\\putty ') do set/a b+=1\nset /p=【D:\\putty 】文件夹内有 %b% 个文件夹， %a% 个文件，<nul&pause\n```\n例子1：\n`for /r %%i in (  ) do echo %%i`\n解释：\n如果在括号里的是一些无特殊意义的字符如\".\"  \"abc\"之类的， 那输出的%%i\n的值为遍历到的文件夹的绝对地址（地址带有\\号）后加上这些特殊字符。\n\n如果括号里的是含有通配符（* ？）的，那么不是像上边那样直接加在文件夹地址后了。含有通配符的字符串会被扩展成实际存在的文件名。\n比如 `for /r %%i in (1.t*t) do echo %%i` 这个代码将显示所有符合要求（比如 1.txt 1.tt 1.tst）的文件的绝对路径。\n\n\n\n例子2：\n`for /d /r %%i in ( ) do echo %%i`\n解释：\n第一种情况和上面相似，直接把字符加在路径后面。\n\n如果含有通配符的，那么它将显示所有的文件夹名符合通配规则的文件夹的绝对路径，同时去掉\\号。\n\nps：\n\n例子1的代码会把当前目录和子目录显示出来，而例子2只显示当前目录的子目录。\n例子1显示的结果可以看成是文件，而例子2显示的结果则应该看成是文件夹，因为有/d 的存在。\n如果输出的%%i格式达不到要求，还可以用%%~fi 之类的修正。","slug":"batjichu","published":1,"updated":"2018-08-24T12:42:36.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl9jaoa2000ewswk4l22x3r9","content":"<h3 id=\"bat语法\"><a href=\"#bat语法\" class=\"headerlink\" title=\"bat语法\"></a>bat语法</h3><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span>  ./RptFile/<span class=\"variable\">%Today%</span></span><br><span class=\"line\"><span class=\"built_in\">dir</span> /B /A-D .\\end.ok <span class=\"number\">2</span>&gt;<span class=\"built_in\">nul</span> | <span class=\"built_in\">find</span> /V /C \"\"&gt;D:/TT/count.txt</span><br><span class=\"line\"><span class=\"built_in\">set</span> /P c=&lt;D:/TT/count.txt</span><br><span class=\"line\"><span class=\"built_in\">echo</span> END.OK   <span class=\"variable\">%c%</span>个</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::此脚本用来统计目录下文件与文件夹个数 与wind属性相似。</span><br><span class=\"line\">::把D:\\putty替换成统计目录</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"built_in\">echo</span> off&amp;<span class=\"built_in\">title</span> limq @ BAT-GO  <span class=\"built_in\">At</span>:<span class=\"number\">2010</span>-<span class=\"number\">09</span>-<span class=\"number\">19</span> <span class=\"number\">12</span>:<span class=\"number\">23</span>:<span class=\"number\">59</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> Today=<span class=\"variable\">%Date:~0,4%</span><span class=\"variable\">%Date:~5,2%</span><span class=\"variable\">%Date:~8,2%</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 今天是<span class=\"variable\">%Today%</span>下面开始统计文件</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 统计中~~~</span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"delims=\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">dir</span> /s/b/a-d D:\\putty ') <span class=\"keyword\">do</span> <span class=\"built_in\">set</span>/a a+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"delims=\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">dir</span> /s/b/ad  D:\\putty ') <span class=\"keyword\">do</span> <span class=\"built_in\">set</span>/a b+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> /p=【D:\\putty 】文件夹内有 <span class=\"variable\">%b%</span> 个文件夹， <span class=\"variable\">%a%</span> 个文件，&lt;<span class=\"built_in\">nul</span>&amp;<span class=\"built_in\">pause</span></span><br></pre></td></tr></table></figure>\n<p>例子1：<br><code>for /r %%i in (  ) do echo %%i</code><br>解释：<br>如果在括号里的是一些无特殊意义的字符如”.”  “abc”之类的， 那输出的%%i<br>的值为遍历到的文件夹的绝对地址（地址带有\\号）后加上这些特殊字符。</p>\n<p>如果括号里的是含有通配符（<em> ？）的，那么不是像上边那样直接加在文件夹地址后了。含有通配符的字符串会被扩展成实际存在的文件名。<br>比如 `for /r %%i in (1.t</em>t) do echo %%i` 这个代码将显示所有符合要求（比如 1.txt 1.tt 1.tst）的文件的绝对路径。</p>\n<p>例子2：<br><code>for /d /r %%i in ( ) do echo %%i</code><br>解释：<br>第一种情况和上面相似，直接把字符加在路径后面。</p>\n<p>如果含有通配符的，那么它将显示所有的文件夹名符合通配规则的文件夹的绝对路径，同时去掉\\号。</p>\n<p>ps：</p>\n<p>例子1的代码会把当前目录和子目录显示出来，而例子2只显示当前目录的子目录。<br>例子1显示的结果可以看成是文件，而例子2显示的结果则应该看成是文件夹，因为有/d 的存在。<br>如果输出的%%i格式达不到要求，还可以用%%~fi 之类的修正。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"bat语法\"><a href=\"#bat语法\" class=\"headerlink\" title=\"bat语法\"></a>bat语法</h3><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span>  ./RptFile/<span class=\"variable\">%Today%</span></span><br><span class=\"line\"><span class=\"built_in\">dir</span> /B /A-D .\\end.ok <span class=\"number\">2</span>&gt;<span class=\"built_in\">nul</span> | <span class=\"built_in\">find</span> /V /C \"\"&gt;D:/TT/count.txt</span><br><span class=\"line\"><span class=\"built_in\">set</span> /P c=&lt;D:/TT/count.txt</span><br><span class=\"line\"><span class=\"built_in\">echo</span> END.OK   <span class=\"variable\">%c%</span>个</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::此脚本用来统计目录下文件与文件夹个数 与wind属性相似。</span><br><span class=\"line\">::把D:\\putty替换成统计目录</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"built_in\">echo</span> off&amp;<span class=\"built_in\">title</span> limq @ BAT-GO  <span class=\"built_in\">At</span>:<span class=\"number\">2010</span>-<span class=\"number\">09</span>-<span class=\"number\">19</span> <span class=\"number\">12</span>:<span class=\"number\">23</span>:<span class=\"number\">59</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> Today=<span class=\"variable\">%Date:~0,4%</span><span class=\"variable\">%Date:~5,2%</span><span class=\"variable\">%Date:~8,2%</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 今天是<span class=\"variable\">%Today%</span>下面开始统计文件</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 统计中~~~</span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"delims=\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">dir</span> /s/b/a-d D:\\putty ') <span class=\"keyword\">do</span> <span class=\"built_in\">set</span>/a a+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"delims=\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">dir</span> /s/b/ad  D:\\putty ') <span class=\"keyword\">do</span> <span class=\"built_in\">set</span>/a b+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> /p=【D:\\putty 】文件夹内有 <span class=\"variable\">%b%</span> 个文件夹， <span class=\"variable\">%a%</span> 个文件，&lt;<span class=\"built_in\">nul</span>&amp;<span class=\"built_in\">pause</span></span><br></pre></td></tr></table></figure>\n<p>例子1：<br><code>for /r %%i in (  ) do echo %%i</code><br>解释：<br>如果在括号里的是一些无特殊意义的字符如”.”  “abc”之类的， 那输出的%%i<br>的值为遍历到的文件夹的绝对地址（地址带有\\号）后加上这些特殊字符。</p>\n<p>如果括号里的是含有通配符（<em> ？）的，那么不是像上边那样直接加在文件夹地址后了。含有通配符的字符串会被扩展成实际存在的文件名。<br>比如 `for /r %%i in (1.t</em>t) do echo %%i` 这个代码将显示所有符合要求（比如 1.txt 1.tt 1.tst）的文件的绝对路径。</p>\n<p>例子2：<br><code>for /d /r %%i in ( ) do echo %%i</code><br>解释：<br>第一种情况和上面相似，直接把字符加在路径后面。</p>\n<p>如果含有通配符的，那么它将显示所有的文件夹名符合通配规则的文件夹的绝对路径，同时去掉\\号。</p>\n<p>ps：</p>\n<p>例子1的代码会把当前目录和子目录显示出来，而例子2只显示当前目录的子目录。<br>例子1显示的结果可以看成是文件，而例子2显示的结果则应该看成是文件夹，因为有/d 的存在。<br>如果输出的%%i格式达不到要求，还可以用%%~fi 之类的修正。</p>\n"},{"title":"git基础配置命令","date":"2018-08-20T03:13:56.000Z","_content":"\n\n\n\n\n### 关于版本控制\n\n什么是“版本控制”？我为什么要关心它呢？ 版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。 在本书所展示的例子中，我们对保存着软件源代码的文件作版本控制，但实际上，你可以对任何类型的文件进行版本控制。 Git 就是一种版本控制工具。Git 自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。 它的速度飞快，极其适合管理大项目，有着令人难以置信的非线性分支管理系统（参见 [Git 分支](https://git-scm.com/book/zh/v2/ch00/ch03-git-branching)）。 \n\n### 命令行\n\nGit 有多种使用方式。 你可以使用原生的命令行模式，也可以使用 GUI 模式，这些 GUI 软件也能提供多种功能。 \n\n假如你是 Mac 用户，我们希望你懂得如何使用终端（Terminal）；假如你是 Windows 用户，我们希望你懂得如何使用命令窗口（Command Prompt）或 PowerShell。 如果你尚未掌握以上技能，我们建议你先停下来快速学习一下，本文讲述和举例将用到这些技能。\n\n### 安装 Git\n\n在你开始使用 Git 前，需要将它安装在你的计算机上。 即便已经安装，最好将它升级到最新的版本。 你可以通过软件包或者其它安装程序来安装，或者下载源码编译安装。 \n\n#### 在 Windows 上安装\n\n在 Windows 上安装 Git 也有几种安装方法。 官方版本可以在 Git 官方网站下载。 打开 [Downloading Git](http://git-scm.com/download/win)，下载会自动开始。 要注意这是一个名为 Git for Windows的项目（也叫做 msysGit），和 Git 是分别独立的项目；更多信息请访问 <http://msysgit.github.io/>。 \n\n### git基础配置\n\n\n安装完成 git 后需要做一些配置就可以使用 git 托管代码带 GitHub 上面了。开始使用 Git, 打开 开始 > 所有程序 > Git > git-bash。这样就进入的 GIt 的命令行。\n\n```bash\n# git 初始配置\ngit config --global user.name \"limq-debianvm-home\"\ngit config --global user.email \"gylimingqi@163.com\"\ngit config --global push.default simple\n# git 添加远程分支\ngit remote add origin git@github.com:dadiqq/nework-git.git\ngit remote add origin_soft  git@github.com:dadiqq/software.git\n#创建 ssh-key\n[root@ora11g ~]# mkdir .ssh\n[root@ora11g ~]# cd .ssh/\n #用ssh-keygen命令来生成密钥对，passphrase我们输入或不输入都行。\n[root@ora11g .ssh]# ssh-keygen -t rsa -C \"gylimigqi@163.com\"\n[root@ora11g .ssh]#ls\n[root@ora11g etl]# echo 'unset SSH_ASKPASS' >> ~/.bashrc && source ~/.bashrc\n\ngit clone https://github.com/dadiqq/nework-git.git   [路径]\ngit clone https://github.com/dadiqq/VFP.git\ngit remote remove <name>\ngit remote -v\n```\n\n### 设置github上的公钥\n#### 步骤如下：\n\n​    a. 登陆github后 -> \"Account Setting\" -> \"SSH Keys\"\n    b. \"Add SSH Key\"\n    c. Title随便填写一个，Key那里我们把把id_rsa.pub里的内容拷贝进去。\n\n### 测试\n\nssh -T git@github.com\n\n### 常用命令 \n\n```bash\n[root@ora11g etl]# echo 'unset SSH_ASKPASS' >> ~/.bashrc && source ~/.bashrc   \n#查看远程库\nenv GIT_SSL_NO_VERIFY=true  \ngit remote show origin\n#下载 GitHub 上项目\nenv GIT_SSL_NO_VERIFY=true   \ngit clone https://github.com/dadiqq/nework-git.git\ngit clone  git@github.com:dadiqq/nework-git.git\ngit clone --no-checkout https://github.com/dadiqq/nework-git.git tmp\n\ngit reset --hard HEAD\ngit push -u origin master\ncurl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt\n```\n\n工作的时候经常需要在各个目录之间跳转，可以通过环境变量对目录进行缩写，方便地在多个目录直接切换。\n在 ~/.bashrc 添加：\n\nexport wd=\"/d/Projects/MyProject/git\"\nexport doc=\"/d/Projects/documents/\"\n\n下面来验证以上的说法。\n创建一个空的项目，\n```bash\n$ mkdir project\n$ cd project\n$ git init\n$ vi  readme    # 添加一行文字并保存，比如“1111”\n$ git add readme\n$ git commit -m \"1st commit\"\n\n此时来看仓库中的对象目录\n\n$ tree .git/objects/\n```\n### 如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：\n\n`fatal: destination path '.' already exists and is not an empty directory.`\n\n#### 解决的办法是：\n```bash\n1. 进入非空目录，假设是 /workdir/proj1\n2. git clone --no-checkout https://git.oschina.net/NextApp/platform.git tmp\n3. mv tmp/.git .   #将 tmp 目录下的 .git 目录移到当前目录\n4. rmdir tmp\n5. git reset --hard HEAD\n```\n然后就可以进行各种正常操作了。\n\n#### 第二方案\n```bash\nls -a  \nrm .git/ -rf \n```\n\n\n- [ ] 跑步\n- [ ] 写博客\n- [ ] 学习\n","source":"_posts/gitjichupeizhi.md","raw":"---\ntitle: git基础配置命令\ndate: 2018-08-20 11:13:56\ntags: [Git,版本控制]\ncategories: \n- Program \n- Git\n---\n\n\n\n\n\n### 关于版本控制\n\n什么是“版本控制”？我为什么要关心它呢？ 版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。 在本书所展示的例子中，我们对保存着软件源代码的文件作版本控制，但实际上，你可以对任何类型的文件进行版本控制。 Git 就是一种版本控制工具。Git 自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。 它的速度飞快，极其适合管理大项目，有着令人难以置信的非线性分支管理系统（参见 [Git 分支](https://git-scm.com/book/zh/v2/ch00/ch03-git-branching)）。 \n\n### 命令行\n\nGit 有多种使用方式。 你可以使用原生的命令行模式，也可以使用 GUI 模式，这些 GUI 软件也能提供多种功能。 \n\n假如你是 Mac 用户，我们希望你懂得如何使用终端（Terminal）；假如你是 Windows 用户，我们希望你懂得如何使用命令窗口（Command Prompt）或 PowerShell。 如果你尚未掌握以上技能，我们建议你先停下来快速学习一下，本文讲述和举例将用到这些技能。\n\n### 安装 Git\n\n在你开始使用 Git 前，需要将它安装在你的计算机上。 即便已经安装，最好将它升级到最新的版本。 你可以通过软件包或者其它安装程序来安装，或者下载源码编译安装。 \n\n#### 在 Windows 上安装\n\n在 Windows 上安装 Git 也有几种安装方法。 官方版本可以在 Git 官方网站下载。 打开 [Downloading Git](http://git-scm.com/download/win)，下载会自动开始。 要注意这是一个名为 Git for Windows的项目（也叫做 msysGit），和 Git 是分别独立的项目；更多信息请访问 <http://msysgit.github.io/>。 \n\n### git基础配置\n\n\n安装完成 git 后需要做一些配置就可以使用 git 托管代码带 GitHub 上面了。开始使用 Git, 打开 开始 > 所有程序 > Git > git-bash。这样就进入的 GIt 的命令行。\n\n```bash\n# git 初始配置\ngit config --global user.name \"limq-debianvm-home\"\ngit config --global user.email \"gylimingqi@163.com\"\ngit config --global push.default simple\n# git 添加远程分支\ngit remote add origin git@github.com:dadiqq/nework-git.git\ngit remote add origin_soft  git@github.com:dadiqq/software.git\n#创建 ssh-key\n[root@ora11g ~]# mkdir .ssh\n[root@ora11g ~]# cd .ssh/\n #用ssh-keygen命令来生成密钥对，passphrase我们输入或不输入都行。\n[root@ora11g .ssh]# ssh-keygen -t rsa -C \"gylimigqi@163.com\"\n[root@ora11g .ssh]#ls\n[root@ora11g etl]# echo 'unset SSH_ASKPASS' >> ~/.bashrc && source ~/.bashrc\n\ngit clone https://github.com/dadiqq/nework-git.git   [路径]\ngit clone https://github.com/dadiqq/VFP.git\ngit remote remove <name>\ngit remote -v\n```\n\n### 设置github上的公钥\n#### 步骤如下：\n\n​    a. 登陆github后 -> \"Account Setting\" -> \"SSH Keys\"\n    b. \"Add SSH Key\"\n    c. Title随便填写一个，Key那里我们把把id_rsa.pub里的内容拷贝进去。\n\n### 测试\n\nssh -T git@github.com\n\n### 常用命令 \n\n```bash\n[root@ora11g etl]# echo 'unset SSH_ASKPASS' >> ~/.bashrc && source ~/.bashrc   \n#查看远程库\nenv GIT_SSL_NO_VERIFY=true  \ngit remote show origin\n#下载 GitHub 上项目\nenv GIT_SSL_NO_VERIFY=true   \ngit clone https://github.com/dadiqq/nework-git.git\ngit clone  git@github.com:dadiqq/nework-git.git\ngit clone --no-checkout https://github.com/dadiqq/nework-git.git tmp\n\ngit reset --hard HEAD\ngit push -u origin master\ncurl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt\n```\n\n工作的时候经常需要在各个目录之间跳转，可以通过环境变量对目录进行缩写，方便地在多个目录直接切换。\n在 ~/.bashrc 添加：\n\nexport wd=\"/d/Projects/MyProject/git\"\nexport doc=\"/d/Projects/documents/\"\n\n下面来验证以上的说法。\n创建一个空的项目，\n```bash\n$ mkdir project\n$ cd project\n$ git init\n$ vi  readme    # 添加一行文字并保存，比如“1111”\n$ git add readme\n$ git commit -m \"1st commit\"\n\n此时来看仓库中的对象目录\n\n$ tree .git/objects/\n```\n### 如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：\n\n`fatal: destination path '.' already exists and is not an empty directory.`\n\n#### 解决的办法是：\n```bash\n1. 进入非空目录，假设是 /workdir/proj1\n2. git clone --no-checkout https://git.oschina.net/NextApp/platform.git tmp\n3. mv tmp/.git .   #将 tmp 目录下的 .git 目录移到当前目录\n4. rmdir tmp\n5. git reset --hard HEAD\n```\n然后就可以进行各种正常操作了。\n\n#### 第二方案\n```bash\nls -a  \nrm .git/ -rf \n```\n\n\n- [ ] 跑步\n- [ ] 写博客\n- [ ] 学习\n","slug":"gitjichupeizhi","published":1,"updated":"2018-08-24T12:42:36.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl9jaoaa000iwswk65ut3tdw","content":"<h3 id=\"关于版本控制\"><a href=\"#关于版本控制\" class=\"headerlink\" title=\"关于版本控制\"></a>关于版本控制</h3><p>什么是“版本控制”？我为什么要关心它呢？ 版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。 在本书所展示的例子中，我们对保存着软件源代码的文件作版本控制，但实际上，你可以对任何类型的文件进行版本控制。 Git 就是一种版本控制工具。Git 自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。 它的速度飞快，极其适合管理大项目，有着令人难以置信的非线性分支管理系统（参见 <a href=\"https://git-scm.com/book/zh/v2/ch00/ch03-git-branching\" target=\"_blank\" rel=\"noopener\">Git 分支</a>）。 </p>\n<h3 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h3><p>Git 有多种使用方式。 你可以使用原生的命令行模式，也可以使用 GUI 模式，这些 GUI 软件也能提供多种功能。 </p>\n<p>假如你是 Mac 用户，我们希望你懂得如何使用终端（Terminal）；假如你是 Windows 用户，我们希望你懂得如何使用命令窗口（Command Prompt）或 PowerShell。 如果你尚未掌握以上技能，我们建议你先停下来快速学习一下，本文讲述和举例将用到这些技能。</p>\n<h3 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h3><p>在你开始使用 Git 前，需要将它安装在你的计算机上。 即便已经安装，最好将它升级到最新的版本。 你可以通过软件包或者其它安装程序来安装，或者下载源码编译安装。 </p>\n<h4 id=\"在-Windows-上安装\"><a href=\"#在-Windows-上安装\" class=\"headerlink\" title=\"在 Windows 上安装\"></a>在 Windows 上安装</h4><p>在 Windows 上安装 Git 也有几种安装方法。 官方版本可以在 Git 官方网站下载。 打开 <a href=\"http://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">Downloading Git</a>，下载会自动开始。 要注意这是一个名为 Git for Windows的项目（也叫做 msysGit），和 Git 是分别独立的项目；更多信息请访问 <a href=\"http://msysgit.github.io/\" target=\"_blank\" rel=\"noopener\">http://msysgit.github.io/</a>。 </p>\n<h3 id=\"git基础配置\"><a href=\"#git基础配置\" class=\"headerlink\" title=\"git基础配置\"></a>git基础配置</h3><p>安装完成 git 后需要做一些配置就可以使用 git 托管代码带 GitHub 上面了。开始使用 Git, 打开 开始 &gt; 所有程序 &gt; Git &gt; git-bash。这样就进入的 GIt 的命令行。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git 初始配置</span></span><br><span class=\"line\">git config --global user.name <span class=\"string\">\"limq-debianvm-home\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"gylimingqi@163.com\"</span></span><br><span class=\"line\">git config --global push.default simple</span><br><span class=\"line\"><span class=\"comment\"># git 添加远程分支</span></span><br><span class=\"line\">git remote add origin git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git remote add origin_soft  git@github.com:dadiqq/software.git</span><br><span class=\"line\"><span class=\"comment\">#创建 ssh-key</span></span><br><span class=\"line\">[root@ora11g ~]<span class=\"comment\"># mkdir .ssh</span></span><br><span class=\"line\">[root@ora11g ~]<span class=\"comment\"># cd .ssh/</span></span><br><span class=\"line\"> <span class=\"comment\">#用ssh-keygen命令来生成密钥对，passphrase我们输入或不输入都行。</span></span><br><span class=\"line\">[root@ora11g .ssh]<span class=\"comment\"># ssh-keygen -t rsa -C \"gylimigqi@163.com\"</span></span><br><span class=\"line\">[root@ora11g .ssh]<span class=\"comment\">#ls</span></span><br><span class=\"line\">[root@ora11g etl]<span class=\"comment\"># echo 'unset SSH_ASKPASS' &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc</span></span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/nework-git.git   [路径]</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/VFP.git</span><br><span class=\"line\">git remote remove &lt;name&gt;</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置github上的公钥\"><a href=\"#设置github上的公钥\" class=\"headerlink\" title=\"设置github上的公钥\"></a>设置github上的公钥</h3><h4 id=\"步骤如下：\"><a href=\"#步骤如下：\" class=\"headerlink\" title=\"步骤如下：\"></a>步骤如下：</h4><p>​    a. 登陆github后 -&gt; “Account Setting” -&gt; “SSH Keys”<br>    b. “Add SSH Key”<br>    c. Title随便填写一个，Key那里我们把把id_rsa.pub里的内容拷贝进去。</p>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>ssh -T <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a></p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ora11g etl]<span class=\"comment\"># echo 'unset SSH_ASKPASS' &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc   </span></span><br><span class=\"line\"><span class=\"comment\">#查看远程库</span></span><br><span class=\"line\">env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span>  </span><br><span class=\"line\">git remote show origin</span><br><span class=\"line\"><span class=\"comment\">#下载 GitHub 上项目</span></span><br><span class=\"line\">env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span>   </span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/nework-git.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span>  git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --no-checkout https://github.com/dadiqq/nework-git.git tmp</span><br><span class=\"line\"></span><br><span class=\"line\">git reset --hard HEAD</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\">curl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt</span><br></pre></td></tr></table></figure>\n<p>工作的时候经常需要在各个目录之间跳转，可以通过环境变量对目录进行缩写，方便地在多个目录直接切换。<br>在 ~/.bashrc 添加：</p>\n<p>export wd=”/d/Projects/MyProject/git”<br>export doc=”/d/Projects/documents/“</p>\n<p>下面来验证以上的说法。<br>创建一个空的项目，<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir project</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> project</span><br><span class=\"line\">$ git init</span><br><span class=\"line\">$ vi  readme    <span class=\"comment\"># 添加一行文字并保存，比如“1111”</span></span><br><span class=\"line\">$ git add readme</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"1st commit\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">此时来看仓库中的对象目录</span><br><span class=\"line\"></span><br><span class=\"line\">$ tree .git/objects/</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"如果我们往一个非空的目录下-clone-git-项目，就会提示错误信息：\"><a href=\"#如果我们往一个非空的目录下-clone-git-项目，就会提示错误信息：\" class=\"headerlink\" title=\"如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：\"></a>如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：</h3><p><code>fatal: destination path &#39;.&#39; already exists and is not an empty directory.</code></p>\n<h4 id=\"解决的办法是：\"><a href=\"#解决的办法是：\" class=\"headerlink\" title=\"解决的办法是：\"></a>解决的办法是：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 进入非空目录，假设是 /workdir/proj1</span><br><span class=\"line\">2. git <span class=\"built_in\">clone</span> --no-checkout https://git.oschina.net/NextApp/platform.git tmp</span><br><span class=\"line\">3. mv tmp/.git .   <span class=\"comment\">#将 tmp 目录下的 .git 目录移到当前目录</span></span><br><span class=\"line\">4. rmdir tmp</span><br><span class=\"line\">5. git reset --hard HEAD</span><br></pre></td></tr></table></figure>\n<p>然后就可以进行各种正常操作了。</p>\n<h4 id=\"第二方案\"><a href=\"#第二方案\" class=\"headerlink\" title=\"第二方案\"></a>第二方案</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -a  </span><br><span class=\"line\">rm .git/ -rf</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 跑步</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 写博客</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 学习</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"关于版本控制\"><a href=\"#关于版本控制\" class=\"headerlink\" title=\"关于版本控制\"></a>关于版本控制</h3><p>什么是“版本控制”？我为什么要关心它呢？ 版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。 在本书所展示的例子中，我们对保存着软件源代码的文件作版本控制，但实际上，你可以对任何类型的文件进行版本控制。 Git 就是一种版本控制工具。Git 自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。 它的速度飞快，极其适合管理大项目，有着令人难以置信的非线性分支管理系统（参见 <a href=\"https://git-scm.com/book/zh/v2/ch00/ch03-git-branching\" target=\"_blank\" rel=\"noopener\">Git 分支</a>）。 </p>\n<h3 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h3><p>Git 有多种使用方式。 你可以使用原生的命令行模式，也可以使用 GUI 模式，这些 GUI 软件也能提供多种功能。 </p>\n<p>假如你是 Mac 用户，我们希望你懂得如何使用终端（Terminal）；假如你是 Windows 用户，我们希望你懂得如何使用命令窗口（Command Prompt）或 PowerShell。 如果你尚未掌握以上技能，我们建议你先停下来快速学习一下，本文讲述和举例将用到这些技能。</p>\n<h3 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h3><p>在你开始使用 Git 前，需要将它安装在你的计算机上。 即便已经安装，最好将它升级到最新的版本。 你可以通过软件包或者其它安装程序来安装，或者下载源码编译安装。 </p>\n<h4 id=\"在-Windows-上安装\"><a href=\"#在-Windows-上安装\" class=\"headerlink\" title=\"在 Windows 上安装\"></a>在 Windows 上安装</h4><p>在 Windows 上安装 Git 也有几种安装方法。 官方版本可以在 Git 官方网站下载。 打开 <a href=\"http://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">Downloading Git</a>，下载会自动开始。 要注意这是一个名为 Git for Windows的项目（也叫做 msysGit），和 Git 是分别独立的项目；更多信息请访问 <a href=\"http://msysgit.github.io/\" target=\"_blank\" rel=\"noopener\">http://msysgit.github.io/</a>。 </p>\n<h3 id=\"git基础配置\"><a href=\"#git基础配置\" class=\"headerlink\" title=\"git基础配置\"></a>git基础配置</h3><p>安装完成 git 后需要做一些配置就可以使用 git 托管代码带 GitHub 上面了。开始使用 Git, 打开 开始 &gt; 所有程序 &gt; Git &gt; git-bash。这样就进入的 GIt 的命令行。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git 初始配置</span></span><br><span class=\"line\">git config --global user.name <span class=\"string\">\"limq-debianvm-home\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"gylimingqi@163.com\"</span></span><br><span class=\"line\">git config --global push.default simple</span><br><span class=\"line\"><span class=\"comment\"># git 添加远程分支</span></span><br><span class=\"line\">git remote add origin git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git remote add origin_soft  git@github.com:dadiqq/software.git</span><br><span class=\"line\"><span class=\"comment\">#创建 ssh-key</span></span><br><span class=\"line\">[root@ora11g ~]<span class=\"comment\"># mkdir .ssh</span></span><br><span class=\"line\">[root@ora11g ~]<span class=\"comment\"># cd .ssh/</span></span><br><span class=\"line\"> <span class=\"comment\">#用ssh-keygen命令来生成密钥对，passphrase我们输入或不输入都行。</span></span><br><span class=\"line\">[root@ora11g .ssh]<span class=\"comment\"># ssh-keygen -t rsa -C \"gylimigqi@163.com\"</span></span><br><span class=\"line\">[root@ora11g .ssh]<span class=\"comment\">#ls</span></span><br><span class=\"line\">[root@ora11g etl]<span class=\"comment\"># echo 'unset SSH_ASKPASS' &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc</span></span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/nework-git.git   [路径]</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/VFP.git</span><br><span class=\"line\">git remote remove &lt;name&gt;</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置github上的公钥\"><a href=\"#设置github上的公钥\" class=\"headerlink\" title=\"设置github上的公钥\"></a>设置github上的公钥</h3><h4 id=\"步骤如下：\"><a href=\"#步骤如下：\" class=\"headerlink\" title=\"步骤如下：\"></a>步骤如下：</h4><p>​    a. 登陆github后 -&gt; “Account Setting” -&gt; “SSH Keys”<br>    b. “Add SSH Key”<br>    c. Title随便填写一个，Key那里我们把把id_rsa.pub里的内容拷贝进去。</p>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>ssh -T <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a></p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ora11g etl]<span class=\"comment\"># echo 'unset SSH_ASKPASS' &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc   </span></span><br><span class=\"line\"><span class=\"comment\">#查看远程库</span></span><br><span class=\"line\">env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span>  </span><br><span class=\"line\">git remote show origin</span><br><span class=\"line\"><span class=\"comment\">#下载 GitHub 上项目</span></span><br><span class=\"line\">env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span>   </span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/nework-git.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span>  git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --no-checkout https://github.com/dadiqq/nework-git.git tmp</span><br><span class=\"line\"></span><br><span class=\"line\">git reset --hard HEAD</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\">curl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt</span><br></pre></td></tr></table></figure>\n<p>工作的时候经常需要在各个目录之间跳转，可以通过环境变量对目录进行缩写，方便地在多个目录直接切换。<br>在 ~/.bashrc 添加：</p>\n<p>export wd=”/d/Projects/MyProject/git”<br>export doc=”/d/Projects/documents/“</p>\n<p>下面来验证以上的说法。<br>创建一个空的项目，<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir project</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> project</span><br><span class=\"line\">$ git init</span><br><span class=\"line\">$ vi  readme    <span class=\"comment\"># 添加一行文字并保存，比如“1111”</span></span><br><span class=\"line\">$ git add readme</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"1st commit\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">此时来看仓库中的对象目录</span><br><span class=\"line\"></span><br><span class=\"line\">$ tree .git/objects/</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"如果我们往一个非空的目录下-clone-git-项目，就会提示错误信息：\"><a href=\"#如果我们往一个非空的目录下-clone-git-项目，就会提示错误信息：\" class=\"headerlink\" title=\"如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：\"></a>如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：</h3><p><code>fatal: destination path &#39;.&#39; already exists and is not an empty directory.</code></p>\n<h4 id=\"解决的办法是：\"><a href=\"#解决的办法是：\" class=\"headerlink\" title=\"解决的办法是：\"></a>解决的办法是：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 进入非空目录，假设是 /workdir/proj1</span><br><span class=\"line\">2. git <span class=\"built_in\">clone</span> --no-checkout https://git.oschina.net/NextApp/platform.git tmp</span><br><span class=\"line\">3. mv tmp/.git .   <span class=\"comment\">#将 tmp 目录下的 .git 目录移到当前目录</span></span><br><span class=\"line\">4. rmdir tmp</span><br><span class=\"line\">5. git reset --hard HEAD</span><br></pre></td></tr></table></figure>\n<p>然后就可以进行各种正常操作了。</p>\n<h4 id=\"第二方案\"><a href=\"#第二方案\" class=\"headerlink\" title=\"第二方案\"></a>第二方案</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -a  </span><br><span class=\"line\">rm .git/ -rf</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 跑步</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 写博客</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 学习</li>\n</ul>\n"},{"title":"Hello World","comments":1,"date":"2018-08-22T14:26:12.000Z","updated":"2018-08-22T14:26:12.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ncomments: true\ndate: 2018-08-22 22:26:12\nupdated: 2018-08-22 22:26:12\ntags:  [tools]\ncategories: 效率工具\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"layout":"post","photos":[],"link":"","_id":"cjl9jaoad000kwswkwdmaazhw","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"用 Hexo + Github 搭建属于自己的博客","date":"2018-08-20T03:13:56.000Z","_content":"\n最近几天一直想做一个自己的博客，把学习过的技术看过的文章都整理起来，花了几天的时间[博客](limqvip.github.io)初步搭建完成，看了很多大佬文章，但是自己搭建还是遇到很多坑，下面就写写搭建过程。希望对看到的人有帮助。\n\n本文主要介绍 Windows 7 x64 下 Hexo: 3.7.1 + GitHub 搭建（不同的 Hexo 版本，有的设置可能会有差异）。\n\n## 搭建环境\n\n#### \t1. 安装 git\n\n可以到 [git](https://git-scm.com/download/win) 官网下载相应平台版本进行安装。\n\n#### \t2. 申请 GitHub 账号\n\n进入 [GitHub ](https://link.jianshu.com/?t=https://github.com/) 注册。注册过程略。\n\n#### \t3. 安装 node.js\n\n到 [node.js](https://link.jianshu.com/?t=https://nodejs.org/en/download/) 官网下载相应平台的最新版本，傻瓜式安装（自带安装 npm）。在 git bash 下执行`npm -v` 查看是否安装成功 npm。如果安装成功会显示对应版本号。\n\n```bash\n$ npm -v\n5.6.0\n```\n\n#### 4. 安装 Hexo\n\n打开 git bash 或者 cmd, 执行以下命令:\n`npm install -g hexo`\n\n## 搭建 Hexo\n\n#### 1. 初始化 \n\n执行`hexo init myblog`创建一个名为 myblog 的博客。该命令会生成一个 myblog 文件夹。进入 myblog 目录 `cd myblog `, myblog 是博客的主目录。\n\n#### 2. 安装必须依赖包\n\n`hexo install <name>`\n\n#### 3. 生成静态页面\n\n`hexo generate` or `hexo g`\n\n#### 4. 本地运行\n\n`hexo server` 或者 `hexo s`\n\n打开浏览器，在地址栏输入localhost:4000，就可以看到我们搭建好的本地博客了。到此只是搭建好了本地博客。\n\n## 部署博客到 GitHub , 通过域名访问博客。\n#### 1.新建repository\n\n建立与你用户名对应的仓库，仓库名必须为【 your_username.github.io】,例如我的博客 limqvip.github.io. \n\n#### 2.部署博客\n\n##### 1. 修改配置文件\n\n进入你的hexo文件夹根目录下，用编辑器打开 _config.yml, 修改 deploy 项，如下（根据你的 GitHub 进行相应更改）：\n\n```bash\ndeploy:\n  type: git       #注意：有的版本type是github\n  repo: https://github.com/limqvip/limqvip.github.io.git\n  branch: master\n```\n\n##### 2. 执行 `hexo d` 部署到 github 上。\n\n```bash\nINFO  Deploying: git\nINFO  Clearing .deploy_git folder...\nINFO  Copying files from public folder...\nINFO  Copying files from extend dirs...\n…略\n create mode 100644 \"tags/\\347\\211\\210\\346\\234\\254\\346\\216\\247\\345\\210\\266/index.html\"\nBranch master set up to track remote branch master from git@github.com:limqvip/limqvip.github.io.git.\nTo github.com:limqvip/limqvip.github.io.git\n   5867eb8..f25e3d4  HEAD -> master\nINFO  Deploy done: git\n```\n\n此时就完成部署了，用浏览器访问 https://limqvip.github.io 即可(第一次发布可能会有 10 分钟的延迟)。\n\n每次修改完本地的文件后要执行以下命令，重新部署到 github 上：\n\n`hexo clean`\n`hexo generate`\n`hexo deploy` 或者 `hexo d`\n\n#### 常用命令\n\n`hexo new \"postName\"` #新建文章\n`hexo new page \"pageName\"` #新建页面\n`hexo generate` #生成静态页面至public目录\n`hexo server` #开启预览访问端口（默认端口 4000, 'ctrl + c' 关闭 server）\n`hexo deploy` #将 .deploy 目录部署到 GitHub\n`hexo help` # 查看帮助\n`hexo version` #查看 Hexo 的版本\n\n#### 报错总结\n\n1. 出现 error deployer not found:git 或者 error deployer not found:github 的错误\n\n   解决办法：执行 npm install hexo-deployer-git --save\n\n2. 出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: ... 错误\n\n   解决办法：_config.yml 中配置项的英文冒号后面要用空格隔开，再跟内容。\n\n3. 中文乱码问题\n\n   解决办法：将文件的内容编码改为 UTF8 格式\n\n4. 'hexo sever' 能够成功运行，但是 localhost:4000 无法访问\n\n   解决办法：执行 hexo s -p 5000, 改用其他端口启动\n\n   ---\n\n   安装步骤很简单，但中间走了很多弯路，因此，主要记录一下那些曾经走过的弯路。\n\n   1. 新建项目时报错：\n     npm WARN deprecated istanbul-lib-hook@1.2.1: 1.2.0 should have\n      been a major version bumpnpm ERR! Unexpected end of JSON input while parsing near ‘...registry.npm.taobao.o‘ npm ERR! A complete log of this run can be found in:npm ERR!     \n     C:\\Users\\Admin\\AppData\\Roaming\\npm-cache\\_logs\\2018-06-08T14_01_13_067Z-debug.logPackage install failed, see above. 如下所示：\n\n      解决方法：网上查找的一般是说运行：`npm cache clean --force`，但清除缓存之后，再次新建项目，还是报这个错。然后根据提示信息，取消了淘宝镜像，问题解决。\n\n      取消淘宝镜像：\n\n      ```bash\n     npm config delete registry\n     npm config delete disturl\n      ```\n\n      运行 `npm config edit` 可看到 registry 中已经变成了默认镜像。参考：设置和取消淘宝镜像 \n\n   2. 新建项目时报的警告：npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"}) ‘git‘ 不是内部或外部命令，也不是可运行的程序或批处理文件。 安装git插件\n\n   3. 卸载 angular, 因为反反复复卸载重装了好几次 angular, 因此也记录一下卸载过程吧。\n\n      ```bash\n      npm uninstall -g angular-cli \n      npm uninstall -g @angular/cli\n      npm cache clean  \n      ```\n\n       在运行 `npm cache clean`  时报错如下图，根据信息提示改成了 `npm cache verify`  总结：一定要根据官网教程安装，网上的教程很多很乱，开始就是根据网上教程装的很混乱，   导致报了很多莫名其妙的错。 本文由职坐标整理并发布，希望对同学们有所帮助。了解更多详情请关注 WEB 前端 Node.js 频道！ ","source":"_posts/limqfirst.md","raw":"---\ntitle: 用 Hexo + Github 搭建属于自己的博客\ndate: 2018-08-20 11:13:56\ntags: Python\ncategories: \n- Program\n- hexo\n---\n\n最近几天一直想做一个自己的博客，把学习过的技术看过的文章都整理起来，花了几天的时间[博客](limqvip.github.io)初步搭建完成，看了很多大佬文章，但是自己搭建还是遇到很多坑，下面就写写搭建过程。希望对看到的人有帮助。\n\n本文主要介绍 Windows 7 x64 下 Hexo: 3.7.1 + GitHub 搭建（不同的 Hexo 版本，有的设置可能会有差异）。\n\n## 搭建环境\n\n#### \t1. 安装 git\n\n可以到 [git](https://git-scm.com/download/win) 官网下载相应平台版本进行安装。\n\n#### \t2. 申请 GitHub 账号\n\n进入 [GitHub ](https://link.jianshu.com/?t=https://github.com/) 注册。注册过程略。\n\n#### \t3. 安装 node.js\n\n到 [node.js](https://link.jianshu.com/?t=https://nodejs.org/en/download/) 官网下载相应平台的最新版本，傻瓜式安装（自带安装 npm）。在 git bash 下执行`npm -v` 查看是否安装成功 npm。如果安装成功会显示对应版本号。\n\n```bash\n$ npm -v\n5.6.0\n```\n\n#### 4. 安装 Hexo\n\n打开 git bash 或者 cmd, 执行以下命令:\n`npm install -g hexo`\n\n## 搭建 Hexo\n\n#### 1. 初始化 \n\n执行`hexo init myblog`创建一个名为 myblog 的博客。该命令会生成一个 myblog 文件夹。进入 myblog 目录 `cd myblog `, myblog 是博客的主目录。\n\n#### 2. 安装必须依赖包\n\n`hexo install <name>`\n\n#### 3. 生成静态页面\n\n`hexo generate` or `hexo g`\n\n#### 4. 本地运行\n\n`hexo server` 或者 `hexo s`\n\n打开浏览器，在地址栏输入localhost:4000，就可以看到我们搭建好的本地博客了。到此只是搭建好了本地博客。\n\n## 部署博客到 GitHub , 通过域名访问博客。\n#### 1.新建repository\n\n建立与你用户名对应的仓库，仓库名必须为【 your_username.github.io】,例如我的博客 limqvip.github.io. \n\n#### 2.部署博客\n\n##### 1. 修改配置文件\n\n进入你的hexo文件夹根目录下，用编辑器打开 _config.yml, 修改 deploy 项，如下（根据你的 GitHub 进行相应更改）：\n\n```bash\ndeploy:\n  type: git       #注意：有的版本type是github\n  repo: https://github.com/limqvip/limqvip.github.io.git\n  branch: master\n```\n\n##### 2. 执行 `hexo d` 部署到 github 上。\n\n```bash\nINFO  Deploying: git\nINFO  Clearing .deploy_git folder...\nINFO  Copying files from public folder...\nINFO  Copying files from extend dirs...\n…略\n create mode 100644 \"tags/\\347\\211\\210\\346\\234\\254\\346\\216\\247\\345\\210\\266/index.html\"\nBranch master set up to track remote branch master from git@github.com:limqvip/limqvip.github.io.git.\nTo github.com:limqvip/limqvip.github.io.git\n   5867eb8..f25e3d4  HEAD -> master\nINFO  Deploy done: git\n```\n\n此时就完成部署了，用浏览器访问 https://limqvip.github.io 即可(第一次发布可能会有 10 分钟的延迟)。\n\n每次修改完本地的文件后要执行以下命令，重新部署到 github 上：\n\n`hexo clean`\n`hexo generate`\n`hexo deploy` 或者 `hexo d`\n\n#### 常用命令\n\n`hexo new \"postName\"` #新建文章\n`hexo new page \"pageName\"` #新建页面\n`hexo generate` #生成静态页面至public目录\n`hexo server` #开启预览访问端口（默认端口 4000, 'ctrl + c' 关闭 server）\n`hexo deploy` #将 .deploy 目录部署到 GitHub\n`hexo help` # 查看帮助\n`hexo version` #查看 Hexo 的版本\n\n#### 报错总结\n\n1. 出现 error deployer not found:git 或者 error deployer not found:github 的错误\n\n   解决办法：执行 npm install hexo-deployer-git --save\n\n2. 出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: ... 错误\n\n   解决办法：_config.yml 中配置项的英文冒号后面要用空格隔开，再跟内容。\n\n3. 中文乱码问题\n\n   解决办法：将文件的内容编码改为 UTF8 格式\n\n4. 'hexo sever' 能够成功运行，但是 localhost:4000 无法访问\n\n   解决办法：执行 hexo s -p 5000, 改用其他端口启动\n\n   ---\n\n   安装步骤很简单，但中间走了很多弯路，因此，主要记录一下那些曾经走过的弯路。\n\n   1. 新建项目时报错：\n     npm WARN deprecated istanbul-lib-hook@1.2.1: 1.2.0 should have\n      been a major version bumpnpm ERR! Unexpected end of JSON input while parsing near ‘...registry.npm.taobao.o‘ npm ERR! A complete log of this run can be found in:npm ERR!     \n     C:\\Users\\Admin\\AppData\\Roaming\\npm-cache\\_logs\\2018-06-08T14_01_13_067Z-debug.logPackage install failed, see above. 如下所示：\n\n      解决方法：网上查找的一般是说运行：`npm cache clean --force`，但清除缓存之后，再次新建项目，还是报这个错。然后根据提示信息，取消了淘宝镜像，问题解决。\n\n      取消淘宝镜像：\n\n      ```bash\n     npm config delete registry\n     npm config delete disturl\n      ```\n\n      运行 `npm config edit` 可看到 registry 中已经变成了默认镜像。参考：设置和取消淘宝镜像 \n\n   2. 新建项目时报的警告：npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"}) ‘git‘ 不是内部或外部命令，也不是可运行的程序或批处理文件。 安装git插件\n\n   3. 卸载 angular, 因为反反复复卸载重装了好几次 angular, 因此也记录一下卸载过程吧。\n\n      ```bash\n      npm uninstall -g angular-cli \n      npm uninstall -g @angular/cli\n      npm cache clean  \n      ```\n\n       在运行 `npm cache clean`  时报错如下图，根据信息提示改成了 `npm cache verify`  总结：一定要根据官网教程安装，网上的教程很多很乱，开始就是根据网上教程装的很混乱，   导致报了很多莫名其妙的错。 本文由职坐标整理并发布，希望对同学们有所帮助。了解更多详情请关注 WEB 前端 Node.js 频道！ ","slug":"limqfirst","published":1,"updated":"2018-08-24T12:42:36.521Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl9jaoai000nwswkflatb1rf","content":"<p>最近几天一直想做一个自己的博客，把学习过的技术看过的文章都整理起来，花了几天的时间<a href=\"limqvip.github.io\">博客</a>初步搭建完成，看了很多大佬文章，但是自己搭建还是遇到很多坑，下面就写写搭建过程。希望对看到的人有帮助。</p>\n<p>本文主要介绍 Windows 7 x64 下 Hexo: 3.7.1 + GitHub 搭建（不同的 Hexo 版本，有的设置可能会有差异）。</p>\n<h2 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h2><h4 id=\"1-安装-git\"><a href=\"#1-安装-git\" class=\"headerlink\" title=\"1. 安装 git\"></a>1. 安装 git</h4><p>可以到 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a> 官网下载相应平台版本进行安装。</p>\n<h4 id=\"2-申请-GitHub-账号\"><a href=\"#2-申请-GitHub-账号\" class=\"headerlink\" title=\"2. 申请 GitHub 账号\"></a>2. 申请 GitHub 账号</h4><p>进入 <a href=\"https://link.jianshu.com/?t=https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub </a> 注册。注册过程略。</p>\n<h4 id=\"3-安装-node-js\"><a href=\"#3-安装-node-js\" class=\"headerlink\" title=\"3. 安装 node.js\"></a>3. 安装 node.js</h4><p>到 <a href=\"https://link.jianshu.com/?t=https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">node.js</a> 官网下载相应平台的最新版本，傻瓜式安装（自带安装 npm）。在 git bash 下执行<code>npm -v</code> 查看是否安装成功 npm。如果安装成功会显示对应版本号。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm -v</span><br><span class=\"line\">5.6.0</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-安装-Hexo\"><a href=\"#4-安装-Hexo\" class=\"headerlink\" title=\"4. 安装 Hexo\"></a>4. 安装 Hexo</h4><p>打开 git bash 或者 cmd, 执行以下命令:<br><code>npm install -g hexo</code></p>\n<h2 id=\"搭建-Hexo\"><a href=\"#搭建-Hexo\" class=\"headerlink\" title=\"搭建 Hexo\"></a>搭建 Hexo</h2><h4 id=\"1-初始化\"><a href=\"#1-初始化\" class=\"headerlink\" title=\"1. 初始化\"></a>1. 初始化</h4><p>执行<code>hexo init myblog</code>创建一个名为 myblog 的博客。该命令会生成一个 myblog 文件夹。进入 myblog 目录 <code>cd myblog</code>, myblog 是博客的主目录。</p>\n<h4 id=\"2-安装必须依赖包\"><a href=\"#2-安装必须依赖包\" class=\"headerlink\" title=\"2. 安装必须依赖包\"></a>2. 安装必须依赖包</h4><p><code>hexo install &lt;name&gt;</code></p>\n<h4 id=\"3-生成静态页面\"><a href=\"#3-生成静态页面\" class=\"headerlink\" title=\"3. 生成静态页面\"></a>3. 生成静态页面</h4><p><code>hexo generate</code> or <code>hexo g</code></p>\n<h4 id=\"4-本地运行\"><a href=\"#4-本地运行\" class=\"headerlink\" title=\"4. 本地运行\"></a>4. 本地运行</h4><p><code>hexo server</code> 或者 <code>hexo s</code></p>\n<p>打开浏览器，在地址栏输入localhost:4000，就可以看到我们搭建好的本地博客了。到此只是搭建好了本地博客。</p>\n<h2 id=\"部署博客到-GitHub-通过域名访问博客。\"><a href=\"#部署博客到-GitHub-通过域名访问博客。\" class=\"headerlink\" title=\"部署博客到 GitHub , 通过域名访问博客。\"></a>部署博客到 GitHub , 通过域名访问博客。</h2><h4 id=\"1-新建repository\"><a href=\"#1-新建repository\" class=\"headerlink\" title=\"1.新建repository\"></a>1.新建repository</h4><p>建立与你用户名对应的仓库，仓库名必须为【 your_username.github.io】,例如我的博客 limqvip.github.io. </p>\n<h4 id=\"2-部署博客\"><a href=\"#2-部署博客\" class=\"headerlink\" title=\"2.部署博客\"></a>2.部署博客</h4><h5 id=\"1-修改配置文件\"><a href=\"#1-修改配置文件\" class=\"headerlink\" title=\"1. 修改配置文件\"></a>1. 修改配置文件</h5><p>进入你的hexo文件夹根目录下，用编辑器打开 _config.yml, 修改 deploy 项，如下（根据你的 GitHub 进行相应更改）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git       <span class=\"comment\">#注意：有的版本type是github</span></span><br><span class=\"line\">  repo: https://github.com/limqvip/limqvip.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-执行-hexo-d-部署到-github-上。\"><a href=\"#2-执行-hexo-d-部署到-github-上。\" class=\"headerlink\" title=\"2. 执行 hexo d 部署到 github 上。\"></a>2. 执行 <code>hexo d</code> 部署到 github 上。</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INFO  Deploying: git</span><br><span class=\"line\">INFO  Clearing .deploy_git folder...</span><br><span class=\"line\">INFO  Copying files from public folder...</span><br><span class=\"line\">INFO  Copying files from extend <span class=\"built_in\">dirs</span>...</span><br><span class=\"line\">…略</span><br><span class=\"line\"> create mode 100644 <span class=\"string\">\"tags/\\347\\211\\210\\346\\234\\254\\346\\216\\247\\345\\210\\266/index.html\"</span></span><br><span class=\"line\">Branch master <span class=\"built_in\">set</span> up to track remote branch master from git@github.com:limqvip/limqvip.github.io.git.</span><br><span class=\"line\">To github.com:limqvip/limqvip.github.io.git</span><br><span class=\"line\">   5867eb8..f25e3d4  HEAD -&gt; master</span><br><span class=\"line\">INFO  Deploy <span class=\"keyword\">done</span>: git</span><br></pre></td></tr></table></figure>\n<p>此时就完成部署了，用浏览器访问 <a href=\"https://limqvip.github.io\">https://limqvip.github.io</a> 即可(第一次发布可能会有 10 分钟的延迟)。</p>\n<p>每次修改完本地的文件后要执行以下命令，重新部署到 github 上：</p>\n<p><code>hexo clean</code><br><code>hexo generate</code><br><code>hexo deploy</code> 或者 <code>hexo d</code></p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p><code>hexo new &quot;postName&quot;</code> #新建文章<br><code>hexo new page &quot;pageName&quot;</code> #新建页面<br><code>hexo generate</code> #生成静态页面至public目录<br><code>hexo server</code> #开启预览访问端口（默认端口 4000, ‘ctrl + c’ 关闭 server）<br><code>hexo deploy</code> #将 .deploy 目录部署到 GitHub<br><code>hexo help</code> # 查看帮助<br><code>hexo version</code> #查看 Hexo 的版本</p>\n<h4 id=\"报错总结\"><a href=\"#报错总结\" class=\"headerlink\" title=\"报错总结\"></a>报错总结</h4><ol>\n<li><p>出现 error deployer not found:git 或者 error deployer not found:github 的错误</p>\n<p>解决办法：执行 npm install hexo-deployer-git –save</p>\n</li>\n<li><p>出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: … 错误</p>\n<p>解决办法：_config.yml 中配置项的英文冒号后面要用空格隔开，再跟内容。</p>\n</li>\n<li><p>中文乱码问题</p>\n<p>解决办法：将文件的内容编码改为 UTF8 格式</p>\n</li>\n<li><p>‘hexo sever’ 能够成功运行，但是 localhost:4000 无法访问</p>\n<p>解决办法：执行 hexo s -p 5000, 改用其他端口启动</p>\n<hr>\n<p>安装步骤很简单，但中间走了很多弯路，因此，主要记录一下那些曾经走过的弯路。</p>\n<ol>\n<li><p>新建项目时报错：<br>npm WARN deprecated <a href=\"mailto:istanbul-lib-hook@1.2.1\" target=\"_blank\" rel=\"noopener\">istanbul-lib-hook@1.2.1</a>: 1.2.0 should have<br>been a major version bumpnpm ERR! Unexpected end of JSON input while parsing near ‘…registry.npm.taobao.o‘ npm ERR! A complete log of this run can be found in:npm ERR!<br>C:\\Users\\Admin\\AppData\\Roaming\\npm-cache_logs\\2018-06-08T14_01_13_067Z-debug.logPackage install failed, see above. 如下所示：</p>\n<p>解决方法：网上查找的一般是说运行：<code>npm cache clean --force</code>，但清除缓存之后，再次新建项目，还是报这个错。然后根据提示信息，取消了淘宝镜像，问题解决。</p>\n<p>取消淘宝镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config delete registry</span><br><span class=\"line\">npm config delete disturl</span><br></pre></td></tr></table></figure>\n<p>运行 <code>npm config edit</code> 可看到 registry 中已经变成了默认镜像。参考：设置和取消淘宝镜像 </p>\n</li>\n<li><p>新建项目时报的警告：npm WARN optional SKIPPING OPTIONAL DEPENDENCY: <a href=\"mailto:fsevents@1.2.4\" target=\"_blank\" rel=\"noopener\">fsevents@1.2.4</a> (node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for <a href=\"mailto:fsevents@1.2.4\" target=\"_blank\" rel=\"noopener\">fsevents@1.2.4</a>: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”win32”,”arch”:”x64”}) ‘git‘ 不是内部或外部命令，也不是可运行的程序或批处理文件。 安装git插件</p>\n</li>\n<li><p>卸载 angular, 因为反反复复卸载重装了好几次 angular, 因此也记录一下卸载过程吧。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall -g angular-cli </span><br><span class=\"line\">npm uninstall -g @angular/cli</span><br><span class=\"line\">npm cache clean</span><br></pre></td></tr></table></figure>\n<p> 在运行 <code>npm cache clean</code>  时报错如下图，根据信息提示改成了 <code>npm cache verify</code>  总结：一定要根据官网教程安装，网上的教程很多很乱，开始就是根据网上教程装的很混乱，   导致报了很多莫名其妙的错。 本文由职坐标整理并发布，希望对同学们有所帮助。了解更多详情请关注 WEB 前端 Node.js 频道！ </p>\n</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>最近几天一直想做一个自己的博客，把学习过的技术看过的文章都整理起来，花了几天的时间<a href=\"limqvip.github.io\">博客</a>初步搭建完成，看了很多大佬文章，但是自己搭建还是遇到很多坑，下面就写写搭建过程。希望对看到的人有帮助。</p>\n<p>本文主要介绍 Windows 7 x64 下 Hexo: 3.7.1 + GitHub 搭建（不同的 Hexo 版本，有的设置可能会有差异）。</p>\n<h2 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h2><h4 id=\"1-安装-git\"><a href=\"#1-安装-git\" class=\"headerlink\" title=\"1. 安装 git\"></a>1. 安装 git</h4><p>可以到 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a> 官网下载相应平台版本进行安装。</p>\n<h4 id=\"2-申请-GitHub-账号\"><a href=\"#2-申请-GitHub-账号\" class=\"headerlink\" title=\"2. 申请 GitHub 账号\"></a>2. 申请 GitHub 账号</h4><p>进入 <a href=\"https://link.jianshu.com/?t=https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub </a> 注册。注册过程略。</p>\n<h4 id=\"3-安装-node-js\"><a href=\"#3-安装-node-js\" class=\"headerlink\" title=\"3. 安装 node.js\"></a>3. 安装 node.js</h4><p>到 <a href=\"https://link.jianshu.com/?t=https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">node.js</a> 官网下载相应平台的最新版本，傻瓜式安装（自带安装 npm）。在 git bash 下执行<code>npm -v</code> 查看是否安装成功 npm。如果安装成功会显示对应版本号。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm -v</span><br><span class=\"line\">5.6.0</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-安装-Hexo\"><a href=\"#4-安装-Hexo\" class=\"headerlink\" title=\"4. 安装 Hexo\"></a>4. 安装 Hexo</h4><p>打开 git bash 或者 cmd, 执行以下命令:<br><code>npm install -g hexo</code></p>\n<h2 id=\"搭建-Hexo\"><a href=\"#搭建-Hexo\" class=\"headerlink\" title=\"搭建 Hexo\"></a>搭建 Hexo</h2><h4 id=\"1-初始化\"><a href=\"#1-初始化\" class=\"headerlink\" title=\"1. 初始化\"></a>1. 初始化</h4><p>执行<code>hexo init myblog</code>创建一个名为 myblog 的博客。该命令会生成一个 myblog 文件夹。进入 myblog 目录 <code>cd myblog</code>, myblog 是博客的主目录。</p>\n<h4 id=\"2-安装必须依赖包\"><a href=\"#2-安装必须依赖包\" class=\"headerlink\" title=\"2. 安装必须依赖包\"></a>2. 安装必须依赖包</h4><p><code>hexo install &lt;name&gt;</code></p>\n<h4 id=\"3-生成静态页面\"><a href=\"#3-生成静态页面\" class=\"headerlink\" title=\"3. 生成静态页面\"></a>3. 生成静态页面</h4><p><code>hexo generate</code> or <code>hexo g</code></p>\n<h4 id=\"4-本地运行\"><a href=\"#4-本地运行\" class=\"headerlink\" title=\"4. 本地运行\"></a>4. 本地运行</h4><p><code>hexo server</code> 或者 <code>hexo s</code></p>\n<p>打开浏览器，在地址栏输入localhost:4000，就可以看到我们搭建好的本地博客了。到此只是搭建好了本地博客。</p>\n<h2 id=\"部署博客到-GitHub-通过域名访问博客。\"><a href=\"#部署博客到-GitHub-通过域名访问博客。\" class=\"headerlink\" title=\"部署博客到 GitHub , 通过域名访问博客。\"></a>部署博客到 GitHub , 通过域名访问博客。</h2><h4 id=\"1-新建repository\"><a href=\"#1-新建repository\" class=\"headerlink\" title=\"1.新建repository\"></a>1.新建repository</h4><p>建立与你用户名对应的仓库，仓库名必须为【 your_username.github.io】,例如我的博客 limqvip.github.io. </p>\n<h4 id=\"2-部署博客\"><a href=\"#2-部署博客\" class=\"headerlink\" title=\"2.部署博客\"></a>2.部署博客</h4><h5 id=\"1-修改配置文件\"><a href=\"#1-修改配置文件\" class=\"headerlink\" title=\"1. 修改配置文件\"></a>1. 修改配置文件</h5><p>进入你的hexo文件夹根目录下，用编辑器打开 _config.yml, 修改 deploy 项，如下（根据你的 GitHub 进行相应更改）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git       <span class=\"comment\">#注意：有的版本type是github</span></span><br><span class=\"line\">  repo: https://github.com/limqvip/limqvip.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-执行-hexo-d-部署到-github-上。\"><a href=\"#2-执行-hexo-d-部署到-github-上。\" class=\"headerlink\" title=\"2. 执行 hexo d 部署到 github 上。\"></a>2. 执行 <code>hexo d</code> 部署到 github 上。</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INFO  Deploying: git</span><br><span class=\"line\">INFO  Clearing .deploy_git folder...</span><br><span class=\"line\">INFO  Copying files from public folder...</span><br><span class=\"line\">INFO  Copying files from extend <span class=\"built_in\">dirs</span>...</span><br><span class=\"line\">…略</span><br><span class=\"line\"> create mode 100644 <span class=\"string\">\"tags/\\347\\211\\210\\346\\234\\254\\346\\216\\247\\345\\210\\266/index.html\"</span></span><br><span class=\"line\">Branch master <span class=\"built_in\">set</span> up to track remote branch master from git@github.com:limqvip/limqvip.github.io.git.</span><br><span class=\"line\">To github.com:limqvip/limqvip.github.io.git</span><br><span class=\"line\">   5867eb8..f25e3d4  HEAD -&gt; master</span><br><span class=\"line\">INFO  Deploy <span class=\"keyword\">done</span>: git</span><br></pre></td></tr></table></figure>\n<p>此时就完成部署了，用浏览器访问 <a href=\"https://limqvip.github.io\">https://limqvip.github.io</a> 即可(第一次发布可能会有 10 分钟的延迟)。</p>\n<p>每次修改完本地的文件后要执行以下命令，重新部署到 github 上：</p>\n<p><code>hexo clean</code><br><code>hexo generate</code><br><code>hexo deploy</code> 或者 <code>hexo d</code></p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p><code>hexo new &quot;postName&quot;</code> #新建文章<br><code>hexo new page &quot;pageName&quot;</code> #新建页面<br><code>hexo generate</code> #生成静态页面至public目录<br><code>hexo server</code> #开启预览访问端口（默认端口 4000, ‘ctrl + c’ 关闭 server）<br><code>hexo deploy</code> #将 .deploy 目录部署到 GitHub<br><code>hexo help</code> # 查看帮助<br><code>hexo version</code> #查看 Hexo 的版本</p>\n<h4 id=\"报错总结\"><a href=\"#报错总结\" class=\"headerlink\" title=\"报错总结\"></a>报错总结</h4><ol>\n<li><p>出现 error deployer not found:git 或者 error deployer not found:github 的错误</p>\n<p>解决办法：执行 npm install hexo-deployer-git –save</p>\n</li>\n<li><p>出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: … 错误</p>\n<p>解决办法：_config.yml 中配置项的英文冒号后面要用空格隔开，再跟内容。</p>\n</li>\n<li><p>中文乱码问题</p>\n<p>解决办法：将文件的内容编码改为 UTF8 格式</p>\n</li>\n<li><p>‘hexo sever’ 能够成功运行，但是 localhost:4000 无法访问</p>\n<p>解决办法：执行 hexo s -p 5000, 改用其他端口启动</p>\n<hr>\n<p>安装步骤很简单，但中间走了很多弯路，因此，主要记录一下那些曾经走过的弯路。</p>\n<ol>\n<li><p>新建项目时报错：<br>npm WARN deprecated <a href=\"mailto:istanbul-lib-hook@1.2.1\" target=\"_blank\" rel=\"noopener\">istanbul-lib-hook@1.2.1</a>: 1.2.0 should have<br>been a major version bumpnpm ERR! Unexpected end of JSON input while parsing near ‘…registry.npm.taobao.o‘ npm ERR! A complete log of this run can be found in:npm ERR!<br>C:\\Users\\Admin\\AppData\\Roaming\\npm-cache_logs\\2018-06-08T14_01_13_067Z-debug.logPackage install failed, see above. 如下所示：</p>\n<p>解决方法：网上查找的一般是说运行：<code>npm cache clean --force</code>，但清除缓存之后，再次新建项目，还是报这个错。然后根据提示信息，取消了淘宝镜像，问题解决。</p>\n<p>取消淘宝镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config delete registry</span><br><span class=\"line\">npm config delete disturl</span><br></pre></td></tr></table></figure>\n<p>运行 <code>npm config edit</code> 可看到 registry 中已经变成了默认镜像。参考：设置和取消淘宝镜像 </p>\n</li>\n<li><p>新建项目时报的警告：npm WARN optional SKIPPING OPTIONAL DEPENDENCY: <a href=\"mailto:fsevents@1.2.4\" target=\"_blank\" rel=\"noopener\">fsevents@1.2.4</a> (node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for <a href=\"mailto:fsevents@1.2.4\" target=\"_blank\" rel=\"noopener\">fsevents@1.2.4</a>: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”win32”,”arch”:”x64”}) ‘git‘ 不是内部或外部命令，也不是可运行的程序或批处理文件。 安装git插件</p>\n</li>\n<li><p>卸载 angular, 因为反反复复卸载重装了好几次 angular, 因此也记录一下卸载过程吧。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall -g angular-cli </span><br><span class=\"line\">npm uninstall -g @angular/cli</span><br><span class=\"line\">npm cache clean</span><br></pre></td></tr></table></figure>\n<p> 在运行 <code>npm cache clean</code>  时报错如下图，根据信息提示改成了 <code>npm cache verify</code>  总结：一定要根据官网教程安装，网上的教程很多很乱，开始就是根据网上教程装的很混乱，   导致报了很多莫名其妙的错。 本文由职坐标整理并发布，希望对同学们有所帮助。了解更多详情请关注 WEB 前端 Node.js 频道！ </p>\n</li>\n</ol>\n</li>\n</ol>\n"},{"title":"test","date":"2018-08-20T02:08:41.000Z","_content":"# 李白\n\n目录（在这里设置锚点）\n\n[01. 早发白帝城](#早发白帝城)\n\n[02. 赠汪伦](#赠汪伦)\n\n[03. 望庐山瀑布](#望庐山瀑布)\n\n## 早发白帝城\n\n​\t朝辞白帝彩云间，\n\n​\t千里江陵一日还。\n\n​\t两岸猿声啼不住，\n\n​\t轻舟已过万重山。\n\n\n\n## 赠汪伦\n\n​\t\n\n​\t李白乘舟将欲行，\n\n​\t忽闻岸上踏歌声。\n\n​\t桃花潭水深千尺，\n\n​\t不及汪伦送我情。\n\n\n\n## 望庐山瀑布\n\n​\t日照香炉生紫烟，\n\t\n​\t遥看瀑布挂前川。\n\t\n​\t飞流直下三千尺，\n\t\n​\t疑是银行落九天。\n\n","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2018-08-20 10:08:41\ntags: test\ncategories: life\n---\n# 李白\n\n目录（在这里设置锚点）\n\n[01. 早发白帝城](#早发白帝城)\n\n[02. 赠汪伦](#赠汪伦)\n\n[03. 望庐山瀑布](#望庐山瀑布)\n\n## 早发白帝城\n\n​\t朝辞白帝彩云间，\n\n​\t千里江陵一日还。\n\n​\t两岸猿声啼不住，\n\n​\t轻舟已过万重山。\n\n\n\n## 赠汪伦\n\n​\t\n\n​\t李白乘舟将欲行，\n\n​\t忽闻岸上踏歌声。\n\n​\t桃花潭水深千尺，\n\n​\t不及汪伦送我情。\n\n\n\n## 望庐山瀑布\n\n​\t日照香炉生紫烟，\n\t\n​\t遥看瀑布挂前川。\n\t\n​\t飞流直下三千尺，\n\t\n​\t疑是银行落九天。\n\n","slug":"test","published":1,"updated":"2018-08-24T12:42:36.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl9jaoak000owswkwdsxrdjw","content":"<h1 id=\"李白\"><a href=\"#李白\" class=\"headerlink\" title=\"李白\"></a>李白</h1><p>目录（在这里设置锚点）</p>\n<p><a href=\"#早发白帝城\">01. 早发白帝城</a></p>\n<p><a href=\"#赠汪伦\">02. 赠汪伦</a></p>\n<p><a href=\"#望庐山瀑布\">03. 望庐山瀑布</a></p>\n<h2 id=\"早发白帝城\"><a href=\"#早发白帝城\" class=\"headerlink\" title=\"早发白帝城\"></a>早发白帝城</h2><p>​    朝辞白帝彩云间，</p>\n<p>​    千里江陵一日还。</p>\n<p>​    两岸猿声啼不住，</p>\n<p>​    轻舟已过万重山。</p>\n<h2 id=\"赠汪伦\"><a href=\"#赠汪伦\" class=\"headerlink\" title=\"赠汪伦\"></a>赠汪伦</h2><p>​    </p>\n<p>​    李白乘舟将欲行，</p>\n<p>​    忽闻岸上踏歌声。</p>\n<p>​    桃花潭水深千尺，</p>\n<p>​    不及汪伦送我情。</p>\n<h2 id=\"望庐山瀑布\"><a href=\"#望庐山瀑布\" class=\"headerlink\" title=\"望庐山瀑布\"></a>望庐山瀑布</h2><p>​    日照香炉生紫烟，</p>\n<p>​    遥看瀑布挂前川。</p>\n<p>​    飞流直下三千尺，</p>\n<p>​    疑是银行落九天。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"李白\"><a href=\"#李白\" class=\"headerlink\" title=\"李白\"></a>李白</h1><p>目录（在这里设置锚点）</p>\n<p><a href=\"#早发白帝城\">01. 早发白帝城</a></p>\n<p><a href=\"#赠汪伦\">02. 赠汪伦</a></p>\n<p><a href=\"#望庐山瀑布\">03. 望庐山瀑布</a></p>\n<h2 id=\"早发白帝城\"><a href=\"#早发白帝城\" class=\"headerlink\" title=\"早发白帝城\"></a>早发白帝城</h2><p>​    朝辞白帝彩云间，</p>\n<p>​    千里江陵一日还。</p>\n<p>​    两岸猿声啼不住，</p>\n<p>​    轻舟已过万重山。</p>\n<h2 id=\"赠汪伦\"><a href=\"#赠汪伦\" class=\"headerlink\" title=\"赠汪伦\"></a>赠汪伦</h2><p>​    </p>\n<p>​    李白乘舟将欲行，</p>\n<p>​    忽闻岸上踏歌声。</p>\n<p>​    桃花潭水深千尺，</p>\n<p>​    不及汪伦送我情。</p>\n<h2 id=\"望庐山瀑布\"><a href=\"#望庐山瀑布\" class=\"headerlink\" title=\"望庐山瀑布\"></a>望庐山瀑布</h2><p>​    日照香炉生紫烟，</p>\n<p>​    遥看瀑布挂前川。</p>\n<p>​    飞流直下三千尺，</p>\n<p>​    疑是银行落九天。</p>\n"},{"title":"Linux Shell  编程基础","date":"2018-08-24T15:13:56.000Z","updated":"2018-08-24T15:26:12.000Z","description":"Linux&#58; 本文介绍 Linux 常用 Shell 命令及简单 Shell 脚本。","_content":"## 第一讲\n\nzh_CN.GB18030\n`cat /etc/shells` 可以查看系统的 shell 种类。`echo $SHELL` 查看当前使用的shell。在当前shell中运行其它shell，例：\n\n```bash\n# /bin/csh ls -lh。 \nchomod u=rwx,g+w,o+r file \nchown -R jack /etc/test/ #把这个目录下所有的子目录和文件的拥有者都改变成jack\n```\n\n把这个目录下所有的子目录和文件的拥有者都改变成jack。\n\n`chown jack.jack /etc/test/ -R`\numask   文件   目录\n0\t6\t7\n1\t5\t6\n2\t4\t5\n3\t3\t4\n4\t2\t3\n5\t1\t2\n6\t0\t1\n7\t0\t0\n/etc/profile 文件中可以设定 umask 值。\n\n`alias ll='ls -alh'`\n\n`cat $HOME/.bashrc` , 别名都放在这个文件中。\n\n命令替换：`ls \\`cat myfile\\` -al`，这个反引号就是1左边的键，把myfile的内容输出到ls的输入。\n后台运行：# nohup tar -czf abc.tar.gz /etc/abc/ &。jobs -l查看后台运行情况。\n模式匹配：ls *.txt -l。\n\n## 第二讲\n\n本地变量在用户现在的shell生命期的脚本中使用，例在当前shell中设置变量，ABC=123，然后exit退出当前shell，再进入系统用set指令(显示本地变量)发现ABC变量无。readonly ABC，把ABC设置成只读变量。只是用readonly指令显示当前shell中有哪些只读变量。\n\n环境变量用于所有用户进程（经常称为子进程）。登录进程称为父进程，shell中执行的用户进程均称为子进程。不像本地变量(只用于现在的shell)环境变量可用于所有子进程，这包括编辑器，脚本和应用。 \n$HOME/.bash_profile(/etc/profile)\nexport，例：export ABC=\"shell program\"，把ABC这个变量变成环境变量。直接输入export也可以查看环境变量有哪些。readonly ABC，把环境变量ABC变成只读的。\n\n变量替换：\n${var name}\t显示实际值到var name\n${var name:+value}\t如果设置了var name，则显示其值value，否则为空\n${var name:?value}\t如果未设置var name，显示用户定义错误信息value\n${var name:-value}\t如果未设置var name，显示其值value，如果设置了var name则显示var name的值\n${var name:=value}\t如果未设置var name，设置其值并显示，如果设置了var name则显示var name的值\nenv\nunset ABC，删除ABC变量，但是用readonly声明的变量是不能被unset的。\n\n位置变量：先看下面的脚本\n\n```bash\n#!/bin/bash\n#parms\necho \"program name is $0\"\necho \"1 parm is $1\"\necho \"2 parm is $2\"\necho \"3 parm is $3\"\necho \"4 parm is $4\"\n```\n\n然后运行这个脚本：./parms a b c d，就会显示结果,$0表示脚本名称，$1-9分别表示位置变量名，在运行脚本时代入脚本中。\n再例如：\n\n```bash\n#!/bin/bash\n#parm.sh\nfind /home/chinaitlab/shell -name $1 -print\n```\n\n然后运行这个脚本: `./parm.sh abc.txt` 。\n\n标准变量：bash 默认建立了一些标准环境变量，可在 /etc/profile 中定义。\n EXINIT，运行 vi 时初始化设置一些参数\nHOME\nIFS\nLOGNAME\nMAIL\nMAILCHECK\nMAILPATH\nPATH\nPS1\nPS2\nSHELL\nTERMINFO\nTERM\nTZ\nEDITOR\nPWD\nMANPATH\n\n特殊变量：\n$#(传递到脚本的参数个数)\n$*(以一个单字符串显示所有向脚本传递的参数。与位置变量不同，此选项参数可超过9个)\n$$(脚本运行的当前进程ID号)\n$!(后台运行的最后一个进程的进程ID号)\n$@(与$#相同，但是使用时加引号，并在引号中返回每个参数)\n$-(显示shell使用的当前选项，与set命令功能相同)\n$?(显示最后命令的推出状态。0表示没有错误，其它任何值表明有错误)\n\n影响变量的命令：\ndeclare\n-设置或显示变量\n-f 只显示函数名\n-r 创建只读变量(declare和typeset)\n-x 创建转出变量\n-i 创建整数变量\n- 使用+替代-，可以颠倒选项的含义\n  export\n  -用于创建传给予shell的变量(环境变量)\n- --表明选项结束，所有后续参数都是实参\n- -f表明在\"名-值\"对中的名字是函数名\n- -n把全局变量转换成局部变量，换句话说，命令的变量不再传给shell\n- -p显示全局变量列表\n  unset\n- 用于取消变量的定义\n- --表明选项结束\n- -f删除只读变量，但不能取消从shell环境中删除指定的变量和函数如：PATH，PS1，PS2，PPID，UID，EUID等的设置。\n  shift[n]\n- 用于移动位置变量，调整位置变量，使$3的值赋予$2,$2的值赋予$1。\n  typeset\n  -用于显示或设置变量\n  -是declare的同义词\n\n引号：\n使用双引号可以引用除字符$,`(反引号),\\外的任意字符或字符串。例：echo -e \"ert, $SHELL'\\n* china`echo itlab`\"。\n单引号会忽略其中所有的特殊含义的字符，例：echo 'ert, $SHELL * china`echo itlab`'。\n反引号用于设置系统命令的输出到变量，shell将反引号中的内容作为一个系统命令，并执行其内容。\n反斜杠：如果一个字符有特殊含义，反斜杠防止shell误解其含义，即屏蔽其特殊含义，这些字符有特殊含义： $,*,+,&,\",|,?,^例：echo *，显示当前目录下的所有文件名，echo \\*，则显示*。\n\n运算符类型：\n按位运算符\t~,<<,>>,&,|,^\n运算符\t\t说明\n~op1\t\t反运算符，把op1中所有的二进制为1变为0，0变为1\nop1<<op2\t左移运算符，把op1中的二进制位向左移动op2位，忽略最左端移出的各位，最右端的各位补0值，每做一次按位左移就有实现op1乘以2。\nop1>>op2\t右移运算符，把op1中的二进制位向右移动op2位，忽略最右端移出的各位，最左端的各位补0值，每做一次按位右移就有实现op1除以2。\nop1&op2\t\t与比较运算符，op1和op2对应位，对于每个二进制位来说，如果二者该位都是1，则结果为1，否则为0。\nop1^op2\t\t异或运算符，op1和op2对应位，对于每个二进制位来说，如果二者该位互补，则结果为1否则为0。\nop1|op2\t\t或运算符。\n$[]表示形式告诉shell对方括号中的表达式求值，例：echo $[2+8]，echo $[2>>8]，echo $[2<<4]，echo $[2^4]，echo $[~3]。\n逻辑运算符：&&,||,>,==,<,!=例：echo $[2&&2]，echo $[1||0]。\n赋值运算符：=,+=,-=,*=,/=,%=,&=,^=,|=,<<=,>>=\nlet $count=$count+$change\nlet $count+=$change\n$[]可以接受不同基数的数字\n- [ base#n ] n表示基数从2到36的任何基数，例：echo $[10#8+1]，8进制的10加上1，结果为9。\n\n## 第三讲 Shell 输入与输出\n\necho [option] string\n\n- e解析转义字符\n- -n回车不换行，linux系统默认回车换行，例：echo \"hello\"和echo -n \"hello\"的区别。\n- string中的转义符(\\c,\\f,\\t,\\n)，\\c表示回车不换行，\\f表示禁止，\\t表示跳格(tab)，\\n表示回车换行\n  例：\n  ```bash\n  #!/bin/bash\n  #echod\n  echo -e \"This echo's 3 new lines\\n\\n\\n\"\n  echo \"OK\"\n  echo\n  echo \"This echo's 3 new lines\\n\\n\\n\"\n  echo \"The log files have all been done\">mylogfile.txt\n  ```\n\nread语句可以从键盘或文件的某一行文本中读入信息，并将其赋给一个变量。\nread var1 var2...\n-如果只指定了一个变量，那么read将会把所有的输入赋给该变量，直至遇到第一个文件结束符或回车；如果给出了多个变量，他们按顺序分别被赋予不同的变量。shell将用空格作为变量之间的分隔符。\n例：\n#!/bin/bash\n#readname\necho -n \"First name:\"\nread firstname\necho -n \"Last name:\"\nread lastname\necho -e \"Your First Name is :${firstname}\\n\"\necho -e \"Your Last Name is :${lastname}\\n\"\n\ncat可显示文件内容，创建文件还可以显示控制字符。\ncat [options] file1 file2...\n- -v显示控制字符\n  使用cat命令时要注意，它不会在文件分页符处停下来，它会一下显示完整个文件，如果希望每次显示一页，可以使用more。例：cat file1 file2 file3，会在屏幕上同时显示三个文件的内容，cat file1 file2 file3>file123，会把这三个文件的内容合并到一个文件file123中，cat -v dos.txt，显示这个windows下生成的文件，并显示控制字符(这些控制字符是在windows生成这个文件时加入的)。\n  管道举例：df -k|awk '{print $1}'|grep -v \"Filesystem\"。\n  tee命令把输出的一个副本输送到标准输出，另一个副本拷贝到相应的文件中。\n  tee -a files\n- 如果希望在看到输出的同时，也将其存入一个文件，那么这个命令再合适不过了，一般用于管道之后，-a参数表示追加写入files中，如果没有-a参数，则覆盖写入这个文件中。例：who | tee -a who.out。\n\n标准输入输出和错误\n在shell中执行命令时，每个进程都和三个打开的文件相联系，并使用文件描述符来引用这些文件，由于文件描述符不容易记忆，shell同时给出了相应的文件名。\n文件\t\t\t文件描述符\n输入文件-标准输入\t0(缺省是键盘，也可以是文件或其它命令的输出)\n输出文件-标准输出\t1(缺省是屏幕，也可以是文件)\n错误输出文件-标准错误\t2(缺省是屏幕，也可以是文件)\n系统中实际上有12个文件描述符，可以任意使用文件描述符3到9。\n\n文件重定向\ncommand > file\t\t把标准输出重定向到一个新文件中\ncommand >> file\t\t把标准输出重定向到一个文件中(追加)\ncommand 1 > file\t把标准输出重定向到一个文件中\ncommand > file 2>&1\t把标准输出和标准错误一起重定向到一个文件中\ncommand 2 > file\t把标准错误重定向到一个文件中\ncommand 2>> file\t把标准输出重定向到一个文件中(追加)\ncommand >> file 2>&1\t把标准输出和标准错误一起重定向到一个文件中(追加)\ncommand < file > file2\tcommand命令以file作为标准输入，file2文件作为标准输出\ncommand < file\t\tcommand命令以file作为输入\ncommand << dclimiter\t从标准输入中读入，直至遇到dclimiter分界符\ncommand < &m\t\t把文件描述符m作为标准输入\ncommand > &m\t\t把标准输出重定向到文件描述符m中\ncommand < &-\t\t关闭标准输入\n例：>nullfile，创建一个新的空文件。sort < file，把file作为输入源，排序然后输出到屏幕上。sort < name.txt > name.out。cat account_new.txt account_old.txt 1>accounts.out 2>accounts.err，account_new.txt存在，account_old.txt不存在，那么accounts.out将包含account_new.txt的内容，不会包含account_old.txt的内容，account_old.txt不存在的错误信息会写入accounts.err中。\n合并标准输出和标准错误的时候，切忌shell是从左至右分析相应的命令，例：grep \"standard\" standard.txt > grep.out 2>&1。\n\nexec命令可以用来替代当前shell；换句话说，并没有启动子shell，使用这一命令时任何现有环境都会被清除，并重新启动一个shell。\nexec command\n-其中的command通常是一个shell脚本。\n对文件描述符进行操作的时候(也只有在这时)，它不会覆盖你当前的shell。\n\n文件描述符：\n3-9文件描述符\nexec与文件描述符的结合\n例：\n#!/bin/bash\n#file_desc\nexec 3<&0 0<name.txt\nread line1\nread line2\nexec 0<&3\necho $line1\necho $line2\n\n## 第四讲 控制流结构\n```bash\nif 条件1\nthen\n\t命令1\nelif 条件2\nthen\n\t命令2\nelse\n\t命令3\nfi\n```\n例：\n\n```bash\n#!/bin/bash\n#if test\nif [ \"10\" -lt \"12\" ]\nthen\n   echo \"yes,10 is less than 12\"\nfi\n```\n\n可以使用man test获得条件的帮助。\n再例：\n\n```bash\n#!/bin/bash\n#iftest2\necho -n \"Enter your name:\"\nread NAME\nif [ \"$NAME\" == \"\" ];then\n\techo \"You did not enter your name\"\nfi\n```\n\n再例：\n\n```bash\n#!/bin/bash\n#ifcp\nif cp myfile.bak myfile;then\necho \"good copy\"\nelse echo \"basename $0:error could not copy files\" >&2\nfi\n```\n\n再例：\n\n```bash\n#!/bin/bash\n#ifelif\necho -n \"Enter your name:\"\nread NAME\nif [ -z $NAME ] || [ \"$NAME\" = \"\" ];then\n\techo \"you do not enter a name.\"\nelif [ \"$NAME\" = \"root\" ];then\n\techo \"hello root\"\nelif [ \"$NAME\" = \"chinaitlab\" ];then\n\techo \"hello chinaitlab\"\nelse\n\techo \"you are not root or chinaitlab,but hi,$NAME\"\nfi\n```\n\ncase语句格式: \n\n```bash\ncase 值 in\n模式1)\n\t命令1\n\t;;\n模式2)\n\t命令2\n\t;;\nesac\n```\n\ncase取值后面必须为单词in，每一个模式必须以右括号结束。取值可以为变量或常数，匹配发现取值符合某一模式后，其间所有命令开始执行直至;;。模式匹配符*表示任意字符,?表示任意单字符，[..]表示类或范围中任意字符。\n例：\n\n```bash\n#!/bin/bash\n#case select \necho -n \"Enter a number from 1 to 3:\"\nread ANS\ncase $ANS in\n1)\n\techo \"you select 1\"\n\t;;\n2)\n\techo \"you select 2\"\n\t;;\n3)\n\techo \"you select 3\"\n\t;;\nY|y)\n\techo \"you select $ANS\"\n\t;;\n*)\n\techo \"basename $0:This is not between 1 and 3\" >&2\n\texit;\n\t;;\nesac\n```\n\nfor循环格式：\n\n```bash\nfor 变量名 in 列表\ndo\n\t命令1\n\t命令2\ndone\n```\n\n当变量值在列表里，for循环即执行一次所有命令，使用变量名访问列表中取值。命令可为任何有效的shell命令和语句。变量名为任何单词。In列表用法是可选的，如果不用它，for循环使用命令行的位置参数。in列表可以包含替换，字符串和文件名。\n例：\n\n```bash\n#!/bin/bash\n#forlist1\nfor loop in 1 2 3 4 5\ndo\n\techo $loop\ndone\n```\n\n再例：\n\n```bash \n#!/bin/bash\n#forlist2\nfor loop in \"orange red blue grey\"\ndo\n  echo $loop\ndone\n```\n\n再例：\n```bash\n#!/bin/bash\n#forlist2\nfor loop in `cat myfile`\ndo\n  echo $loop\ndone\nuntil循环格式：\nuntil 条件\ndo\n  命令1\n  命令2\n  ...\ndone\n```\n注：条件可为任意测试条件，测试发生在循环末尾，因此循环至少执行一次。\n例：\n```bash\n#!/bin/bash\n#until_mon\n#监控分区\nPart=\"/backup\"\n#得到磁盘使用的百分比\nLOOK_OUT=`df|grep \"$Part\"|awk '{print $5}'|sed 's/%//g'`\necho $LOOK_OUT\nuntil [\"$LOOK_OUT\" gt \"90\"]\ndo\n  echo \"FileSystem /backup is nearly full\" |mail root\n  LOOK_OUT=`df|grep \"$Part\"|awk '{print $5}'|sed 's/%//g'`\n  sleep 3600\ndone\n```\n然后# nohup ./dfuntil &让这个程序在后台运行，一小时检测一次看这个分区的空间占用率是否大于90%。\n\nwhile格式：\n```bash\nwhile 命令\ndo\n  命令1\n  命令2\n  ...\ndone\n```\n注：在while和do之间虽然通常只使用一个命令，但可以放几个命令，命令通常用作测试条件。\n例：\n```bash\n#!/bin/bash\n#whileread\necho \"按住<ctrl>+D退出输入。\"\nwhile echo -n \"输入你最喜欢的电影：\";read FILM\ndo\n\techo \"Yeah.${FILM}是一部好电影！\"\ndone\n```\n再例：\n```bash\n#!/bin/bash\n#whileread\nwhile read LINE\ndo\n\techo $LINE\ndone <names.txt\n```\n把names.txt这个文件的内容按每行输出到屏幕。\nbreak与continue：\nbreak[n]\n-退出循环，如果是在一个嵌入循环里，可以指定n来跳出的循环个数。\n例：\n```bash\n#!/bin/bash\n#breakout\nwhile :\ndo\n  echo -n \"Enter any number[1..5]:\"\n  read ANS\n  case $ANS in\n  1|2|3|4|5)\n\techo \"you enter a number between 1 and 5.\"\n\t;;\n  *)\n\techo \"wrong number,bye.\"\n\tbreak\n\t;;\n  esac\ndone\n```\n再例：\n```bash\n#!/bin/bash\n#breakout\nwhile :\ndo\n  echo -n \"Enter any number[1..5]:\"\n  read ANS\n  case $ANS in\n  1|2|3|4|5)\n\techo \"you enter a number between 1 and 5.\"\n\t;;\n  *)\n\techo -n \"wrong number,continue(y/n)?:\"\n\tread IS_CONTINUE\n\tcase $IS_CONTINUE in\n\t\ty|yes|Y|YES)\n\t\t\tcontinue\n\t\t\t;;\n\t\t*)\n\t\t\tbreak\n\t\t\t;;\n\tesac\n  esac\ndone\n```\n## 第五讲\n\n正则表达式：一种用来描述文本模式的特殊语法，由普通字符(a到z)以及特殊字符(称为元字符，如/,*,?等)\n匹配的字符串\n文本过滤工具在某种模式下都支持正则表达式\n基本元字符集及含义\n字符\t含义\n^\t只匹配行首\n$\t只匹配行尾\n\n*\t匹配0个或多个此单字符\n  ]\t只匹配[]内字符，可以是一个单字符，也可以是字符序列。可以使用-表示[]内字符序列范围，如用[1-5]代替[12345]。\n  \t只用来屏蔽一个元字符的特殊含义\n  \t只匹配任意单字符\n  attern\\{n\\}\t只用来匹配前面pattern出现次数。n为次数\n  attern\\{n,\\}\t含义同上，但次数最少为n\n  attern\\{n,m\\}\t含义同上，但pattern出现次数在n与m之间。\n    例：\n    ^d\n  rwxrwxrw-\t匹配\n  rw-rw-rw\t不匹配\n    ^...1\n  482XC56D\t不匹配\n  442XW7134\t不匹配\n  451ABC123\t匹配\n  D11XC9871\t匹配\n    trouble$--匹配以单词trouble结尾的所有字符\n    ^$--匹配空行\n    ^.$--匹配包含一个字符的行\n    用\\屏蔽一个特殊字符，特殊字符有\",',||,^,*,.,+等，\\*\\.pas正则表达式中匹配以*.pas结尾的所有字符或文件。\n\n逗号将括弧内要匹配的不同字符串分开，用-表示一个字符串范围\n[0123456789]或[0-9]：任意一个数字\n[a-z]：任意小写字母\n[A-Z a-z]：任意大小写字母\n[A-Z a-z 0-9]：任意字母或数字\n[S,s]：匹配大小写s\n\nA\\{2\\}B：A出现2次：AAB\nA\\{4,\\}B：A最少出现4次，AAAAB，AAAAAB...\nA\\{2,4\\}B：A出现次数范围2-4次，AAB，AAAB，AAAAB\n[0-9]\\{3\\}\\.[0-9]\\{3\\}\\.[0-9]\\{3\\}\\.[0-9]\\{3\\}：匹配IP地址\n\nfind命令形式\nfind pathname -option [-print -exec -ok]\n-pathname查找路径，例如用.来表示当前目录，用/表示系统根目录。-print，find命令将匹配的文件输出到标准输出。-exec，find命令对匹配的文件执行该参数所给出的shell命令，相应命令的形式为'command'{} \\;'，注意{}和\\；之间的空格。-ok和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前都会给出提示，让用户来确定是否执行。\nfind命令的一般形式：\n-name按照文件名找文件\n-perm按照文件权限来找文件\n-user按照文件属主来找文件\n-group按照文件所属的组来找文件\n-mtime -n +n按照文件的更改时间来查找文件。-n表示文件更改时间距现在n天以内，+n表示文件更改时间距现在n天以前。find命令还有-atime和-ctime选项，但他们都和-mtime选项相似\n-size n[c]查找文件长度为n块的文件，带有c时表示文件长度以字节计。\n-nogroup查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。\n-nouser查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。\n-newer file1 ! -newer file2查找更改时间比文件file1新但比文件file2旧的文件。\n-type查找某一类的文件，比如：b块设备文件，d目录，c字符设备文件，p管道文件，l符号链接文件，f普通文件。\n\n举例：\n-name：可以使用某种文件名模式来匹配文件，记住要用引号将文件名模式引起来，例：\nfind -name \"*.txt\" -print，没有路径表示查找当前路径。find ./ -name \"*.txt\" -print。find ./ -name \"[A-Z]*\" -print，find /etc -name \"host*\" -print。\n-perm：find . -perm 755 -print。\n-user和-nouser：find `pwd` -user root -print。find `pwd` -nouser -print。\n-group和-nogroup：find ./ -group itlab -print，find / -nogroup -print。\n-mtime：find /var -mtime -5 -print，find /var -mtime +3 -print。\n-newer：find `pwd` -newer \"myfile\" ! -newer \"myfile123\" -print。\n-type：find /etc -type d -print。\n-size：find . -size +1000000c -print查找文件大小大于1000000字节的文件，find . -size +10 -print，查找大小大于10块的文件。\n-depth：使用find命令时，可能希望先匹配所有的文件，再在子目录中查找，find / -name \"con.file\" -depth -print。\n-exec或ok：find . -type f -exec ls -l {} \\;\nfind . -name \"*.log\" -mtime +5 -ok rm{} \\;\n-xargs:在使用find命令的-exec选项处理匹配到的文件时，find命令将所有匹配到的文件一起传递给exec，不幸的是有些系统对能够传递给exec的命令长度有限制，这样在find命令运行几分钟后就会出现溢出错误。错误信息通常是“参数列太长”或“参数列溢出”，这就是xargs命令的用处所在，特别是与find命令一起使用。exec会发起多个进程，而xargs不会多个，只有一个。例：find ./ -perm -7 -print | xargs chmod o-w，\nfind ./ -type f -print | xargs file。\n\ngrep介绍\n对文本文件进行模式查找，grep有三种变形\n-Grep：标准grep命令\n-Egrep：扩展grep，支持基本及扩展的正则表达式\n-Fgrep：快速grep\ngrep一般格式为：\n-grep[选项]基本正则表达式[文件]\n-字符串参数(基本正则表达式)最好采用双引号，一是以防被误解为shell命令，二是可以用来查找多个单词组成的字符串。\ngrep命令选项：\n-c：只输出匹配行的计数\n-i：不区分大小写(只适用于单字符)\n-h：查询多文件时不显示文件名\n-H：显示文件名\n-l：查询多文件时只输出包含匹配字符的文件名\n-n：显示匹配行及行号\n-s：不显示不存在或无匹配文本的错误信息\n-v：显示不包含匹配文本的所有行\n例：\ngrep \"jenny\" *.txt\ngrep \"sort it\" *\ngrep -c \"2004\" myfile\ngrep -n \"2004\" myfile\ngrep -i \"Jul\" myfile\ngrep -v \"2004:22\" myfile\ngrep \"2004:22:5[0-9]\" myfile\ngrep \"^[^210]\" myfile，查找行首不是2或1或0的行。\ngrep \"[5-8][6-9][0-2]\" myfile\ngrep \"4\\{2\\}\" myfile\ngrep \"4\\{2,\\}\" myfile\ngrep \"4\\{2,4\\}\" myfile\ngrep \"^$\" myfile\ngrep \"\\?\" myfile\ngrep \"^d\" myfile\ngrep \"^[^d]\" myfile\n\ngrep命令类名类等价的正则表达式\n[[:upper:]][A-Z]\n[[:alnum:]][0-9a-zA-Z]\n[[:lower:]][a-z]\n[[:space:]]\t空格或tab键\n[[:digit:]][0-9]\n[[:alpha:]][a-zA-Z]\n例：grep \"5[[:digit:]][[:digit:]]\" myfile\n\nawk介绍\n可从文件或字符串中基于指定规则浏览和抽取信息，是一种自解释的编程语言，三种方式调用awk：\n-命令行方式：\n\tawk [-F field-spearator]'command' input-files，field-spearator默认是空格。\n-awk脚本\n\t所有awk命令插入一个文件，并使awk程序可执行，然后用awk命令解释器作为脚本的首行，以便通过键入脚本名称来调用它。\n-awk命令插入一个单独文件\n\tawk -f awk-script-file input-files\n\nawk脚本由各种操作和模式组成\n模式和动作：\n    -模式部分决定动作语句何时出发及出发事件。(BEGIN,END)\n    -动作对数据进行处理，放在大括号{}内指明。(input)\n分隔符，域和记录：\n    -awk执行时，其浏览域标记为$1,$2...$n。这种方法称为域标识。$0为所有域，即这条记录。\n    -注意执行时不要混淆符号$和shell提示符$，他们是不同的。\n例：awk '{print $0}' score.txt | tee score.out。\nawk -F . '{print $0}' score.txt |tee score.out。\nawk '{print $1 \"\\t\"$4}' score.txt。\nawk 'BEGIN {print \"Name Maths\\n------\"} {print $1\"\\t\"$4} END {print \"end-of-report\"}' score.txt。\n\nawk中的特殊元字符：+和？，+表示匹配任意字符，？表示匹配单个字符。\n匹配操作符：~(表示匹配),!~(表示不匹配)，要匹配的内容放在两个\\之间。\ncat score.txt|awk '$0 ~/218.79.131.96/'。\nawk '$0 !~/218.79.131.96/' score.txt。\nawk '{if($1==\"218.79.131.96\") print $0}' score.txt。\n\nsed介绍\nsed不与初始化文件打交道，它操作的只是一个拷贝，然后所有的改动如果没有重定向到一个文件，将输出到屏幕。sed是一种重要的文本过滤工具，使用一行命令或使用管道与grep与awk相结合。非交互性文本流编辑。调用sed有三种方式：\n-使用sed命令行格式\n   sed [选项] sed命令 输入文件\n-使用sed脚本文件，格式为：\n   sed [选贤] -f sed脚本文件 输入文件\n-sed脚本文件[选项] 输入文件\n-不管是使用shell命令行方式或脚本文件方式，如果没有指定输入文件，sed从标准输入中接受输入，一般是键盘或重定向结果。\nsed命令选项：\n-n不打印\n-c下一命令是编辑命令\n-f如果正在调用sed脚本文件\n\nsed在文件中查找文本的方式\n-使用行号，可以是一个简单数字或是一个行号范围\n-使用正则表达式\nx\t\t\tx为一行号\nx,y\t\t\t表示行号范围从x到y\n/pattern/\t\t查询包含模式的行\n/pattern/pattern/\t查询包含两个模式的行\npattern/,x\t\t在给定的行号上查询包含模式的行\nx,/pattern/\t\t通过行号和模式查询匹配行\nx,y!\t\t\t查询不包含指定行号x和y的行 \n基本sed编辑命令：\np\t打印匹配行\n=\t显示文件行号\na\\\t在定位行号后附加新文本信息\ni\\\t在定位行号后插入新文本信息\nd\t删除定位行\nc\\\t用新文本替换定位文本\ns\t使用替换模式替换相应模式\nr\t从另一个文件中读文本\nw\t写文本到一个文件\nq\t第一个模式匹配完成后退出或立即退出\nl\t显示与八进制ASCII代码等价的控制字符\n{}\t在定位行执行的命令组\nn\t从另一个文件中读文本下一行，并附加在下一行\ng\t将模式2粘贴到/pattern n/\ny\t传送字符\n\n例：\nsed '2p' score.txt，单引号中的是命令，打印score.txt这个文件的第二行，这里全部打印，因为没有加-n，这样匹配到的和没匹配到的都打印。\nsed -n '2p' score.txt，-n表示不打印没匹配到的，只打印第二行。\nsed -n '1,4p' score.txt，打印1~4行。\nsed -n '/los/p' myfile.txt，打印包含los字符的所有行。\nsed -n '4,/los/p' myfile.txt，从第四行开始匹配到第一个los结束，如果los在第六行，那么从第四行到第六行都打印，如果下面还有los也不打印了。\nsed -n '/^$/=' myfile.txt，显示空行的行号。\nsed -n -e '/^$/p' -e '/^$/=' myfile，打印空白行打印行号。\nsed -n '/chinaitlab/a\\shenzhen' myfile.txt。\nsed -n '/chinaitlab/i\\shenzhen' myfile.txt。\nsed -n '/chinaitlab/c\\chinaitlab shenzhen' myfile.txt。\nsed '1,2d' myfile.txt，把第一第二行删除。\nsed 's/chinaitlab/chinaitlab shenzhen/g' myfile.txt，当有多个chinaitlab时，加g表示全部替换。\nsed -n 's/chinaitlab/& hello/p' myfile.txt， 在匹配到的所有的chinaitlab的后面加 hello。\nsed -n 's/chinaitlab/hello &/p' myfile.txt，在匹配到的所有的chinaitlab的前面加 hello。\nsed 'lr ctrl.txt' myfile.txt。\nsed 'china/q' myfile.txt。\nsed -n '/china/l' myfile.txt。\n\n合并与分割\nsort[options] files\n-许多不同的域按不同的列顺序分类\n-c测试文件是否已经分类\n-m合并两个分类文件\n-u删除所有复制行\n-o存储sort结果的输出文件名\n-t域分隔符：用非空格或tab键分割域\n+n n为域号，使用此域号开始分类\nn指定分类是域上的数字分类项\n-r比较求逆\n\n例：\nsort -c myfile，检查这个文件是否已经排序。\nsort -u myfile，\n\n\n\n\n\n## 第六讲shell函数\n\n定义函数格式：\n函数名()\n{\n命令1\n...\n}\nfunction 函数名()\n{\n...\n}\n函数可以放在同一个文件中作为一段代码，也可以放在只包含函数的单独文件中。\n#!/bin/bash\n#hellofun\nfunction hello()\n{\necho \"hello,today is `date`\"\nreturn 0\n}\necho \"now going to the function hello\"\nhello\necho \"back from the function\"\n\n参数传递：向函数传递参数就像在脚本中使用位置变量$1,$2...$9\n例：\n#!/bin/bash\n#func\nfunction hello()\n{\necho \"Hello,$1 today is `date`\"\n}\necho \"now going to the function hello\"\nhello chinaitlab\necho \"back from the function\"\n\n函数文件\n#!/bin/bash\n#func\n#source function\n. hellofun\necho \"now going to the function hello\"\nhello\necho \"back from the function\"\n\n#!/bin/bash\n#hellofun\nfunction hello()\n{\necho \"Hello, today is `date`\"\nreturn 0\n}\n\n检查载入函数和删除函数\n察看载入函数set\n删除函数unset\n例：\n#!/bin/bash\n#func\n#source function\n. hellofun\nset #察看加载的函数和变量信息\necho \"now going to the function hello\"\nunset hello#删除这个函数\nhello\necho \"back from the function\"\n\n函数返回值：\n#!/bin/bash\n#hellofun\nfunction hello()\n{\necho \"Hello, today is `date`\"\nreturn 0\n}\n#!/bin/bash\n#func\necho \"now going to the function hello\"\nhello\necho $?\necho \"back from the function\"\n\n## 第七讲脚本参数传递\n\nshift命令,每次讲参数位置向左偏移n位。\n#!/bin/bash\n#opt2\nusage()\n{\necho \"usage:`basename $0` filenames\"\n}\ntotalline=0\nif[ $# -lt 2 ];then\n\tusage\n\texit#退出系统，下面的代码不执行\nfi\nwhile [ $# -ne 0]#参数个数不等于0\ndo\nline=`cat $1|wc -l`\necho \"$1:${line}\"\ntotalline=$[$totalline+$line]\nshift#调用shift时$#(参数个数)也跟着减1\ndone\necho \"-----------\"\necho \"total:${totalline}\"\n\ngetopts获得多个命令行参数\n#!/bin/bash\nALL=false\nHELP=false\nFILE=false\nVERBOSE=false\nwhile getopts ahfvc OPTION\ndo\n\tcase $OPTION in\n\ta)\n\t\tALL=true\n\t\techo \"ALL IS $ALL\"\n\t\t;;\n\th)\n\t\tHELP=true\n\t\techo \"HELP is $HELP\"\n\t\t;;\n\tf)\n\t\tFILE=true\n\t\techo \"FILE is $FILE\"\n\t\t;;\n\tv)\n\t\tVERBOSE=true\n\t\techo \"VERBOSE is $VERBOSE\"\n\t\t;;\n\tc)\n\t\techo \"c value is $c\"\n\t\t;;\n\t\\?)\n\t\techo \"`basename $0` -[a h f v] -[c value] file \"\n\t\t;;\n\tesac\ndone\n\n\n\n---\n\n#### 常用命令\n\n#### linux使用备忘\n\n查看linux文件目录的大小和文件夹包含的文件数：\n\ndu -sh xmldb/ #查看xmldb文件大小\ndu -sm * | sort -n  #统计当前目录大小 并安大小 排序\ndu -sk * | sort -n \n\n#### 压缩文件：\n\ntar -zcvf  a.tgz aa   #压缩aa文件为a.tgz\ntar -zxvf a.tgz #解压\n\n#### 查找文件：\n\nfind / -name filename #在所有目录下查找filename\nfind /opt -name file* #在/opt下查找以find开头的文件\nfind / -amin -10 # 查找在系统中最后10分钟访问的文件\nfind / -atime -2 # 查找在系统中最后48小时访问的文件\nfind / -empty # 查找在系统中为空的文件或者文件夹\nfind / -group cat # 查找在系统中属于 groupcat的文件\nfind / -mmin -5 # 查找在系统中最后5分钟里修改过的文件\nfind / -mtime -1 #查找在系统中最后24小时里修改过的文件\nfind / -nouser #查找在系统中属于作废用户的文件\nfind / -user fred #查找在系统中属于FRED这个用户的文件\n\n---\n\n小红帽企业版的telnet为krb5-telnet，依附于xinetd服务，将/etc/xinetd.d/krb5-telnet\n的disable设置为no，重启xinetd即可启用telnet服务，默认是不允许root用户登录。允许普通的telnet登陆，但也可使用kerberos5验证 \n\n个人版RedHat Linux的telnet也是同样的道理，也是依附于xinetd服务，配置文件是/etc/xinetd.d/telnet。提供telnet服务，使用未加密的用户/密码组进行验证\n\n用passwd修改用户密码，常常提示“BAD PASSWORD: it is based on a dictionary word”，实际上\nlinux要求的密码的验证机制是在/etc/login.defs中规定最小密码字符数。还要受到/etc/pam.d/passwd的限定，但是在root用户下怎么设置都可以，可以不受验证机制的约束，即便出来“BAD PASSWORD: it is based on a dictionary word”也可以修改成功。\n\n但是普通用户修改自己的密码，如果不符合密码验证机制的话就修改不成功，会有各种报错，“BAD PASSWORD: it's WAY too short”，这是报密码太短，不符合/etc/login.defs的设置，“BAD PASSWORD: it is based on your username”，这是密码与帐号不能同名，这是不符合/etc/pam.d/passwd的设置。“BAD PASSWORD: it is based on a dictionary word”这是因为出现了字典里的字符串，如果你英文与数字组合使用，就不会报错。\n\n----\n\n### 目录\n\n#### 1.ln 命令详解\n\n`ln -s  源文件 目标文件`     -s 是 symbolic的意思。 \n例：` ln  -s  /lib/lsb   /usr/lj`\n即：在usr目录下建立指向/lib/lsb目录的lj文件。\n\n`ln -s /opt/oracle /opt/app/oracle`\n建立链接`/opt/oracle` 链接目录 `/opt/app/oracle`\n比如在/data目录下建立一个a目录的连接b\n`ln -s /data/a /data/b`\n例如：\n`ln -s db_1 /opt/oracle/product/10.2.0/db_1`\n这条命令式在 /opt/oracle/product/10.2.0/db_1 下建立一个 db_1 的链接。\n现在 /opt/oracle/product/10.2.0/db_1 下应该会还有个db_1\n\nln 是 Linux 中一个非常重要命令。它的功能是为某一个文件在另外一个位置建立一个同步的链接，这个命令最常用的参数是-s,具体用法是： \n\nln -s  源文件 目标文件    -s 是 symbolic的意思。 \n例： `ln  -s  /lib/lsb   /usr/lj`\n即：在 usr 目录下建立指向 /lib/lsb 目录的lj文件。\n\n备份命令\n`tar -cvf oraclehome.tar /opt/oracle/product/10.2.0/db_1` \n备份一下 \n解压命令\n`tar -xvfz /opt/oracle/product/allbackup.tar.gz /opt/oracle/product/10.2.0`\n\n当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：`ln -s /bin/less /usr/local/bin/less-s 是代号（symbolic）的意思。这里有两点要注意：第一，ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化；第二，ln的链接又软链接和硬链接两种，软链接就是ln -s ** **,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **,没有参数-s, 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。软链接是可以跨分区的，但是硬链接只能在同一分区内。如果你用ls察看一个目录时，发现有的文件后面有一个@的符号，那就是一个用ln命令生成的文件，用ls -l命令去察看，就可以看到显示的link的路径了当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：`ln -s /bin/less /usr/local/bin/less `\n注意： \n\n第一，ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化； \n\n第二，ln的链接又软链接和硬链接两种，软链接就是ln -s ** **,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **,没有参数-s, 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。软链接是可以跨分区的，但是硬链接只能在同一分区内。\n第三：目录不能建立硬链接，但可以建立软链接。 \n\n```bash\nLinux操作系统下共享文件夹设置方法介绍 \n\n首先当然是要安装samba了，呵呵： \n\nsudo apt-get install samba \n\nsudo apt-get install smbfs \n\n下面我们来共享群组可读写文件夹，假设你要共享的文件夹为： /home/ray/share \n\n首先创建这个文件夹 \n\nmkdir /home/ray/share \n\nchmod 777 /home/ray/share \n\n备份并编辑smb.conf允许网络用户访问 \n\nsudo cp /etc/samba/smb.conf /etc/samba/smb.conf_backup \n\nsudo gedit /etc/samba/smb.conf \n\n搜寻这一行文字 \n\n; security = user \n\n用下面这几行取代 \n\nsecurity = user \n\nusername map = /etc/samba/smbusers \n\n将下列几行新增到文件的最后面，假设允许访问的用户为：newsfan。而文件夹的共享名为 Share \n\n[Share] \n\ncomment = Shared Folder with username and password \n\npath = /home/ray/share \n\npublic = yes \n\nwritable = yes \n\nvalid users = newsfan \n\ncreate mask = 0700 \n\ndirectory mask = 0700 \n\nforce user = nobody \n\nforce group = nogroup \n\navailable = yes \n\nbrowseable = yes \n\n然后顺便把这里改一下，找到［global］把 workgroup = MSHOME 改成 \n\nworkgroup = WORKGROUP \n\ndisplay charset = UTF-8 \n\nunix charset = UTF-8 \n\ndos charset = cp936 \n\n后面的三行是为了防止出现中文目录乱码的情况。其中根据你的local，UTF-8 有可能需要改成 cp936。自己看着办吧。 \n\n现在要添加newsfan这个网络访问帐户。如果系统中当前没有这个帐户，那么 \n\nsudo useradd newsfan \n\n要注意，上面只是增加了newsfan这个用户，却没有给用户赋予本机登录密码。所以这个用户将只能从远程访问，不能从本机登录。而且samba的登录密码可以和本机登录密码不一样。 \n\n现在要新增网络使用者的帐号： \n\nsudo smbpasswd -a newsfan \n\nsudo gedit /etc/samba/smbusers \n\n在新建立的文件内加入下面这一行并保存 \n\nnewsfan = \"network username\" \n\n如果将来需要更改newsfan的网络访问密码，也用这个命令更改 \n\nsudo smbpasswd -a newsfan \n\n删除网络使用者的帐号的命令把上面的 -a 改成 -x \n\nsudo testparm \n\nsudo /etc/init.d/samba restart \n\n如果还是不行查看Iptables（防火墙是否开启），如果开启可以先将服务停止。\n\n最后退出重新登录或者重新启动一下机器。 \n\n \n\n \n\n \n\n利用Samba配置文件共享服务\n\n配置文件 /etc/samba/\n\n//设置samba密码文件\n\n# cat /etc/passwd|mksmbpasswd.sh > /etc/samba/smbpasswd\n\n//为安全起见，设置文件和目录的权限\n\n# chown root.root /etc/samba/smbpasswd\n\n# chmod 500 /etc/samba\n\n# chmod 600 /etc/samba/smbpasswd\n\n//为用户设置口令\n\n#smbpasswd root\n\n//检查配置文件的正确性\n\n# testparm\n\n//检查服务器所共享的资源\n\n# smbclient –L localhost\n\n//列出资源使用情况\n\n# smbstatus [-b]\n\n//配置文件\n\n节：\n\nl         [Global] 定义全局参数和缺省值\n\nl         [Homes] 定义用户的Home目录共享\n\nl         [Printers] 定义打印机共享\n\nl         [Userdefined_ShareName] 用户自定义共享（可有多个）\n\n变量：\n\nl         %S 当前服务名\n\nl         %P 当前服务的根路径\n\nl         %u 当前服务的用户名\n\nl         %g 给定%u的所在工作组名\n\nl         %H 给定%u的宿主目录\n\nl         %v Samba版本号\n\nl         %h 运行服务的主机名\n\nl         %m 客户机的NETBIOS名\n\nl         %L 服务器的NetBIOS名\n\nl         %L 当前的日期和时间\n\n \n\n//使用符号链接组织本地共享资源\n\n# vi /etc/samba/smb.conf\n\n[Resource]\n\n    comment = Local Resource\n\n    path = /var/samba/resource\n\n    public = yes\n\nwriteable = yes\n\n// -p  parent(no error if existing, make parent directories as needed)\n\n# mkdir –p /var/samba/resource\n\n#cd /var/samba/resource\n\n//-s, --symbolic\n\n# ln –s /usr/share/doc doc\n\n//为所有用户配置只读共享和读写共享\n\n# vi /etc/samba/smb.conf\n\n[tmp]\n\n    comment = Temporary file space\n\n    path = /tem\n\n    read only = no\n\n    public = yes\n\n \n\n[cdrom]\n\n    comment = CDROM\n\n    path = /mnt/cdrom\n\n    read only = yes\n\npublic = yes\n\n//为指定用户或组配置共享\n\n# useradd samba\n\n# passwd samba\n\n# mkdir /var/samba/samba\n\n//更改目录属主\n\n# chown samba.samba /var/samba/samba\n\n# vi smb.conf\n\n \n\n[sambadir]\n\n    comment = Samba's service\n\n    path = /var/samba/samba\n\n    valid users = samba\n\n    public = no\n\nwritable = yes\n\n \n\n//保存修改\n\n//Linux环境下访问Samba共享\n\n# cat /etc/samba/lmhosts\n\n# smbclient –L IP –U 用户名\n\n# smbmount //win/tools /mnt/smb/win\n\n \n\nlinux smb.conf详解\n\n17行workgroup\n\n语法 workgtoup = <工作组群>;\n预设 workgroup = MYGROUP\n说明 设定 Samba Server 的工作组\n例 workgroup = workgroup 和WIN2000S设为一个组，可在网上邻居可中看到共享\n\n21行server string\n\n语法 server string = <说明>;\n预设 sarver string = Samba Server\n说明 设定 Samba Server 的注释\n其他 支持变量 t%-访问时间 I%-客户端IP m%-客户端主机名 M%-客户端域名 S%-客户端用户名\n例 server string = this is a Samba Server 设定出现在Windows网上邻居的 Samba Server 注释为 this is a Samba Server\n\n28行hosts allow\n语法 hosts aoolw = <IP地址>; …\n预设 ; host allow = 192.168.1. 192.168.2. 127.\n说明 限制允许连接到 Samba Server 的机器，多个参数以空格隔开。表示方法可以为\n完整的IP地址，如 192.168.0.1\n网段，如 192.168.0.\n例 hosts allow = 192.168.1. 192.168.0.1 表示允许192.168.1 网段的机器 网址为192.168.0.1 的机器 连接到自己的samba server\n\n32行printcap name\n\n语法 printcap name = <打印机配置文件>;\n预设 printcap name = /etc/printcap\n说明 设定 samba srever 打印机的配置文件\n例 printcap name = /etc/printcap 设定 samba srever 参考 /etc/printcap 档的打印机设定\n\n33行load printers\n\n语法 load printers = <yes/no>;\n预设 load printers = yes\n说明 是否在开启 samba server 时即共享打印机\n\n38行printing\n语法 printing = <打印机类型>;\n预设 printing = lprng\n说明 设定 samba server 打印机所使用的类型,37行为目前所支持的类型\n\n42行guest account\n语法 guert account = <帐户名称>;\n预设 guert account = pcguest\n说明 设定访问 samba server 的来宾帐户(即访问时不用输入用户名和密码的帐户),若设为pcguest的话则为默认为”nobody”用户\n例 guert account = andy 设定设定访问 samba server 的来宾帐户以andy用户登陆,则此登陆帐户享有andy用户的所有权限\n\n46行log file\n语法 log file = <日志文件>;\n预设 log file = /var/log/samba/%m.log\n说明 设定 samba server 日志文件的储存位置和文件名(%m代表客户端主机名)\n\n49行max log size\n语法 max log size = <??KB>;\n预设 max log size = 0\n说明 设定日子文件的最大容量,单位KB 这里的预设值0代表不做限制\n\n53行security\n语法 security = <等级>;\n预设 security = user\n说明 设定访问 samba server 的安全级别 共有四种\nshare—不需要提供用户名和密码\nuser—-需要提供用户名和密码,而且身份验证由 samba server 负责\nserver–需要提供用户名和密码,可指定其他机器(winNT/2000/XP)或另一台 samba server作身份验证\ndomain–需要提供用户名和密码,指定winNT/2000/XP域服务器作身份验证\n\n60行password server\n语法 password server = <IP地址/主机名>;\n预设 password server = <NT-Server-Name>;\n说明 指定某台服务器(包括windows 和 linux)的密码,作为用户登入时验证的密码\n其他 此项需配合 security = server时,才可设定本参数\n\n64行password level\n65行username level\n语法 password level = <位数>;\nusername level = <位数>;\n预设 password level = 8\nusername level = 8\n说明 设定用户名和密码的位数,预设为8位字符\n\n70行encrypt passwords\n语法 encrypt passwords = <yes/no>;\n预设 encrypt passwords = yse\n说明 设定是否对samba的密码加密\n\n71行smb passwd file\n语法 smb passwd file = <密码文件>;\n预设 smb passwd file = /etc/samba/smbpasswd\n说明 设定samba的密码文件\n\n130行local master\n语法 local master = <yes/no>;\n预设 local master = no\n说明 设定 samba server 是否要担当LMB角色(LMB负责收集本地网络的Browse List资源),通常无特殊原因设为no\n\n134行os level = 33\n语法 os level = <数字>;\n预设 os level = 33\n说明 设定 samba server的os level. os level从 0 到 255 . winNT的os level为33, win95/98的os level 是 1 .\n若要拿samba server 当LMB或DMB则它的os level至少要大于NT的33以上\n\n139行domain master\n语法 domain master = <yes/no>;\n预设 domain master = yes\n说明 设定 samba server 是否要担当DMB角色(DMB会负责收集其他子网的Browse List资源),通常无特殊原因设为no\n\n143行preferred master\n语法 preferred master = <yes/no>;\n预设 preferred master = yes\n说明 设定 samba server 是否要担当PDC角色(PDC会负责追踪网络帐户进行的一切变更),通常无特殊原因设为no.\n(同一网段内不可有两个PDC,他们会每5分钟抢主控权一次)\n\n163行wins support\n语法 wins support = <yes/no>;\n预设 wins support = yes\n说明 设定samba server 是否想网络提供WINS服务,通常无特殊原因设为no.\n除非所处网络上没有主机提供WINS服务且需要此台samba server提供WINS服务是才设yes\n其他 wins support 和 wins server 只能选择一个\n\n167行wins server\n语法 wins server = <IP地址>;\n预设 wins server = w.x.y.z\n说明 设定samba server 是否要使用别台主机提供的WINS服务.通常无特殊原因设为no.除非所处网络上有一台主机提供WINS服务才要设yes\n其他 wins support 和 wins server\n例 wins server = 192.168.0.1 表示samba server要使用192.168.0.1提供的WINS服务\n\n#============================== Share Definitions =============================\n\n[homes]\ncomment = Home Directories\nbrowseable = no\nwritable = yes\nvalid users = %S\n\n使用者本身的”家”目录，当使用者以samba使用者身份登入samba server 后，\nsamba server 底下会看到自己的家目录，目录名称是使用者自己的帐号\n\n[分享的资源名称]\n<指令1>; = (参数)\n<指令2>; = (参数)\n……………………..\n\n要提供分享资源时，须先把欲分享的资源以 [ ] 符号括住，底下通常会带指令和参数来表示此资源的设定和存取权限等,详情如下\n\ncomment———注释说明\npath————分享资源的完整路径名称，除了路径要正确外，目录的权限也要设对\nbrowseable——是yes/否no在浏览资源中显示共享目录，若为否则必须指定共享路径才能存取\nprintable——-是yes/否no允许打印\nhide dot ftles–是yes/否no隐藏隐藏文件\npublic———-是yes/否no公开共享，若为否则进行身份验证(只有当security = share 时此项才起作用)\nguest ok——–是yes/否no公开共享，若为否则进行身份验证(只有当security = share 时此项才起作用)\nread only——-是yes/否no以只读方式共享当与writable发生冲突时也writable为准\nwritable——–是yes/否no不以只读方式共享当与read only发生冲突时，无视read only\nvaild users—–设定只有此名单内的用户才能访问共享资源(拒绝优先)(用户名/@组名)\ninvalid users—设定只有此名单内的用户不能访问共享资源(拒绝优先)(用户名/@组名)\nread list——-设定此名单内的成员为只读(用户名/@组名)\nwrite list——若设定为只读时，则只有此设定的名单内的成员才可作写入动作(用户名/@组名)\ncreate mask—–建立文件时所给的权限\ndirectory mask–建立目录时所给的权限\nforce group—–指定存取资源时须以此设定的群组使用者进入才能存取(用户名/@组名)\nforce user——指定存取资源时须以此设定的使用者进入才能存取(用户名/@组名)\nallow hosts—–设定只有此网段/IP的用户才能访问共享资源\nallwo hosts = 网段 except IP\ndeny hosts——设定只有此网段/IP的用户不能访问共享资源\n\nallow hosts=本网段指定IP指定IP\n\ndeny hosts=指定IP本网段指定IP\n\nSamba的主配置文件。但所包含的内容并不是很全，详见man smb.conf\n所有以;或#开头的行为注释行，将被忽略掉。在这个例子中我们使用；表示可以由你来修改或设置的部分，而#则表示真正意义上的注释。\n注意：不论你何时何地修改了这个文件，你都应运行一下命令“testparm“来测试你是否犯了一些基本语法的错误。\n1、全局设置\n[global]\n# workgroup = NT-Domain-Name or Workgroup-Name\nworkgroup = MYGROUP\n下面的这句话是后加的，加入的意义为：使WIN用户可以看到主机的名字，但我将此行注释掉后，没看到什么影响。\nnetbios name = express\n下面设置的是服务器的字符串，相当于NT中的计算机说明部分\nserver string = Samba Server\n下面的选项对于安全性很重要。他允许你对是否可以进行本地网络连接的机器进行了限制。\nhosts allow = 192.168.1.50 192.168.1.43 192.168.1.44 192.168.1.45 192.168.1.46 192.168.1.47 192.168.1.48 192.168.1.49\n如果想要自动共享打印机而不是个别地进行单独设置，使用下面的选项：\nprintcap name = /etc/printcap\nload printers = yes\n除非你是非标准的，否则下面的选项对于你说清楚打印系统的类型并不是很必要。当前支持的打印系统主要有以下几类：\n# bsd, sysv, plp, lprng, aix, hpux, qnx, cups\nprinting = cups\n如果想要一个guest账号的话就不用注释下面的行。你必须把这个加入到/etc/passwd中，否则用户“nobody“会被使用。\n; guest account = pcguest\n下面的选项告诉samba对不同的机器连接使用不同的日志文件。小心如果你允许访问的机器太多的话，文件可能极多哟！！！：）\nlog file = /var/log/samba/%m.log\n设置log文件的大小（KB）（# Put a capping on the size of the log files (in Kb).）\nmax log size = 0\n安全格式。大多数用户使用用户级安全。详见security_level.txt。\nsecurity = share\n使用密码服务选项，仅用于security = server模式\n参数列表可以包括：\n# password server = My_PDC_Name [My_BDC_Name] [My_Next_BDC_Name]\n# 或自动查找域控制器\n# password server = *\n; password server = \n对于所有的上面和下面的组成部分的_n_characters密码所允许的匹配级别\n; password level = 8\n; username level = 8\n你可能想使用密码编码。见在samba文档中的ENCRYPTION.txt, Win95.txt和WinNT.txt。\n除非你已经仔细的读过了那些文档，否则不要激活下面的选项：\nencrypt passwords = yes\nsmb passwd file = /etc/samba/smbpasswd\n当samba被建成为支持SSL的模式时，下面需要从大量的假的错误中保持smbclient。（原文如下：\n# The following is needed to keep smbclient from spouting spurious errors\n# when Samba is built with support for SSL.\n; ssl CA certFile = /usr/share/ssl/certs/ca-bundle.crt\n下面的选项需要允许从windows对linux系统的密码进行修改。\n# 注意：上面带有’encrypt passwords’ 和’smb passwd file’选项使用这些。\n# 另： 如果仅是允许工作站改变加密的SMB密码那么你不需要这些。它们允许Unix密码与SMB密码保持同步。\nunix password sync = Yes\npasswd program = /usr/bin/passwd %u\npasswd chat = *New*password* %n\\n *Retype*new*password* %n\\n *passwd:*all*authentication*tokens*updated*successfully*\n你可以使用PAM的密码改变控制标记。如果激活的活，当一个SMB客户端请求代替了在密码程序列表时，PAM将用于密码改变。对于大多数的设置，不改变密码字符参数而激活这个也是可能的。\npam password change = yes\nUnix用户可能映射不同的SMB用户名。\nusername map = /etc/samba/smbusers\n在每一台机器的基础上，使用下面的行可以使你定制你的配置。%m以连接机器的netbios名代替。\n; include = /etc/samba/smb.conf.%m\n这个参数控制samba是否服从于PAM账号和对话管理指示。默认情况下是使用PAM仅清除文本证明且忽略任何的账号或对话管理。注意：当加密密码=yes时，samba总是忽略PAM的证明。\nobey pam restrictions = yes\n很多人都会发现这个选项优化了性能。详见speed.txt和帮助手册页。\nsocket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192\n配置samba使用多重接口。\n如果你有多个网络接口的话，必须把他们在下面列出来。详见man。\n; interfaces = 192.168.12.2/24 192.168.13.2/24\n配置请求播出同步到远程浏览器，或从一个主机同步浏览器列表或从/到整个子网（如下）。\n; remote browse sync = 192.168.3.25 192.168.5.255\n使主机将自己广播到本地的子网。\n; remote announce = 192.168.1.255 192.168.2.44\n浏览器控件选项：\n如果你不想让你的samba在你的网络中变成一个主浏览器，那么设置local master为no，否则将采用正常的规则。\n; local master = no\nos level决定在主浏览器的中被提取的优先级。默认值是很合理的。\n; os level = 33\n域master指定samba是域主浏览器。这允许samba在子网之间比较浏览列表。如果你已经有了一个Win NT的主域控制器的话，就不要设置这个选项。\n; domain master = yes\n首选master使samba在启动时拒绝一个本地浏览器的选出，且给他一些小的较高的机会让其来选出。\n; preferred master = yes\n如果你要samba成为Win95工作站的域登录服务器的话则激活它。\n; domain logons = yes\n如果你激活了domain logons，那么你可以让每一台机器或每一个用户登录角本运行一个指定的登录批处理文件。原文如下：if you enable domain logons then you may want a per-machine or per user logon script run a specific logon batch file per workstation (machine)\n; logon script = %m.bat\n每一个用户名都运行一个指定的登录批处理文件\n; logon script = %U.bat\n# 存储动态的profile（仅针对95与NT）\n# %L 代表netbios name, %U 是一个用户名\n# 不能注释掉下面的[Profiles]共享。\n; logon path = \\%L\\Profiles\\%U\n支持WINS部分：告诉samba组件的NMBD去激活WINS服务。\n; wins support = yes\nWINS服务器-告诉samba组件的NMBD成为一个WINS客户端。\n注意：samba即可以是一个WINS服务器，也可以是一个客户端，或都不是。\n; wins server = w.x.y.z\nWINS 代理-原文如下，没法翻译（Tells Samba to answer name resolution queries on behalf of a non WINS capable client,），执行这件事必须要求在网络中至少有一个Wins服务器。默认情况下是NO。\n; wins proxy = yes\n# DNS Proxy – 告诉samba是否经过DNS的nslookup试着去解析NETBIOS名。1.9.17的内置默认值是yes，目前已经改为1.9.18的no。\ndns proxy = no\n实例保存可以很简洁-系统默认值是_no_\n注意：可以在每一个共享基础上设置\n; preserve case = no\n; short preserve case = no\n默认实例是对于所有的DOS文件都大写\n; default case = lower\n对于此选项要很小心-它可能带来一些想不到的事情。\n; case sensitive = no\n[homes]\ncomment = Home Directories\nbrowseable = no\nwritable = yes\nvalid users = %S\ncreate mode = 0664\ndirectory mode = 0775\n如果不想要samba不承认已经映射为guest的用户，可用如下设置\n; map to guest = bad user\n如果想创建netlogon目录给域登录，不要注释下面的内容。\n; [netlogon]\n; comment = Network Logon Service\n; path = /usr/local/samba/lib/netlogon\n; guest ok = yes\n; writable = no\n; share modes = no\n想提供一个指定的不固定的共享profile那么就不要注释下面的内容，默认使用用户主目录。\n;[Profiles]\n; path = /usr/local/samba/profiles\n; browseable = no\n; guest ok = yes\n注意：如果你有一个BSD风格的打印系统，则没有必须单独的特别指定每一个打印机。\n[printers]\ncomment = All Printers\npath = /var/spool/samba\nbrowseable = no\n设置public=yes表示允许’guest account’打印\nguest ok = no\nwritable = no\nprintable = yes\n下面的内容对人们共享文件是有用的。\n;[tmp]\n; comment = Temporary file space\n; path = /tmp\n; read only = no\n; public = yes\n公用的可访问的目录，除了在staff组中的成员外，对其它人为只读\n;[public]\n; comment = Public Stuff\n; path = /home/nw\n; public = yes\n; writable = yes\n; printable = no\n; write list = @staff\n私有打印机，仅仅fred本人可用。打印池中的数据将被放到fred的主目录中。注意：fred用户无论在什么地方都必须对打印池有写访问的权限。\n;[yingou]\n; comment = qlj’s Printer\n; valid users = yingouqlj\n; path = /home/yingouqlj\n; public = no\n; writable = no\n; printable = yes\n私有目录，仅能对fred开放。注意fred对这个目录需要写访问的权限。\n;[fredsdir]\n; comment = qlj’s Service\n; path = /usr/somewhere/private\n; valid users = yingouqlj\n; public = no\n; writable = yes\n; printable = no\n允许你制作配置文件去引入的连接到这里的每一台机器都有不同的目录的服务。\n使用%U选去配置用户名，%m代替连接到的机器名。\n;[yingouqlj]\n; comment = PC Directories\n; path = /usr/local/pc/%m\n; public = no\n; writable = yes\n公共可访问的目录，对所有的用户都可读/写。注意：在这个目录中的所有由用户创建的文件都会被标识成默认用户所有。所以有访问仅限的用户可以删除别的用户的文件。很明显这个目录必须是可以被默认用户写的。另一个用户当然可以指定，这样所有的文件都将被那个用户所替代。\n[public]\npath = /tmp/aaaa\npublic = yes\nguest ok = yes\nwritable = yes\nprintable = no\n下面的两个例子是怎样共享一个目录给两个用户，在这个共享目录中他们可以放置文件且分别属于各自所有。在这个设置中，目录将可以被两个用户同时使用且在其上有粘滞位保护。很明显，可以扩展为多个用户的情况。\n;[myshare]\n; comment = Mary’s and Fred’s stuff\n; path = /usr/somewhere/shared\n; valid users = mary fred\n; public = no\n; writable = yes\n; printable = no\n; create mask = 0765\n以下是个人实际的设置\n[sharedir]\npath = /home/nw\npublic = yes\nguest ok = yes\nwritable = yes\n\n\n在RHEL下如何使用VPN？怎么往一个Samba(SMB)共享里添加一个用户？  2007-09-10 21:28:13|  分类： 默认分类 |  标签： |字号大中小 订阅 \n\n允许用户浏览Samba共享的一种方法是在Samba服务器上拥有一个UNIX帐号。可以通过命令 adduser [用户名] 和 passwd [用户名]来建立UNIX帐号。 \n\n当用户有了一个本地帐号，他的Samba密码可以这样初始化： \n\n    smbpasswd -a [用户名]-a选项增加用户名到Samba的密码文件里面里。 \n\n在/etc/smb.conf配置文件里修改Samba共享，允许新增加的用户浏览该共享资源。 \n\n[ashare]    comment = A Shared Directory    path = /usr/somewhere/shared    valid users = mary [新用户]    public = no    writable = yes用testparm显示升级后的共享资源。\n用service smb reload命令重载smb.conf配置文件。 \n\n-- Create the user \ncreate user NC56\n  identified by \"nc56\"\n  default tablespace NNC_DATA01\n  temporary tablespace TEMP\n  profile DEFAULT;\n-- Grant/Revoke role privileges \ngrant connect to NC56 with admin option;\ngrant dba     to NC56 with admin option;\n\n\n\n```\n\n#### Linux 压缩命令汇总\n\n```bash\n09在Windows下最常见的压缩文件就只有两种，一是,zip，另一个是.rar。可是Linux就不同了，它有.gz、.tar.gz、tgz、bz2、.Z、.tar等众多的压缩文件名，此外windows下的.zip和.rar也可以在Linux下使用，不过在Linux使用.zip和.rar的人就太少了。本文就来对这些常见的压缩文件进行一\n番小结，希望你下次遇到这些文件时不至于被搞晕icon_smile.gif\n\n　　在具体总结各类压缩文件之前呢，首先要弄清两个概念：打包和压缩。打包是指\n将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压\n缩算法变成一个小文件。为什么要区分这两个概念呢？其实这源于Linux中的很多压\n缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就得先借助\n另它的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。\n\n　　Linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包\n，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进\n行压缩了，所以首先就来讲讲tar命令的基本用法：\n\n　　tar命令的选项有很多(用man tar可以查看到)，但常用的就那么几个选项，下面\n来举例说明一下：\n\n　　# tar -cf all.tar *.jpg\n　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包\n，-f指定包的文件名。\n\n　　# tar -rf all.tar *.gif\n　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的\n意思。\n# tar -uf all.tar logo.gif\n　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\n\n\n　　# tar -tf all.tar\n　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思\n\n　　# tar -xf all.tar\n　　这条命令是解出all.tar包中所有文件，-x是解开的意思\n\n　　以上就是tar的最基本的用法。为了方便用户在打包解包的同时可以压缩或解压\n文件，tar提供了一种特殊的功能。这就是tar可以在打包或解包的同时调用其它的压\n缩程序，比如调用gzip、bzip2等。\n\n　　1) tar调用gzip\n\n　　gzip是GNU组织开发的一个压缩程序，.gz结尾的文件就是gzip压缩的结果。与gzip\n相对的解压程序是gunzip。tar中使用-z这个参数来调用gzip。下面来举例说明一下\n：\n\n　　# tar -czf all.tar.gz *.jpg\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个\ngzip压缩过的包，包名为all.tar.gz\n\n　　# tar -xzf all.tar.gz\n　　这条命令是将上面产生的包解开。\n\n　　2) tar调用bzip2\n\n　　bzip2是一个压缩能力更强的压缩程序，.bz2结尾的文件就是bzip2压缩的结果。\n与bzip2相对的解压程序是bunzip2。tar中使用-j这个参数来调用gzip。下面来举例\n说明一下：\n\n　　# tar -cjf all.tar.bz2 *.jpg\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个\nbzip2压缩过的包，包名为all.tar.bz2\n\n　　# tar -xjf all.tar.bz2\n　　这条命令是将上面产生的包解开。\n3)tar调用compress\n\n　　compress也是一个压缩程序，但是好象使用compress的人不如gzip和bzip2的人\n多。.Z结尾的文件就是bzip2压缩的结果。与 compress相对的解压程序是uncompress\n。tar中使用-Z这个参数来调用compress。下面来举例说明一下：\n\n　　# tar -cZf all.tar.Z *.jpg\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成\n一个uncompress压缩过的包，包名为all.tar.Z\n\n　　# tar -xZf all.tar.Z\n　　这条命令是将上面产生的包解开\n\n　　有了上面的知识，你应该可以解开多种压缩文件了，下面对于tar系列的压缩文\n件作一个小结：\n\n　　1)对于.tar结尾的文件\n\n　　tar -xf all.tar\n\n　　2)对于.gz结尾的文件\n\n　　gzip -d all.gz\n　　gunzip all.gz\n\n　　3)对于.tgz或.tar.gz结尾的文件\n\n　　tar -xzf all.tar.gz\n　　tar -xzf all.tgz\n\n　　4)对于.bz2结尾的文件\n\n　　bzip2 -d all.bz2\n　　bunzip2 all.bz2\n\n　　5)对于tar.bz2结尾的文件\n\n　　tar -xjf all.tar.bz2\n\n　　6)对于.Z结尾的文件\n\n　　uncompress all.Z\n\n　　7)对于.tar.Z结尾的文件\n\n　　tar -xZf all.tar.z\n\n　　另外对于Window下的常见压缩文件.zip和.rar，Linux也有相应的方法来解压它\n们：\n\n　　1)对于.zip\n\n　　linux下提供了zip和unzip程序，zip是压缩程序，unzip是解压程序。它们的参\n数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n　　# zip all.zip *.jpg\n　　这条命令是将所有.jpg的文件压缩成一个zip包\n# unzip all.zip\n　　这条命令是将all.zip中的所有文件解压出来\n\n　　2)对于.rar\n\n　　要在linux下处理.rar文件，需要安装RAR for Linux，可以从网上下载，但要记\n住，RAR for Linux\n不是免费的；可从[url]http://www.rarsoft.com/download.htm[/url]下载RARfor Linux 3.2.\n0，然后安装：\n\n　　# tar -xzpvf rarlinux-3.2.0.tar.gz\n　　# cd rar\n　　# make\n\n　　这样就安装好了，安装后就有了rar和unrar这两个程序，rar是压缩程序，unrar\n是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n\n　　# rar a all *.jpg\n　　这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar\n扩展名将自动附加到包名后。\n\n　　# unrar e all.rar\n　　这条命令是将all.rar中的所有文件解压出来\n\n　　到此为至，我们已经介绍过linux下的tar、gzip、gunzip、bzip2、bunzip2、compress\n、 uncompress、 zip、unzip、rar、unrar等程式，你应该已经能够使用它们对.tar\n、.gz、.tar.gz、.tgz、.bz2、.tar.bz2、. Z、.tar.Z、.zip、.rar这10种压缩文\n件进行解压了，以后应该不需要为下载了一个软件而不知道如何在Linux下解开而烦\n恼了。而且以上方法对于Unix也基本有效。\n\n　　本文介绍了linux下的压缩程式tar、gzip、gunzip、bzip2、bunzip2、compress\n、uncompress、 zip、 unzip、rar、unrar等程式，以及如何使用它们对.tar、.gz\n、.tar.gz、.tgz、.bz2、.tar.bz2、.Z、. tar.Z、.zip、.rar这10种压缩文件进行\n操作。\n```\n\n","source":"_posts/2018-08-23-Linux-Shell-jichu.md","raw":"title: Linux Shell  编程基础\ndate: 2018-08-24 23:13:56\nupdated: 2018-08-24 23:26:12\ntags: [Shell, Linux]\ncategories: \n\n- Program \n- Shell\ndescription: Linux&#58; 本文介绍 Linux 常用 Shell 命令及简单 Shell 脚本。\n---\n## 第一讲\n\nzh_CN.GB18030\n`cat /etc/shells` 可以查看系统的 shell 种类。`echo $SHELL` 查看当前使用的shell。在当前shell中运行其它shell，例：\n\n```bash\n# /bin/csh ls -lh。 \nchomod u=rwx,g+w,o+r file \nchown -R jack /etc/test/ #把这个目录下所有的子目录和文件的拥有者都改变成jack\n```\n\n把这个目录下所有的子目录和文件的拥有者都改变成jack。\n\n`chown jack.jack /etc/test/ -R`\numask   文件   目录\n0\t6\t7\n1\t5\t6\n2\t4\t5\n3\t3\t4\n4\t2\t3\n5\t1\t2\n6\t0\t1\n7\t0\t0\n/etc/profile 文件中可以设定 umask 值。\n\n`alias ll='ls -alh'`\n\n`cat $HOME/.bashrc` , 别名都放在这个文件中。\n\n命令替换：`ls \\`cat myfile\\` -al`，这个反引号就是1左边的键，把myfile的内容输出到ls的输入。\n后台运行：# nohup tar -czf abc.tar.gz /etc/abc/ &。jobs -l查看后台运行情况。\n模式匹配：ls *.txt -l。\n\n## 第二讲\n\n本地变量在用户现在的shell生命期的脚本中使用，例在当前shell中设置变量，ABC=123，然后exit退出当前shell，再进入系统用set指令(显示本地变量)发现ABC变量无。readonly ABC，把ABC设置成只读变量。只是用readonly指令显示当前shell中有哪些只读变量。\n\n环境变量用于所有用户进程（经常称为子进程）。登录进程称为父进程，shell中执行的用户进程均称为子进程。不像本地变量(只用于现在的shell)环境变量可用于所有子进程，这包括编辑器，脚本和应用。 \n$HOME/.bash_profile(/etc/profile)\nexport，例：export ABC=\"shell program\"，把ABC这个变量变成环境变量。直接输入export也可以查看环境变量有哪些。readonly ABC，把环境变量ABC变成只读的。\n\n变量替换：\n${var name}\t显示实际值到var name\n${var name:+value}\t如果设置了var name，则显示其值value，否则为空\n${var name:?value}\t如果未设置var name，显示用户定义错误信息value\n${var name:-value}\t如果未设置var name，显示其值value，如果设置了var name则显示var name的值\n${var name:=value}\t如果未设置var name，设置其值并显示，如果设置了var name则显示var name的值\nenv\nunset ABC，删除ABC变量，但是用readonly声明的变量是不能被unset的。\n\n位置变量：先看下面的脚本\n\n```bash\n#!/bin/bash\n#parms\necho \"program name is $0\"\necho \"1 parm is $1\"\necho \"2 parm is $2\"\necho \"3 parm is $3\"\necho \"4 parm is $4\"\n```\n\n然后运行这个脚本：./parms a b c d，就会显示结果,$0表示脚本名称，$1-9分别表示位置变量名，在运行脚本时代入脚本中。\n再例如：\n\n```bash\n#!/bin/bash\n#parm.sh\nfind /home/chinaitlab/shell -name $1 -print\n```\n\n然后运行这个脚本: `./parm.sh abc.txt` 。\n\n标准变量：bash 默认建立了一些标准环境变量，可在 /etc/profile 中定义。\n EXINIT，运行 vi 时初始化设置一些参数\nHOME\nIFS\nLOGNAME\nMAIL\nMAILCHECK\nMAILPATH\nPATH\nPS1\nPS2\nSHELL\nTERMINFO\nTERM\nTZ\nEDITOR\nPWD\nMANPATH\n\n特殊变量：\n$#(传递到脚本的参数个数)\n$*(以一个单字符串显示所有向脚本传递的参数。与位置变量不同，此选项参数可超过9个)\n$$(脚本运行的当前进程ID号)\n$!(后台运行的最后一个进程的进程ID号)\n$@(与$#相同，但是使用时加引号，并在引号中返回每个参数)\n$-(显示shell使用的当前选项，与set命令功能相同)\n$?(显示最后命令的推出状态。0表示没有错误，其它任何值表明有错误)\n\n影响变量的命令：\ndeclare\n-设置或显示变量\n-f 只显示函数名\n-r 创建只读变量(declare和typeset)\n-x 创建转出变量\n-i 创建整数变量\n- 使用+替代-，可以颠倒选项的含义\n  export\n  -用于创建传给予shell的变量(环境变量)\n- --表明选项结束，所有后续参数都是实参\n- -f表明在\"名-值\"对中的名字是函数名\n- -n把全局变量转换成局部变量，换句话说，命令的变量不再传给shell\n- -p显示全局变量列表\n  unset\n- 用于取消变量的定义\n- --表明选项结束\n- -f删除只读变量，但不能取消从shell环境中删除指定的变量和函数如：PATH，PS1，PS2，PPID，UID，EUID等的设置。\n  shift[n]\n- 用于移动位置变量，调整位置变量，使$3的值赋予$2,$2的值赋予$1。\n  typeset\n  -用于显示或设置变量\n  -是declare的同义词\n\n引号：\n使用双引号可以引用除字符$,`(反引号),\\外的任意字符或字符串。例：echo -e \"ert, $SHELL'\\n* china`echo itlab`\"。\n单引号会忽略其中所有的特殊含义的字符，例：echo 'ert, $SHELL * china`echo itlab`'。\n反引号用于设置系统命令的输出到变量，shell将反引号中的内容作为一个系统命令，并执行其内容。\n反斜杠：如果一个字符有特殊含义，反斜杠防止shell误解其含义，即屏蔽其特殊含义，这些字符有特殊含义： $,*,+,&,\",|,?,^例：echo *，显示当前目录下的所有文件名，echo \\*，则显示*。\n\n运算符类型：\n按位运算符\t~,<<,>>,&,|,^\n运算符\t\t说明\n~op1\t\t反运算符，把op1中所有的二进制为1变为0，0变为1\nop1<<op2\t左移运算符，把op1中的二进制位向左移动op2位，忽略最左端移出的各位，最右端的各位补0值，每做一次按位左移就有实现op1乘以2。\nop1>>op2\t右移运算符，把op1中的二进制位向右移动op2位，忽略最右端移出的各位，最左端的各位补0值，每做一次按位右移就有实现op1除以2。\nop1&op2\t\t与比较运算符，op1和op2对应位，对于每个二进制位来说，如果二者该位都是1，则结果为1，否则为0。\nop1^op2\t\t异或运算符，op1和op2对应位，对于每个二进制位来说，如果二者该位互补，则结果为1否则为0。\nop1|op2\t\t或运算符。\n$[]表示形式告诉shell对方括号中的表达式求值，例：echo $[2+8]，echo $[2>>8]，echo $[2<<4]，echo $[2^4]，echo $[~3]。\n逻辑运算符：&&,||,>,==,<,!=例：echo $[2&&2]，echo $[1||0]。\n赋值运算符：=,+=,-=,*=,/=,%=,&=,^=,|=,<<=,>>=\nlet $count=$count+$change\nlet $count+=$change\n$[]可以接受不同基数的数字\n- [ base#n ] n表示基数从2到36的任何基数，例：echo $[10#8+1]，8进制的10加上1，结果为9。\n\n## 第三讲 Shell 输入与输出\n\necho [option] string\n\n- e解析转义字符\n- -n回车不换行，linux系统默认回车换行，例：echo \"hello\"和echo -n \"hello\"的区别。\n- string中的转义符(\\c,\\f,\\t,\\n)，\\c表示回车不换行，\\f表示禁止，\\t表示跳格(tab)，\\n表示回车换行\n  例：\n  ```bash\n  #!/bin/bash\n  #echod\n  echo -e \"This echo's 3 new lines\\n\\n\\n\"\n  echo \"OK\"\n  echo\n  echo \"This echo's 3 new lines\\n\\n\\n\"\n  echo \"The log files have all been done\">mylogfile.txt\n  ```\n\nread语句可以从键盘或文件的某一行文本中读入信息，并将其赋给一个变量。\nread var1 var2...\n-如果只指定了一个变量，那么read将会把所有的输入赋给该变量，直至遇到第一个文件结束符或回车；如果给出了多个变量，他们按顺序分别被赋予不同的变量。shell将用空格作为变量之间的分隔符。\n例：\n#!/bin/bash\n#readname\necho -n \"First name:\"\nread firstname\necho -n \"Last name:\"\nread lastname\necho -e \"Your First Name is :${firstname}\\n\"\necho -e \"Your Last Name is :${lastname}\\n\"\n\ncat可显示文件内容，创建文件还可以显示控制字符。\ncat [options] file1 file2...\n- -v显示控制字符\n  使用cat命令时要注意，它不会在文件分页符处停下来，它会一下显示完整个文件，如果希望每次显示一页，可以使用more。例：cat file1 file2 file3，会在屏幕上同时显示三个文件的内容，cat file1 file2 file3>file123，会把这三个文件的内容合并到一个文件file123中，cat -v dos.txt，显示这个windows下生成的文件，并显示控制字符(这些控制字符是在windows生成这个文件时加入的)。\n  管道举例：df -k|awk '{print $1}'|grep -v \"Filesystem\"。\n  tee命令把输出的一个副本输送到标准输出，另一个副本拷贝到相应的文件中。\n  tee -a files\n- 如果希望在看到输出的同时，也将其存入一个文件，那么这个命令再合适不过了，一般用于管道之后，-a参数表示追加写入files中，如果没有-a参数，则覆盖写入这个文件中。例：who | tee -a who.out。\n\n标准输入输出和错误\n在shell中执行命令时，每个进程都和三个打开的文件相联系，并使用文件描述符来引用这些文件，由于文件描述符不容易记忆，shell同时给出了相应的文件名。\n文件\t\t\t文件描述符\n输入文件-标准输入\t0(缺省是键盘，也可以是文件或其它命令的输出)\n输出文件-标准输出\t1(缺省是屏幕，也可以是文件)\n错误输出文件-标准错误\t2(缺省是屏幕，也可以是文件)\n系统中实际上有12个文件描述符，可以任意使用文件描述符3到9。\n\n文件重定向\ncommand > file\t\t把标准输出重定向到一个新文件中\ncommand >> file\t\t把标准输出重定向到一个文件中(追加)\ncommand 1 > file\t把标准输出重定向到一个文件中\ncommand > file 2>&1\t把标准输出和标准错误一起重定向到一个文件中\ncommand 2 > file\t把标准错误重定向到一个文件中\ncommand 2>> file\t把标准输出重定向到一个文件中(追加)\ncommand >> file 2>&1\t把标准输出和标准错误一起重定向到一个文件中(追加)\ncommand < file > file2\tcommand命令以file作为标准输入，file2文件作为标准输出\ncommand < file\t\tcommand命令以file作为输入\ncommand << dclimiter\t从标准输入中读入，直至遇到dclimiter分界符\ncommand < &m\t\t把文件描述符m作为标准输入\ncommand > &m\t\t把标准输出重定向到文件描述符m中\ncommand < &-\t\t关闭标准输入\n例：>nullfile，创建一个新的空文件。sort < file，把file作为输入源，排序然后输出到屏幕上。sort < name.txt > name.out。cat account_new.txt account_old.txt 1>accounts.out 2>accounts.err，account_new.txt存在，account_old.txt不存在，那么accounts.out将包含account_new.txt的内容，不会包含account_old.txt的内容，account_old.txt不存在的错误信息会写入accounts.err中。\n合并标准输出和标准错误的时候，切忌shell是从左至右分析相应的命令，例：grep \"standard\" standard.txt > grep.out 2>&1。\n\nexec命令可以用来替代当前shell；换句话说，并没有启动子shell，使用这一命令时任何现有环境都会被清除，并重新启动一个shell。\nexec command\n-其中的command通常是一个shell脚本。\n对文件描述符进行操作的时候(也只有在这时)，它不会覆盖你当前的shell。\n\n文件描述符：\n3-9文件描述符\nexec与文件描述符的结合\n例：\n#!/bin/bash\n#file_desc\nexec 3<&0 0<name.txt\nread line1\nread line2\nexec 0<&3\necho $line1\necho $line2\n\n## 第四讲 控制流结构\n```bash\nif 条件1\nthen\n\t命令1\nelif 条件2\nthen\n\t命令2\nelse\n\t命令3\nfi\n```\n例：\n\n```bash\n#!/bin/bash\n#if test\nif [ \"10\" -lt \"12\" ]\nthen\n   echo \"yes,10 is less than 12\"\nfi\n```\n\n可以使用man test获得条件的帮助。\n再例：\n\n```bash\n#!/bin/bash\n#iftest2\necho -n \"Enter your name:\"\nread NAME\nif [ \"$NAME\" == \"\" ];then\n\techo \"You did not enter your name\"\nfi\n```\n\n再例：\n\n```bash\n#!/bin/bash\n#ifcp\nif cp myfile.bak myfile;then\necho \"good copy\"\nelse echo \"basename $0:error could not copy files\" >&2\nfi\n```\n\n再例：\n\n```bash\n#!/bin/bash\n#ifelif\necho -n \"Enter your name:\"\nread NAME\nif [ -z $NAME ] || [ \"$NAME\" = \"\" ];then\n\techo \"you do not enter a name.\"\nelif [ \"$NAME\" = \"root\" ];then\n\techo \"hello root\"\nelif [ \"$NAME\" = \"chinaitlab\" ];then\n\techo \"hello chinaitlab\"\nelse\n\techo \"you are not root or chinaitlab,but hi,$NAME\"\nfi\n```\n\ncase语句格式: \n\n```bash\ncase 值 in\n模式1)\n\t命令1\n\t;;\n模式2)\n\t命令2\n\t;;\nesac\n```\n\ncase取值后面必须为单词in，每一个模式必须以右括号结束。取值可以为变量或常数，匹配发现取值符合某一模式后，其间所有命令开始执行直至;;。模式匹配符*表示任意字符,?表示任意单字符，[..]表示类或范围中任意字符。\n例：\n\n```bash\n#!/bin/bash\n#case select \necho -n \"Enter a number from 1 to 3:\"\nread ANS\ncase $ANS in\n1)\n\techo \"you select 1\"\n\t;;\n2)\n\techo \"you select 2\"\n\t;;\n3)\n\techo \"you select 3\"\n\t;;\nY|y)\n\techo \"you select $ANS\"\n\t;;\n*)\n\techo \"basename $0:This is not between 1 and 3\" >&2\n\texit;\n\t;;\nesac\n```\n\nfor循环格式：\n\n```bash\nfor 变量名 in 列表\ndo\n\t命令1\n\t命令2\ndone\n```\n\n当变量值在列表里，for循环即执行一次所有命令，使用变量名访问列表中取值。命令可为任何有效的shell命令和语句。变量名为任何单词。In列表用法是可选的，如果不用它，for循环使用命令行的位置参数。in列表可以包含替换，字符串和文件名。\n例：\n\n```bash\n#!/bin/bash\n#forlist1\nfor loop in 1 2 3 4 5\ndo\n\techo $loop\ndone\n```\n\n再例：\n\n```bash \n#!/bin/bash\n#forlist2\nfor loop in \"orange red blue grey\"\ndo\n  echo $loop\ndone\n```\n\n再例：\n```bash\n#!/bin/bash\n#forlist2\nfor loop in `cat myfile`\ndo\n  echo $loop\ndone\nuntil循环格式：\nuntil 条件\ndo\n  命令1\n  命令2\n  ...\ndone\n```\n注：条件可为任意测试条件，测试发生在循环末尾，因此循环至少执行一次。\n例：\n```bash\n#!/bin/bash\n#until_mon\n#监控分区\nPart=\"/backup\"\n#得到磁盘使用的百分比\nLOOK_OUT=`df|grep \"$Part\"|awk '{print $5}'|sed 's/%//g'`\necho $LOOK_OUT\nuntil [\"$LOOK_OUT\" gt \"90\"]\ndo\n  echo \"FileSystem /backup is nearly full\" |mail root\n  LOOK_OUT=`df|grep \"$Part\"|awk '{print $5}'|sed 's/%//g'`\n  sleep 3600\ndone\n```\n然后# nohup ./dfuntil &让这个程序在后台运行，一小时检测一次看这个分区的空间占用率是否大于90%。\n\nwhile格式：\n```bash\nwhile 命令\ndo\n  命令1\n  命令2\n  ...\ndone\n```\n注：在while和do之间虽然通常只使用一个命令，但可以放几个命令，命令通常用作测试条件。\n例：\n```bash\n#!/bin/bash\n#whileread\necho \"按住<ctrl>+D退出输入。\"\nwhile echo -n \"输入你最喜欢的电影：\";read FILM\ndo\n\techo \"Yeah.${FILM}是一部好电影！\"\ndone\n```\n再例：\n```bash\n#!/bin/bash\n#whileread\nwhile read LINE\ndo\n\techo $LINE\ndone <names.txt\n```\n把names.txt这个文件的内容按每行输出到屏幕。\nbreak与continue：\nbreak[n]\n-退出循环，如果是在一个嵌入循环里，可以指定n来跳出的循环个数。\n例：\n```bash\n#!/bin/bash\n#breakout\nwhile :\ndo\n  echo -n \"Enter any number[1..5]:\"\n  read ANS\n  case $ANS in\n  1|2|3|4|5)\n\techo \"you enter a number between 1 and 5.\"\n\t;;\n  *)\n\techo \"wrong number,bye.\"\n\tbreak\n\t;;\n  esac\ndone\n```\n再例：\n```bash\n#!/bin/bash\n#breakout\nwhile :\ndo\n  echo -n \"Enter any number[1..5]:\"\n  read ANS\n  case $ANS in\n  1|2|3|4|5)\n\techo \"you enter a number between 1 and 5.\"\n\t;;\n  *)\n\techo -n \"wrong number,continue(y/n)?:\"\n\tread IS_CONTINUE\n\tcase $IS_CONTINUE in\n\t\ty|yes|Y|YES)\n\t\t\tcontinue\n\t\t\t;;\n\t\t*)\n\t\t\tbreak\n\t\t\t;;\n\tesac\n  esac\ndone\n```\n## 第五讲\n\n正则表达式：一种用来描述文本模式的特殊语法，由普通字符(a到z)以及特殊字符(称为元字符，如/,*,?等)\n匹配的字符串\n文本过滤工具在某种模式下都支持正则表达式\n基本元字符集及含义\n字符\t含义\n^\t只匹配行首\n$\t只匹配行尾\n\n*\t匹配0个或多个此单字符\n  ]\t只匹配[]内字符，可以是一个单字符，也可以是字符序列。可以使用-表示[]内字符序列范围，如用[1-5]代替[12345]。\n  \t只用来屏蔽一个元字符的特殊含义\n  \t只匹配任意单字符\n  attern\\{n\\}\t只用来匹配前面pattern出现次数。n为次数\n  attern\\{n,\\}\t含义同上，但次数最少为n\n  attern\\{n,m\\}\t含义同上，但pattern出现次数在n与m之间。\n    例：\n    ^d\n  rwxrwxrw-\t匹配\n  rw-rw-rw\t不匹配\n    ^...1\n  482XC56D\t不匹配\n  442XW7134\t不匹配\n  451ABC123\t匹配\n  D11XC9871\t匹配\n    trouble$--匹配以单词trouble结尾的所有字符\n    ^$--匹配空行\n    ^.$--匹配包含一个字符的行\n    用\\屏蔽一个特殊字符，特殊字符有\",',||,^,*,.,+等，\\*\\.pas正则表达式中匹配以*.pas结尾的所有字符或文件。\n\n逗号将括弧内要匹配的不同字符串分开，用-表示一个字符串范围\n[0123456789]或[0-9]：任意一个数字\n[a-z]：任意小写字母\n[A-Z a-z]：任意大小写字母\n[A-Z a-z 0-9]：任意字母或数字\n[S,s]：匹配大小写s\n\nA\\{2\\}B：A出现2次：AAB\nA\\{4,\\}B：A最少出现4次，AAAAB，AAAAAB...\nA\\{2,4\\}B：A出现次数范围2-4次，AAB，AAAB，AAAAB\n[0-9]\\{3\\}\\.[0-9]\\{3\\}\\.[0-9]\\{3\\}\\.[0-9]\\{3\\}：匹配IP地址\n\nfind命令形式\nfind pathname -option [-print -exec -ok]\n-pathname查找路径，例如用.来表示当前目录，用/表示系统根目录。-print，find命令将匹配的文件输出到标准输出。-exec，find命令对匹配的文件执行该参数所给出的shell命令，相应命令的形式为'command'{} \\;'，注意{}和\\；之间的空格。-ok和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前都会给出提示，让用户来确定是否执行。\nfind命令的一般形式：\n-name按照文件名找文件\n-perm按照文件权限来找文件\n-user按照文件属主来找文件\n-group按照文件所属的组来找文件\n-mtime -n +n按照文件的更改时间来查找文件。-n表示文件更改时间距现在n天以内，+n表示文件更改时间距现在n天以前。find命令还有-atime和-ctime选项，但他们都和-mtime选项相似\n-size n[c]查找文件长度为n块的文件，带有c时表示文件长度以字节计。\n-nogroup查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。\n-nouser查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。\n-newer file1 ! -newer file2查找更改时间比文件file1新但比文件file2旧的文件。\n-type查找某一类的文件，比如：b块设备文件，d目录，c字符设备文件，p管道文件，l符号链接文件，f普通文件。\n\n举例：\n-name：可以使用某种文件名模式来匹配文件，记住要用引号将文件名模式引起来，例：\nfind -name \"*.txt\" -print，没有路径表示查找当前路径。find ./ -name \"*.txt\" -print。find ./ -name \"[A-Z]*\" -print，find /etc -name \"host*\" -print。\n-perm：find . -perm 755 -print。\n-user和-nouser：find `pwd` -user root -print。find `pwd` -nouser -print。\n-group和-nogroup：find ./ -group itlab -print，find / -nogroup -print。\n-mtime：find /var -mtime -5 -print，find /var -mtime +3 -print。\n-newer：find `pwd` -newer \"myfile\" ! -newer \"myfile123\" -print。\n-type：find /etc -type d -print。\n-size：find . -size +1000000c -print查找文件大小大于1000000字节的文件，find . -size +10 -print，查找大小大于10块的文件。\n-depth：使用find命令时，可能希望先匹配所有的文件，再在子目录中查找，find / -name \"con.file\" -depth -print。\n-exec或ok：find . -type f -exec ls -l {} \\;\nfind . -name \"*.log\" -mtime +5 -ok rm{} \\;\n-xargs:在使用find命令的-exec选项处理匹配到的文件时，find命令将所有匹配到的文件一起传递给exec，不幸的是有些系统对能够传递给exec的命令长度有限制，这样在find命令运行几分钟后就会出现溢出错误。错误信息通常是“参数列太长”或“参数列溢出”，这就是xargs命令的用处所在，特别是与find命令一起使用。exec会发起多个进程，而xargs不会多个，只有一个。例：find ./ -perm -7 -print | xargs chmod o-w，\nfind ./ -type f -print | xargs file。\n\ngrep介绍\n对文本文件进行模式查找，grep有三种变形\n-Grep：标准grep命令\n-Egrep：扩展grep，支持基本及扩展的正则表达式\n-Fgrep：快速grep\ngrep一般格式为：\n-grep[选项]基本正则表达式[文件]\n-字符串参数(基本正则表达式)最好采用双引号，一是以防被误解为shell命令，二是可以用来查找多个单词组成的字符串。\ngrep命令选项：\n-c：只输出匹配行的计数\n-i：不区分大小写(只适用于单字符)\n-h：查询多文件时不显示文件名\n-H：显示文件名\n-l：查询多文件时只输出包含匹配字符的文件名\n-n：显示匹配行及行号\n-s：不显示不存在或无匹配文本的错误信息\n-v：显示不包含匹配文本的所有行\n例：\ngrep \"jenny\" *.txt\ngrep \"sort it\" *\ngrep -c \"2004\" myfile\ngrep -n \"2004\" myfile\ngrep -i \"Jul\" myfile\ngrep -v \"2004:22\" myfile\ngrep \"2004:22:5[0-9]\" myfile\ngrep \"^[^210]\" myfile，查找行首不是2或1或0的行。\ngrep \"[5-8][6-9][0-2]\" myfile\ngrep \"4\\{2\\}\" myfile\ngrep \"4\\{2,\\}\" myfile\ngrep \"4\\{2,4\\}\" myfile\ngrep \"^$\" myfile\ngrep \"\\?\" myfile\ngrep \"^d\" myfile\ngrep \"^[^d]\" myfile\n\ngrep命令类名类等价的正则表达式\n[[:upper:]][A-Z]\n[[:alnum:]][0-9a-zA-Z]\n[[:lower:]][a-z]\n[[:space:]]\t空格或tab键\n[[:digit:]][0-9]\n[[:alpha:]][a-zA-Z]\n例：grep \"5[[:digit:]][[:digit:]]\" myfile\n\nawk介绍\n可从文件或字符串中基于指定规则浏览和抽取信息，是一种自解释的编程语言，三种方式调用awk：\n-命令行方式：\n\tawk [-F field-spearator]'command' input-files，field-spearator默认是空格。\n-awk脚本\n\t所有awk命令插入一个文件，并使awk程序可执行，然后用awk命令解释器作为脚本的首行，以便通过键入脚本名称来调用它。\n-awk命令插入一个单独文件\n\tawk -f awk-script-file input-files\n\nawk脚本由各种操作和模式组成\n模式和动作：\n    -模式部分决定动作语句何时出发及出发事件。(BEGIN,END)\n    -动作对数据进行处理，放在大括号{}内指明。(input)\n分隔符，域和记录：\n    -awk执行时，其浏览域标记为$1,$2...$n。这种方法称为域标识。$0为所有域，即这条记录。\n    -注意执行时不要混淆符号$和shell提示符$，他们是不同的。\n例：awk '{print $0}' score.txt | tee score.out。\nawk -F . '{print $0}' score.txt |tee score.out。\nawk '{print $1 \"\\t\"$4}' score.txt。\nawk 'BEGIN {print \"Name Maths\\n------\"} {print $1\"\\t\"$4} END {print \"end-of-report\"}' score.txt。\n\nawk中的特殊元字符：+和？，+表示匹配任意字符，？表示匹配单个字符。\n匹配操作符：~(表示匹配),!~(表示不匹配)，要匹配的内容放在两个\\之间。\ncat score.txt|awk '$0 ~/218.79.131.96/'。\nawk '$0 !~/218.79.131.96/' score.txt。\nawk '{if($1==\"218.79.131.96\") print $0}' score.txt。\n\nsed介绍\nsed不与初始化文件打交道，它操作的只是一个拷贝，然后所有的改动如果没有重定向到一个文件，将输出到屏幕。sed是一种重要的文本过滤工具，使用一行命令或使用管道与grep与awk相结合。非交互性文本流编辑。调用sed有三种方式：\n-使用sed命令行格式\n   sed [选项] sed命令 输入文件\n-使用sed脚本文件，格式为：\n   sed [选贤] -f sed脚本文件 输入文件\n-sed脚本文件[选项] 输入文件\n-不管是使用shell命令行方式或脚本文件方式，如果没有指定输入文件，sed从标准输入中接受输入，一般是键盘或重定向结果。\nsed命令选项：\n-n不打印\n-c下一命令是编辑命令\n-f如果正在调用sed脚本文件\n\nsed在文件中查找文本的方式\n-使用行号，可以是一个简单数字或是一个行号范围\n-使用正则表达式\nx\t\t\tx为一行号\nx,y\t\t\t表示行号范围从x到y\n/pattern/\t\t查询包含模式的行\n/pattern/pattern/\t查询包含两个模式的行\npattern/,x\t\t在给定的行号上查询包含模式的行\nx,/pattern/\t\t通过行号和模式查询匹配行\nx,y!\t\t\t查询不包含指定行号x和y的行 \n基本sed编辑命令：\np\t打印匹配行\n=\t显示文件行号\na\\\t在定位行号后附加新文本信息\ni\\\t在定位行号后插入新文本信息\nd\t删除定位行\nc\\\t用新文本替换定位文本\ns\t使用替换模式替换相应模式\nr\t从另一个文件中读文本\nw\t写文本到一个文件\nq\t第一个模式匹配完成后退出或立即退出\nl\t显示与八进制ASCII代码等价的控制字符\n{}\t在定位行执行的命令组\nn\t从另一个文件中读文本下一行，并附加在下一行\ng\t将模式2粘贴到/pattern n/\ny\t传送字符\n\n例：\nsed '2p' score.txt，单引号中的是命令，打印score.txt这个文件的第二行，这里全部打印，因为没有加-n，这样匹配到的和没匹配到的都打印。\nsed -n '2p' score.txt，-n表示不打印没匹配到的，只打印第二行。\nsed -n '1,4p' score.txt，打印1~4行。\nsed -n '/los/p' myfile.txt，打印包含los字符的所有行。\nsed -n '4,/los/p' myfile.txt，从第四行开始匹配到第一个los结束，如果los在第六行，那么从第四行到第六行都打印，如果下面还有los也不打印了。\nsed -n '/^$/=' myfile.txt，显示空行的行号。\nsed -n -e '/^$/p' -e '/^$/=' myfile，打印空白行打印行号。\nsed -n '/chinaitlab/a\\shenzhen' myfile.txt。\nsed -n '/chinaitlab/i\\shenzhen' myfile.txt。\nsed -n '/chinaitlab/c\\chinaitlab shenzhen' myfile.txt。\nsed '1,2d' myfile.txt，把第一第二行删除。\nsed 's/chinaitlab/chinaitlab shenzhen/g' myfile.txt，当有多个chinaitlab时，加g表示全部替换。\nsed -n 's/chinaitlab/& hello/p' myfile.txt， 在匹配到的所有的chinaitlab的后面加 hello。\nsed -n 's/chinaitlab/hello &/p' myfile.txt，在匹配到的所有的chinaitlab的前面加 hello。\nsed 'lr ctrl.txt' myfile.txt。\nsed 'china/q' myfile.txt。\nsed -n '/china/l' myfile.txt。\n\n合并与分割\nsort[options] files\n-许多不同的域按不同的列顺序分类\n-c测试文件是否已经分类\n-m合并两个分类文件\n-u删除所有复制行\n-o存储sort结果的输出文件名\n-t域分隔符：用非空格或tab键分割域\n+n n为域号，使用此域号开始分类\nn指定分类是域上的数字分类项\n-r比较求逆\n\n例：\nsort -c myfile，检查这个文件是否已经排序。\nsort -u myfile，\n\n\n\n\n\n## 第六讲shell函数\n\n定义函数格式：\n函数名()\n{\n命令1\n...\n}\nfunction 函数名()\n{\n...\n}\n函数可以放在同一个文件中作为一段代码，也可以放在只包含函数的单独文件中。\n#!/bin/bash\n#hellofun\nfunction hello()\n{\necho \"hello,today is `date`\"\nreturn 0\n}\necho \"now going to the function hello\"\nhello\necho \"back from the function\"\n\n参数传递：向函数传递参数就像在脚本中使用位置变量$1,$2...$9\n例：\n#!/bin/bash\n#func\nfunction hello()\n{\necho \"Hello,$1 today is `date`\"\n}\necho \"now going to the function hello\"\nhello chinaitlab\necho \"back from the function\"\n\n函数文件\n#!/bin/bash\n#func\n#source function\n. hellofun\necho \"now going to the function hello\"\nhello\necho \"back from the function\"\n\n#!/bin/bash\n#hellofun\nfunction hello()\n{\necho \"Hello, today is `date`\"\nreturn 0\n}\n\n检查载入函数和删除函数\n察看载入函数set\n删除函数unset\n例：\n#!/bin/bash\n#func\n#source function\n. hellofun\nset #察看加载的函数和变量信息\necho \"now going to the function hello\"\nunset hello#删除这个函数\nhello\necho \"back from the function\"\n\n函数返回值：\n#!/bin/bash\n#hellofun\nfunction hello()\n{\necho \"Hello, today is `date`\"\nreturn 0\n}\n#!/bin/bash\n#func\necho \"now going to the function hello\"\nhello\necho $?\necho \"back from the function\"\n\n## 第七讲脚本参数传递\n\nshift命令,每次讲参数位置向左偏移n位。\n#!/bin/bash\n#opt2\nusage()\n{\necho \"usage:`basename $0` filenames\"\n}\ntotalline=0\nif[ $# -lt 2 ];then\n\tusage\n\texit#退出系统，下面的代码不执行\nfi\nwhile [ $# -ne 0]#参数个数不等于0\ndo\nline=`cat $1|wc -l`\necho \"$1:${line}\"\ntotalline=$[$totalline+$line]\nshift#调用shift时$#(参数个数)也跟着减1\ndone\necho \"-----------\"\necho \"total:${totalline}\"\n\ngetopts获得多个命令行参数\n#!/bin/bash\nALL=false\nHELP=false\nFILE=false\nVERBOSE=false\nwhile getopts ahfvc OPTION\ndo\n\tcase $OPTION in\n\ta)\n\t\tALL=true\n\t\techo \"ALL IS $ALL\"\n\t\t;;\n\th)\n\t\tHELP=true\n\t\techo \"HELP is $HELP\"\n\t\t;;\n\tf)\n\t\tFILE=true\n\t\techo \"FILE is $FILE\"\n\t\t;;\n\tv)\n\t\tVERBOSE=true\n\t\techo \"VERBOSE is $VERBOSE\"\n\t\t;;\n\tc)\n\t\techo \"c value is $c\"\n\t\t;;\n\t\\?)\n\t\techo \"`basename $0` -[a h f v] -[c value] file \"\n\t\t;;\n\tesac\ndone\n\n\n\n---\n\n#### 常用命令\n\n#### linux使用备忘\n\n查看linux文件目录的大小和文件夹包含的文件数：\n\ndu -sh xmldb/ #查看xmldb文件大小\ndu -sm * | sort -n  #统计当前目录大小 并安大小 排序\ndu -sk * | sort -n \n\n#### 压缩文件：\n\ntar -zcvf  a.tgz aa   #压缩aa文件为a.tgz\ntar -zxvf a.tgz #解压\n\n#### 查找文件：\n\nfind / -name filename #在所有目录下查找filename\nfind /opt -name file* #在/opt下查找以find开头的文件\nfind / -amin -10 # 查找在系统中最后10分钟访问的文件\nfind / -atime -2 # 查找在系统中最后48小时访问的文件\nfind / -empty # 查找在系统中为空的文件或者文件夹\nfind / -group cat # 查找在系统中属于 groupcat的文件\nfind / -mmin -5 # 查找在系统中最后5分钟里修改过的文件\nfind / -mtime -1 #查找在系统中最后24小时里修改过的文件\nfind / -nouser #查找在系统中属于作废用户的文件\nfind / -user fred #查找在系统中属于FRED这个用户的文件\n\n---\n\n小红帽企业版的telnet为krb5-telnet，依附于xinetd服务，将/etc/xinetd.d/krb5-telnet\n的disable设置为no，重启xinetd即可启用telnet服务，默认是不允许root用户登录。允许普通的telnet登陆，但也可使用kerberos5验证 \n\n个人版RedHat Linux的telnet也是同样的道理，也是依附于xinetd服务，配置文件是/etc/xinetd.d/telnet。提供telnet服务，使用未加密的用户/密码组进行验证\n\n用passwd修改用户密码，常常提示“BAD PASSWORD: it is based on a dictionary word”，实际上\nlinux要求的密码的验证机制是在/etc/login.defs中规定最小密码字符数。还要受到/etc/pam.d/passwd的限定，但是在root用户下怎么设置都可以，可以不受验证机制的约束，即便出来“BAD PASSWORD: it is based on a dictionary word”也可以修改成功。\n\n但是普通用户修改自己的密码，如果不符合密码验证机制的话就修改不成功，会有各种报错，“BAD PASSWORD: it's WAY too short”，这是报密码太短，不符合/etc/login.defs的设置，“BAD PASSWORD: it is based on your username”，这是密码与帐号不能同名，这是不符合/etc/pam.d/passwd的设置。“BAD PASSWORD: it is based on a dictionary word”这是因为出现了字典里的字符串，如果你英文与数字组合使用，就不会报错。\n\n----\n\n### 目录\n\n#### 1.ln 命令详解\n\n`ln -s  源文件 目标文件`     -s 是 symbolic的意思。 \n例：` ln  -s  /lib/lsb   /usr/lj`\n即：在usr目录下建立指向/lib/lsb目录的lj文件。\n\n`ln -s /opt/oracle /opt/app/oracle`\n建立链接`/opt/oracle` 链接目录 `/opt/app/oracle`\n比如在/data目录下建立一个a目录的连接b\n`ln -s /data/a /data/b`\n例如：\n`ln -s db_1 /opt/oracle/product/10.2.0/db_1`\n这条命令式在 /opt/oracle/product/10.2.0/db_1 下建立一个 db_1 的链接。\n现在 /opt/oracle/product/10.2.0/db_1 下应该会还有个db_1\n\nln 是 Linux 中一个非常重要命令。它的功能是为某一个文件在另外一个位置建立一个同步的链接，这个命令最常用的参数是-s,具体用法是： \n\nln -s  源文件 目标文件    -s 是 symbolic的意思。 \n例： `ln  -s  /lib/lsb   /usr/lj`\n即：在 usr 目录下建立指向 /lib/lsb 目录的lj文件。\n\n备份命令\n`tar -cvf oraclehome.tar /opt/oracle/product/10.2.0/db_1` \n备份一下 \n解压命令\n`tar -xvfz /opt/oracle/product/allbackup.tar.gz /opt/oracle/product/10.2.0`\n\n当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：`ln -s /bin/less /usr/local/bin/less-s 是代号（symbolic）的意思。这里有两点要注意：第一，ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化；第二，ln的链接又软链接和硬链接两种，软链接就是ln -s ** **,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **,没有参数-s, 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。软链接是可以跨分区的，但是硬链接只能在同一分区内。如果你用ls察看一个目录时，发现有的文件后面有一个@的符号，那就是一个用ln命令生成的文件，用ls -l命令去察看，就可以看到显示的link的路径了当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：`ln -s /bin/less /usr/local/bin/less `\n注意： \n\n第一，ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化； \n\n第二，ln的链接又软链接和硬链接两种，软链接就是ln -s ** **,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **,没有参数-s, 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。软链接是可以跨分区的，但是硬链接只能在同一分区内。\n第三：目录不能建立硬链接，但可以建立软链接。 \n\n```bash\nLinux操作系统下共享文件夹设置方法介绍 \n\n首先当然是要安装samba了，呵呵： \n\nsudo apt-get install samba \n\nsudo apt-get install smbfs \n\n下面我们来共享群组可读写文件夹，假设你要共享的文件夹为： /home/ray/share \n\n首先创建这个文件夹 \n\nmkdir /home/ray/share \n\nchmod 777 /home/ray/share \n\n备份并编辑smb.conf允许网络用户访问 \n\nsudo cp /etc/samba/smb.conf /etc/samba/smb.conf_backup \n\nsudo gedit /etc/samba/smb.conf \n\n搜寻这一行文字 \n\n; security = user \n\n用下面这几行取代 \n\nsecurity = user \n\nusername map = /etc/samba/smbusers \n\n将下列几行新增到文件的最后面，假设允许访问的用户为：newsfan。而文件夹的共享名为 Share \n\n[Share] \n\ncomment = Shared Folder with username and password \n\npath = /home/ray/share \n\npublic = yes \n\nwritable = yes \n\nvalid users = newsfan \n\ncreate mask = 0700 \n\ndirectory mask = 0700 \n\nforce user = nobody \n\nforce group = nogroup \n\navailable = yes \n\nbrowseable = yes \n\n然后顺便把这里改一下，找到［global］把 workgroup = MSHOME 改成 \n\nworkgroup = WORKGROUP \n\ndisplay charset = UTF-8 \n\nunix charset = UTF-8 \n\ndos charset = cp936 \n\n后面的三行是为了防止出现中文目录乱码的情况。其中根据你的local，UTF-8 有可能需要改成 cp936。自己看着办吧。 \n\n现在要添加newsfan这个网络访问帐户。如果系统中当前没有这个帐户，那么 \n\nsudo useradd newsfan \n\n要注意，上面只是增加了newsfan这个用户，却没有给用户赋予本机登录密码。所以这个用户将只能从远程访问，不能从本机登录。而且samba的登录密码可以和本机登录密码不一样。 \n\n现在要新增网络使用者的帐号： \n\nsudo smbpasswd -a newsfan \n\nsudo gedit /etc/samba/smbusers \n\n在新建立的文件内加入下面这一行并保存 \n\nnewsfan = \"network username\" \n\n如果将来需要更改newsfan的网络访问密码，也用这个命令更改 \n\nsudo smbpasswd -a newsfan \n\n删除网络使用者的帐号的命令把上面的 -a 改成 -x \n\nsudo testparm \n\nsudo /etc/init.d/samba restart \n\n如果还是不行查看Iptables（防火墙是否开启），如果开启可以先将服务停止。\n\n最后退出重新登录或者重新启动一下机器。 \n\n \n\n \n\n \n\n利用Samba配置文件共享服务\n\n配置文件 /etc/samba/\n\n//设置samba密码文件\n\n# cat /etc/passwd|mksmbpasswd.sh > /etc/samba/smbpasswd\n\n//为安全起见，设置文件和目录的权限\n\n# chown root.root /etc/samba/smbpasswd\n\n# chmod 500 /etc/samba\n\n# chmod 600 /etc/samba/smbpasswd\n\n//为用户设置口令\n\n#smbpasswd root\n\n//检查配置文件的正确性\n\n# testparm\n\n//检查服务器所共享的资源\n\n# smbclient –L localhost\n\n//列出资源使用情况\n\n# smbstatus [-b]\n\n//配置文件\n\n节：\n\nl         [Global] 定义全局参数和缺省值\n\nl         [Homes] 定义用户的Home目录共享\n\nl         [Printers] 定义打印机共享\n\nl         [Userdefined_ShareName] 用户自定义共享（可有多个）\n\n变量：\n\nl         %S 当前服务名\n\nl         %P 当前服务的根路径\n\nl         %u 当前服务的用户名\n\nl         %g 给定%u的所在工作组名\n\nl         %H 给定%u的宿主目录\n\nl         %v Samba版本号\n\nl         %h 运行服务的主机名\n\nl         %m 客户机的NETBIOS名\n\nl         %L 服务器的NetBIOS名\n\nl         %L 当前的日期和时间\n\n \n\n//使用符号链接组织本地共享资源\n\n# vi /etc/samba/smb.conf\n\n[Resource]\n\n    comment = Local Resource\n\n    path = /var/samba/resource\n\n    public = yes\n\nwriteable = yes\n\n// -p  parent(no error if existing, make parent directories as needed)\n\n# mkdir –p /var/samba/resource\n\n#cd /var/samba/resource\n\n//-s, --symbolic\n\n# ln –s /usr/share/doc doc\n\n//为所有用户配置只读共享和读写共享\n\n# vi /etc/samba/smb.conf\n\n[tmp]\n\n    comment = Temporary file space\n\n    path = /tem\n\n    read only = no\n\n    public = yes\n\n \n\n[cdrom]\n\n    comment = CDROM\n\n    path = /mnt/cdrom\n\n    read only = yes\n\npublic = yes\n\n//为指定用户或组配置共享\n\n# useradd samba\n\n# passwd samba\n\n# mkdir /var/samba/samba\n\n//更改目录属主\n\n# chown samba.samba /var/samba/samba\n\n# vi smb.conf\n\n \n\n[sambadir]\n\n    comment = Samba's service\n\n    path = /var/samba/samba\n\n    valid users = samba\n\n    public = no\n\nwritable = yes\n\n \n\n//保存修改\n\n//Linux环境下访问Samba共享\n\n# cat /etc/samba/lmhosts\n\n# smbclient –L IP –U 用户名\n\n# smbmount //win/tools /mnt/smb/win\n\n \n\nlinux smb.conf详解\n\n17行workgroup\n\n语法 workgtoup = <工作组群>;\n预设 workgroup = MYGROUP\n说明 设定 Samba Server 的工作组\n例 workgroup = workgroup 和WIN2000S设为一个组，可在网上邻居可中看到共享\n\n21行server string\n\n语法 server string = <说明>;\n预设 sarver string = Samba Server\n说明 设定 Samba Server 的注释\n其他 支持变量 t%-访问时间 I%-客户端IP m%-客户端主机名 M%-客户端域名 S%-客户端用户名\n例 server string = this is a Samba Server 设定出现在Windows网上邻居的 Samba Server 注释为 this is a Samba Server\n\n28行hosts allow\n语法 hosts aoolw = <IP地址>; …\n预设 ; host allow = 192.168.1. 192.168.2. 127.\n说明 限制允许连接到 Samba Server 的机器，多个参数以空格隔开。表示方法可以为\n完整的IP地址，如 192.168.0.1\n网段，如 192.168.0.\n例 hosts allow = 192.168.1. 192.168.0.1 表示允许192.168.1 网段的机器 网址为192.168.0.1 的机器 连接到自己的samba server\n\n32行printcap name\n\n语法 printcap name = <打印机配置文件>;\n预设 printcap name = /etc/printcap\n说明 设定 samba srever 打印机的配置文件\n例 printcap name = /etc/printcap 设定 samba srever 参考 /etc/printcap 档的打印机设定\n\n33行load printers\n\n语法 load printers = <yes/no>;\n预设 load printers = yes\n说明 是否在开启 samba server 时即共享打印机\n\n38行printing\n语法 printing = <打印机类型>;\n预设 printing = lprng\n说明 设定 samba server 打印机所使用的类型,37行为目前所支持的类型\n\n42行guest account\n语法 guert account = <帐户名称>;\n预设 guert account = pcguest\n说明 设定访问 samba server 的来宾帐户(即访问时不用输入用户名和密码的帐户),若设为pcguest的话则为默认为”nobody”用户\n例 guert account = andy 设定设定访问 samba server 的来宾帐户以andy用户登陆,则此登陆帐户享有andy用户的所有权限\n\n46行log file\n语法 log file = <日志文件>;\n预设 log file = /var/log/samba/%m.log\n说明 设定 samba server 日志文件的储存位置和文件名(%m代表客户端主机名)\n\n49行max log size\n语法 max log size = <??KB>;\n预设 max log size = 0\n说明 设定日子文件的最大容量,单位KB 这里的预设值0代表不做限制\n\n53行security\n语法 security = <等级>;\n预设 security = user\n说明 设定访问 samba server 的安全级别 共有四种\nshare—不需要提供用户名和密码\nuser—-需要提供用户名和密码,而且身份验证由 samba server 负责\nserver–需要提供用户名和密码,可指定其他机器(winNT/2000/XP)或另一台 samba server作身份验证\ndomain–需要提供用户名和密码,指定winNT/2000/XP域服务器作身份验证\n\n60行password server\n语法 password server = <IP地址/主机名>;\n预设 password server = <NT-Server-Name>;\n说明 指定某台服务器(包括windows 和 linux)的密码,作为用户登入时验证的密码\n其他 此项需配合 security = server时,才可设定本参数\n\n64行password level\n65行username level\n语法 password level = <位数>;\nusername level = <位数>;\n预设 password level = 8\nusername level = 8\n说明 设定用户名和密码的位数,预设为8位字符\n\n70行encrypt passwords\n语法 encrypt passwords = <yes/no>;\n预设 encrypt passwords = yse\n说明 设定是否对samba的密码加密\n\n71行smb passwd file\n语法 smb passwd file = <密码文件>;\n预设 smb passwd file = /etc/samba/smbpasswd\n说明 设定samba的密码文件\n\n130行local master\n语法 local master = <yes/no>;\n预设 local master = no\n说明 设定 samba server 是否要担当LMB角色(LMB负责收集本地网络的Browse List资源),通常无特殊原因设为no\n\n134行os level = 33\n语法 os level = <数字>;\n预设 os level = 33\n说明 设定 samba server的os level. os level从 0 到 255 . winNT的os level为33, win95/98的os level 是 1 .\n若要拿samba server 当LMB或DMB则它的os level至少要大于NT的33以上\n\n139行domain master\n语法 domain master = <yes/no>;\n预设 domain master = yes\n说明 设定 samba server 是否要担当DMB角色(DMB会负责收集其他子网的Browse List资源),通常无特殊原因设为no\n\n143行preferred master\n语法 preferred master = <yes/no>;\n预设 preferred master = yes\n说明 设定 samba server 是否要担当PDC角色(PDC会负责追踪网络帐户进行的一切变更),通常无特殊原因设为no.\n(同一网段内不可有两个PDC,他们会每5分钟抢主控权一次)\n\n163行wins support\n语法 wins support = <yes/no>;\n预设 wins support = yes\n说明 设定samba server 是否想网络提供WINS服务,通常无特殊原因设为no.\n除非所处网络上没有主机提供WINS服务且需要此台samba server提供WINS服务是才设yes\n其他 wins support 和 wins server 只能选择一个\n\n167行wins server\n语法 wins server = <IP地址>;\n预设 wins server = w.x.y.z\n说明 设定samba server 是否要使用别台主机提供的WINS服务.通常无特殊原因设为no.除非所处网络上有一台主机提供WINS服务才要设yes\n其他 wins support 和 wins server\n例 wins server = 192.168.0.1 表示samba server要使用192.168.0.1提供的WINS服务\n\n#============================== Share Definitions =============================\n\n[homes]\ncomment = Home Directories\nbrowseable = no\nwritable = yes\nvalid users = %S\n\n使用者本身的”家”目录，当使用者以samba使用者身份登入samba server 后，\nsamba server 底下会看到自己的家目录，目录名称是使用者自己的帐号\n\n[分享的资源名称]\n<指令1>; = (参数)\n<指令2>; = (参数)\n……………………..\n\n要提供分享资源时，须先把欲分享的资源以 [ ] 符号括住，底下通常会带指令和参数来表示此资源的设定和存取权限等,详情如下\n\ncomment———注释说明\npath————分享资源的完整路径名称，除了路径要正确外，目录的权限也要设对\nbrowseable——是yes/否no在浏览资源中显示共享目录，若为否则必须指定共享路径才能存取\nprintable——-是yes/否no允许打印\nhide dot ftles–是yes/否no隐藏隐藏文件\npublic———-是yes/否no公开共享，若为否则进行身份验证(只有当security = share 时此项才起作用)\nguest ok——–是yes/否no公开共享，若为否则进行身份验证(只有当security = share 时此项才起作用)\nread only——-是yes/否no以只读方式共享当与writable发生冲突时也writable为准\nwritable——–是yes/否no不以只读方式共享当与read only发生冲突时，无视read only\nvaild users—–设定只有此名单内的用户才能访问共享资源(拒绝优先)(用户名/@组名)\ninvalid users—设定只有此名单内的用户不能访问共享资源(拒绝优先)(用户名/@组名)\nread list——-设定此名单内的成员为只读(用户名/@组名)\nwrite list——若设定为只读时，则只有此设定的名单内的成员才可作写入动作(用户名/@组名)\ncreate mask—–建立文件时所给的权限\ndirectory mask–建立目录时所给的权限\nforce group—–指定存取资源时须以此设定的群组使用者进入才能存取(用户名/@组名)\nforce user——指定存取资源时须以此设定的使用者进入才能存取(用户名/@组名)\nallow hosts—–设定只有此网段/IP的用户才能访问共享资源\nallwo hosts = 网段 except IP\ndeny hosts——设定只有此网段/IP的用户不能访问共享资源\n\nallow hosts=本网段指定IP指定IP\n\ndeny hosts=指定IP本网段指定IP\n\nSamba的主配置文件。但所包含的内容并不是很全，详见man smb.conf\n所有以;或#开头的行为注释行，将被忽略掉。在这个例子中我们使用；表示可以由你来修改或设置的部分，而#则表示真正意义上的注释。\n注意：不论你何时何地修改了这个文件，你都应运行一下命令“testparm“来测试你是否犯了一些基本语法的错误。\n1、全局设置\n[global]\n# workgroup = NT-Domain-Name or Workgroup-Name\nworkgroup = MYGROUP\n下面的这句话是后加的，加入的意义为：使WIN用户可以看到主机的名字，但我将此行注释掉后，没看到什么影响。\nnetbios name = express\n下面设置的是服务器的字符串，相当于NT中的计算机说明部分\nserver string = Samba Server\n下面的选项对于安全性很重要。他允许你对是否可以进行本地网络连接的机器进行了限制。\nhosts allow = 192.168.1.50 192.168.1.43 192.168.1.44 192.168.1.45 192.168.1.46 192.168.1.47 192.168.1.48 192.168.1.49\n如果想要自动共享打印机而不是个别地进行单独设置，使用下面的选项：\nprintcap name = /etc/printcap\nload printers = yes\n除非你是非标准的，否则下面的选项对于你说清楚打印系统的类型并不是很必要。当前支持的打印系统主要有以下几类：\n# bsd, sysv, plp, lprng, aix, hpux, qnx, cups\nprinting = cups\n如果想要一个guest账号的话就不用注释下面的行。你必须把这个加入到/etc/passwd中，否则用户“nobody“会被使用。\n; guest account = pcguest\n下面的选项告诉samba对不同的机器连接使用不同的日志文件。小心如果你允许访问的机器太多的话，文件可能极多哟！！！：）\nlog file = /var/log/samba/%m.log\n设置log文件的大小（KB）（# Put a capping on the size of the log files (in Kb).）\nmax log size = 0\n安全格式。大多数用户使用用户级安全。详见security_level.txt。\nsecurity = share\n使用密码服务选项，仅用于security = server模式\n参数列表可以包括：\n# password server = My_PDC_Name [My_BDC_Name] [My_Next_BDC_Name]\n# 或自动查找域控制器\n# password server = *\n; password server = \n对于所有的上面和下面的组成部分的_n_characters密码所允许的匹配级别\n; password level = 8\n; username level = 8\n你可能想使用密码编码。见在samba文档中的ENCRYPTION.txt, Win95.txt和WinNT.txt。\n除非你已经仔细的读过了那些文档，否则不要激活下面的选项：\nencrypt passwords = yes\nsmb passwd file = /etc/samba/smbpasswd\n当samba被建成为支持SSL的模式时，下面需要从大量的假的错误中保持smbclient。（原文如下：\n# The following is needed to keep smbclient from spouting spurious errors\n# when Samba is built with support for SSL.\n; ssl CA certFile = /usr/share/ssl/certs/ca-bundle.crt\n下面的选项需要允许从windows对linux系统的密码进行修改。\n# 注意：上面带有’encrypt passwords’ 和’smb passwd file’选项使用这些。\n# 另： 如果仅是允许工作站改变加密的SMB密码那么你不需要这些。它们允许Unix密码与SMB密码保持同步。\nunix password sync = Yes\npasswd program = /usr/bin/passwd %u\npasswd chat = *New*password* %n\\n *Retype*new*password* %n\\n *passwd:*all*authentication*tokens*updated*successfully*\n你可以使用PAM的密码改变控制标记。如果激活的活，当一个SMB客户端请求代替了在密码程序列表时，PAM将用于密码改变。对于大多数的设置，不改变密码字符参数而激活这个也是可能的。\npam password change = yes\nUnix用户可能映射不同的SMB用户名。\nusername map = /etc/samba/smbusers\n在每一台机器的基础上，使用下面的行可以使你定制你的配置。%m以连接机器的netbios名代替。\n; include = /etc/samba/smb.conf.%m\n这个参数控制samba是否服从于PAM账号和对话管理指示。默认情况下是使用PAM仅清除文本证明且忽略任何的账号或对话管理。注意：当加密密码=yes时，samba总是忽略PAM的证明。\nobey pam restrictions = yes\n很多人都会发现这个选项优化了性能。详见speed.txt和帮助手册页。\nsocket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192\n配置samba使用多重接口。\n如果你有多个网络接口的话，必须把他们在下面列出来。详见man。\n; interfaces = 192.168.12.2/24 192.168.13.2/24\n配置请求播出同步到远程浏览器，或从一个主机同步浏览器列表或从/到整个子网（如下）。\n; remote browse sync = 192.168.3.25 192.168.5.255\n使主机将自己广播到本地的子网。\n; remote announce = 192.168.1.255 192.168.2.44\n浏览器控件选项：\n如果你不想让你的samba在你的网络中变成一个主浏览器，那么设置local master为no，否则将采用正常的规则。\n; local master = no\nos level决定在主浏览器的中被提取的优先级。默认值是很合理的。\n; os level = 33\n域master指定samba是域主浏览器。这允许samba在子网之间比较浏览列表。如果你已经有了一个Win NT的主域控制器的话，就不要设置这个选项。\n; domain master = yes\n首选master使samba在启动时拒绝一个本地浏览器的选出，且给他一些小的较高的机会让其来选出。\n; preferred master = yes\n如果你要samba成为Win95工作站的域登录服务器的话则激活它。\n; domain logons = yes\n如果你激活了domain logons，那么你可以让每一台机器或每一个用户登录角本运行一个指定的登录批处理文件。原文如下：if you enable domain logons then you may want a per-machine or per user logon script run a specific logon batch file per workstation (machine)\n; logon script = %m.bat\n每一个用户名都运行一个指定的登录批处理文件\n; logon script = %U.bat\n# 存储动态的profile（仅针对95与NT）\n# %L 代表netbios name, %U 是一个用户名\n# 不能注释掉下面的[Profiles]共享。\n; logon path = \\%L\\Profiles\\%U\n支持WINS部分：告诉samba组件的NMBD去激活WINS服务。\n; wins support = yes\nWINS服务器-告诉samba组件的NMBD成为一个WINS客户端。\n注意：samba即可以是一个WINS服务器，也可以是一个客户端，或都不是。\n; wins server = w.x.y.z\nWINS 代理-原文如下，没法翻译（Tells Samba to answer name resolution queries on behalf of a non WINS capable client,），执行这件事必须要求在网络中至少有一个Wins服务器。默认情况下是NO。\n; wins proxy = yes\n# DNS Proxy – 告诉samba是否经过DNS的nslookup试着去解析NETBIOS名。1.9.17的内置默认值是yes，目前已经改为1.9.18的no。\ndns proxy = no\n实例保存可以很简洁-系统默认值是_no_\n注意：可以在每一个共享基础上设置\n; preserve case = no\n; short preserve case = no\n默认实例是对于所有的DOS文件都大写\n; default case = lower\n对于此选项要很小心-它可能带来一些想不到的事情。\n; case sensitive = no\n[homes]\ncomment = Home Directories\nbrowseable = no\nwritable = yes\nvalid users = %S\ncreate mode = 0664\ndirectory mode = 0775\n如果不想要samba不承认已经映射为guest的用户，可用如下设置\n; map to guest = bad user\n如果想创建netlogon目录给域登录，不要注释下面的内容。\n; [netlogon]\n; comment = Network Logon Service\n; path = /usr/local/samba/lib/netlogon\n; guest ok = yes\n; writable = no\n; share modes = no\n想提供一个指定的不固定的共享profile那么就不要注释下面的内容，默认使用用户主目录。\n;[Profiles]\n; path = /usr/local/samba/profiles\n; browseable = no\n; guest ok = yes\n注意：如果你有一个BSD风格的打印系统，则没有必须单独的特别指定每一个打印机。\n[printers]\ncomment = All Printers\npath = /var/spool/samba\nbrowseable = no\n设置public=yes表示允许’guest account’打印\nguest ok = no\nwritable = no\nprintable = yes\n下面的内容对人们共享文件是有用的。\n;[tmp]\n; comment = Temporary file space\n; path = /tmp\n; read only = no\n; public = yes\n公用的可访问的目录，除了在staff组中的成员外，对其它人为只读\n;[public]\n; comment = Public Stuff\n; path = /home/nw\n; public = yes\n; writable = yes\n; printable = no\n; write list = @staff\n私有打印机，仅仅fred本人可用。打印池中的数据将被放到fred的主目录中。注意：fred用户无论在什么地方都必须对打印池有写访问的权限。\n;[yingou]\n; comment = qlj’s Printer\n; valid users = yingouqlj\n; path = /home/yingouqlj\n; public = no\n; writable = no\n; printable = yes\n私有目录，仅能对fred开放。注意fred对这个目录需要写访问的权限。\n;[fredsdir]\n; comment = qlj’s Service\n; path = /usr/somewhere/private\n; valid users = yingouqlj\n; public = no\n; writable = yes\n; printable = no\n允许你制作配置文件去引入的连接到这里的每一台机器都有不同的目录的服务。\n使用%U选去配置用户名，%m代替连接到的机器名。\n;[yingouqlj]\n; comment = PC Directories\n; path = /usr/local/pc/%m\n; public = no\n; writable = yes\n公共可访问的目录，对所有的用户都可读/写。注意：在这个目录中的所有由用户创建的文件都会被标识成默认用户所有。所以有访问仅限的用户可以删除别的用户的文件。很明显这个目录必须是可以被默认用户写的。另一个用户当然可以指定，这样所有的文件都将被那个用户所替代。\n[public]\npath = /tmp/aaaa\npublic = yes\nguest ok = yes\nwritable = yes\nprintable = no\n下面的两个例子是怎样共享一个目录给两个用户，在这个共享目录中他们可以放置文件且分别属于各自所有。在这个设置中，目录将可以被两个用户同时使用且在其上有粘滞位保护。很明显，可以扩展为多个用户的情况。\n;[myshare]\n; comment = Mary’s and Fred’s stuff\n; path = /usr/somewhere/shared\n; valid users = mary fred\n; public = no\n; writable = yes\n; printable = no\n; create mask = 0765\n以下是个人实际的设置\n[sharedir]\npath = /home/nw\npublic = yes\nguest ok = yes\nwritable = yes\n\n\n在RHEL下如何使用VPN？怎么往一个Samba(SMB)共享里添加一个用户？  2007-09-10 21:28:13|  分类： 默认分类 |  标签： |字号大中小 订阅 \n\n允许用户浏览Samba共享的一种方法是在Samba服务器上拥有一个UNIX帐号。可以通过命令 adduser [用户名] 和 passwd [用户名]来建立UNIX帐号。 \n\n当用户有了一个本地帐号，他的Samba密码可以这样初始化： \n\n    smbpasswd -a [用户名]-a选项增加用户名到Samba的密码文件里面里。 \n\n在/etc/smb.conf配置文件里修改Samba共享，允许新增加的用户浏览该共享资源。 \n\n[ashare]    comment = A Shared Directory    path = /usr/somewhere/shared    valid users = mary [新用户]    public = no    writable = yes用testparm显示升级后的共享资源。\n用service smb reload命令重载smb.conf配置文件。 \n\n-- Create the user \ncreate user NC56\n  identified by \"nc56\"\n  default tablespace NNC_DATA01\n  temporary tablespace TEMP\n  profile DEFAULT;\n-- Grant/Revoke role privileges \ngrant connect to NC56 with admin option;\ngrant dba     to NC56 with admin option;\n\n\n\n```\n\n#### Linux 压缩命令汇总\n\n```bash\n09在Windows下最常见的压缩文件就只有两种，一是,zip，另一个是.rar。可是Linux就不同了，它有.gz、.tar.gz、tgz、bz2、.Z、.tar等众多的压缩文件名，此外windows下的.zip和.rar也可以在Linux下使用，不过在Linux使用.zip和.rar的人就太少了。本文就来对这些常见的压缩文件进行一\n番小结，希望你下次遇到这些文件时不至于被搞晕icon_smile.gif\n\n　　在具体总结各类压缩文件之前呢，首先要弄清两个概念：打包和压缩。打包是指\n将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压\n缩算法变成一个小文件。为什么要区分这两个概念呢？其实这源于Linux中的很多压\n缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就得先借助\n另它的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。\n\n　　Linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包\n，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进\n行压缩了，所以首先就来讲讲tar命令的基本用法：\n\n　　tar命令的选项有很多(用man tar可以查看到)，但常用的就那么几个选项，下面\n来举例说明一下：\n\n　　# tar -cf all.tar *.jpg\n　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包\n，-f指定包的文件名。\n\n　　# tar -rf all.tar *.gif\n　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的\n意思。\n# tar -uf all.tar logo.gif\n　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\n\n\n　　# tar -tf all.tar\n　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思\n\n　　# tar -xf all.tar\n　　这条命令是解出all.tar包中所有文件，-x是解开的意思\n\n　　以上就是tar的最基本的用法。为了方便用户在打包解包的同时可以压缩或解压\n文件，tar提供了一种特殊的功能。这就是tar可以在打包或解包的同时调用其它的压\n缩程序，比如调用gzip、bzip2等。\n\n　　1) tar调用gzip\n\n　　gzip是GNU组织开发的一个压缩程序，.gz结尾的文件就是gzip压缩的结果。与gzip\n相对的解压程序是gunzip。tar中使用-z这个参数来调用gzip。下面来举例说明一下\n：\n\n　　# tar -czf all.tar.gz *.jpg\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个\ngzip压缩过的包，包名为all.tar.gz\n\n　　# tar -xzf all.tar.gz\n　　这条命令是将上面产生的包解开。\n\n　　2) tar调用bzip2\n\n　　bzip2是一个压缩能力更强的压缩程序，.bz2结尾的文件就是bzip2压缩的结果。\n与bzip2相对的解压程序是bunzip2。tar中使用-j这个参数来调用gzip。下面来举例\n说明一下：\n\n　　# tar -cjf all.tar.bz2 *.jpg\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个\nbzip2压缩过的包，包名为all.tar.bz2\n\n　　# tar -xjf all.tar.bz2\n　　这条命令是将上面产生的包解开。\n3)tar调用compress\n\n　　compress也是一个压缩程序，但是好象使用compress的人不如gzip和bzip2的人\n多。.Z结尾的文件就是bzip2压缩的结果。与 compress相对的解压程序是uncompress\n。tar中使用-Z这个参数来调用compress。下面来举例说明一下：\n\n　　# tar -cZf all.tar.Z *.jpg\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成\n一个uncompress压缩过的包，包名为all.tar.Z\n\n　　# tar -xZf all.tar.Z\n　　这条命令是将上面产生的包解开\n\n　　有了上面的知识，你应该可以解开多种压缩文件了，下面对于tar系列的压缩文\n件作一个小结：\n\n　　1)对于.tar结尾的文件\n\n　　tar -xf all.tar\n\n　　2)对于.gz结尾的文件\n\n　　gzip -d all.gz\n　　gunzip all.gz\n\n　　3)对于.tgz或.tar.gz结尾的文件\n\n　　tar -xzf all.tar.gz\n　　tar -xzf all.tgz\n\n　　4)对于.bz2结尾的文件\n\n　　bzip2 -d all.bz2\n　　bunzip2 all.bz2\n\n　　5)对于tar.bz2结尾的文件\n\n　　tar -xjf all.tar.bz2\n\n　　6)对于.Z结尾的文件\n\n　　uncompress all.Z\n\n　　7)对于.tar.Z结尾的文件\n\n　　tar -xZf all.tar.z\n\n　　另外对于Window下的常见压缩文件.zip和.rar，Linux也有相应的方法来解压它\n们：\n\n　　1)对于.zip\n\n　　linux下提供了zip和unzip程序，zip是压缩程序，unzip是解压程序。它们的参\n数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n　　# zip all.zip *.jpg\n　　这条命令是将所有.jpg的文件压缩成一个zip包\n# unzip all.zip\n　　这条命令是将all.zip中的所有文件解压出来\n\n　　2)对于.rar\n\n　　要在linux下处理.rar文件，需要安装RAR for Linux，可以从网上下载，但要记\n住，RAR for Linux\n不是免费的；可从[url]http://www.rarsoft.com/download.htm[/url]下载RARfor Linux 3.2.\n0，然后安装：\n\n　　# tar -xzpvf rarlinux-3.2.0.tar.gz\n　　# cd rar\n　　# make\n\n　　这样就安装好了，安装后就有了rar和unrar这两个程序，rar是压缩程序，unrar\n是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n\n　　# rar a all *.jpg\n　　这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar\n扩展名将自动附加到包名后。\n\n　　# unrar e all.rar\n　　这条命令是将all.rar中的所有文件解压出来\n\n　　到此为至，我们已经介绍过linux下的tar、gzip、gunzip、bzip2、bunzip2、compress\n、 uncompress、 zip、unzip、rar、unrar等程式，你应该已经能够使用它们对.tar\n、.gz、.tar.gz、.tgz、.bz2、.tar.bz2、. Z、.tar.Z、.zip、.rar这10种压缩文\n件进行解压了，以后应该不需要为下载了一个软件而不知道如何在Linux下解开而烦\n恼了。而且以上方法对于Unix也基本有效。\n\n　　本文介绍了linux下的压缩程式tar、gzip、gunzip、bzip2、bunzip2、compress\n、uncompress、 zip、 unzip、rar、unrar等程式，以及如何使用它们对.tar、.gz\n、.tar.gz、.tgz、.bz2、.tar.bz2、.Z、. tar.Z、.zip、.rar这10种压缩文件进行\n操作。\n```\n\n","slug":"Linux-Shell-jichu","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjl9jaoch0022wswkbmvx4ncv","content":"<h2 id=\"第一讲\"><a href=\"#第一讲\" class=\"headerlink\" title=\"第一讲\"></a>第一讲</h2><p>zh_CN.GB18030<br><code>cat /etc/shells</code> 可以查看系统的 shell 种类。<code>echo $SHELL</code> 查看当前使用的shell。在当前shell中运行其它shell，例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /bin/csh ls -lh。 </span></span><br><span class=\"line\">chomod u=rwx,g+w,o+r file </span><br><span class=\"line\">chown -R jack /etc/<span class=\"built_in\">test</span>/ <span class=\"comment\">#把这个目录下所有的子目录和文件的拥有者都改变成jack</span></span><br></pre></td></tr></table></figure>\n<p>把这个目录下所有的子目录和文件的拥有者都改变成jack。</p>\n<p><code>chown jack.jack /etc/test/ -R</code><br>umask   文件   目录<br>0    6    7<br>1    5    6<br>2    4    5<br>3    3    4<br>4    2    3<br>5    1    2<br>6    0    1<br>7    0    0<br>/etc/profile 文件中可以设定 umask 值。</p>\n<p><code>alias ll=&#39;ls -alh&#39;</code></p>\n<p><code>cat $HOME/.bashrc</code> , 别名都放在这个文件中。</p>\n<p>命令替换：<code>ls \\</code>cat myfile` -al`，这个反引号就是1左边的键，把myfile的内容输出到ls的输入。<br>后台运行：# nohup tar -czf abc.tar.gz /etc/abc/ &amp;。jobs -l查看后台运行情况。<br>模式匹配：ls *.txt -l。</p>\n<h2 id=\"第二讲\"><a href=\"#第二讲\" class=\"headerlink\" title=\"第二讲\"></a>第二讲</h2><p>本地变量在用户现在的shell生命期的脚本中使用，例在当前shell中设置变量，ABC=123，然后exit退出当前shell，再进入系统用set指令(显示本地变量)发现ABC变量无。readonly ABC，把ABC设置成只读变量。只是用readonly指令显示当前shell中有哪些只读变量。</p>\n<p>环境变量用于所有用户进程（经常称为子进程）。登录进程称为父进程，shell中执行的用户进程均称为子进程。不像本地变量(只用于现在的shell)环境变量可用于所有子进程，这包括编辑器，脚本和应用。<br>$HOME/.bash_profile(/etc/profile)<br>export，例：export ABC=”shell program”，把ABC这个变量变成环境变量。直接输入export也可以查看环境变量有哪些。readonly ABC，把环境变量ABC变成只读的。</p>\n<p>变量替换：<br>${var name}    显示实际值到var name<br>${var name:+value}    如果设置了var name，则显示其值value，否则为空<br>${var name:?value}    如果未设置var name，显示用户定义错误信息value<br>${var name:-value}    如果未设置var name，显示其值value，如果设置了var name则显示var name的值<br>${var name:=value}    如果未设置var name，设置其值并显示，如果设置了var name则显示var name的值<br>env<br>unset ABC，删除ABC变量，但是用readonly声明的变量是不能被unset的。</p>\n<p>位置变量：先看下面的脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#parms</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"program name is <span class=\"variable\">$0</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"1 parm is <span class=\"variable\">$1</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"2 parm is <span class=\"variable\">$2</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"3 parm is <span class=\"variable\">$3</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"4 parm is <span class=\"variable\">$4</span>\"</span></span><br></pre></td></tr></table></figure>\n<p>然后运行这个脚本：./parms a b c d，就会显示结果,$0表示脚本名称，$1-9分别表示位置变量名，在运行脚本时代入脚本中。<br>再例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#parm.sh</span></span><br><span class=\"line\">find /home/chinaitlab/shell -name <span class=\"variable\">$1</span> -<span class=\"built_in\">print</span></span><br></pre></td></tr></table></figure>\n<p>然后运行这个脚本: <code>./parm.sh abc.txt</code> 。</p>\n<p>标准变量：bash 默认建立了一些标准环境变量，可在 /etc/profile 中定义。<br> EXINIT，运行 vi 时初始化设置一些参数<br>HOME<br>IFS<br>LOGNAME<br>MAIL<br>MAILCHECK<br>MAILPATH<br>PATH<br>PS1<br>PS2<br>SHELL<br>TERMINFO<br>TERM<br>TZ<br>EDITOR<br>PWD<br>MANPATH</p>\n<p>特殊变量：<br>$#(传递到脚本的参数个数)<br>$*(以一个单字符串显示所有向脚本传递的参数。与位置变量不同，此选项参数可超过9个)<br>$$(脚本运行的当前进程ID号)<br>$!(后台运行的最后一个进程的进程ID号)<br>$@(与$#相同，但是使用时加引号，并在引号中返回每个参数)<br>$-(显示shell使用的当前选项，与set命令功能相同)<br>$?(显示最后命令的推出状态。0表示没有错误，其它任何值表明有错误)</p>\n<p>影响变量的命令：<br>declare<br>-设置或显示变量<br>-f 只显示函数名<br>-r 创建只读变量(declare和typeset)<br>-x 创建转出变量<br>-i 创建整数变量</p>\n<ul>\n<li>使用+替代-，可以颠倒选项的含义<br>export<br>-用于创建传给予shell的变量(环境变量)</li>\n<li>–表明选项结束，所有后续参数都是实参</li>\n<li>-f表明在”名-值”对中的名字是函数名</li>\n<li>-n把全局变量转换成局部变量，换句话说，命令的变量不再传给shell</li>\n<li>-p显示全局变量列表<br>unset</li>\n<li>用于取消变量的定义</li>\n<li>–表明选项结束</li>\n<li>-f删除只读变量，但不能取消从shell环境中删除指定的变量和函数如：PATH，PS1，PS2，PPID，UID，EUID等的设置。<br>shift[n]</li>\n<li>用于移动位置变量，调整位置变量，使$3的值赋予$2,$2的值赋予$1。<br>typeset<br>-用于显示或设置变量<br>-是declare的同义词</li>\n</ul>\n<p>引号：<br>使用双引号可以引用除字符$,<code>(反引号),\\外的任意字符或字符串。例：echo -e &quot;ert, $SHELL&#39;\\n* china</code>echo itlab<code>&quot;。\n单引号会忽略其中所有的特殊含义的字符，例：echo &#39;ert, $SHELL * china</code>echo itlab`’。<br>反引号用于设置系统命令的输出到变量，shell将反引号中的内容作为一个系统命令，并执行其内容。<br>反斜杠：如果一个字符有特殊含义，反斜杠防止shell误解其含义，即屏蔽其特殊含义，这些字符有特殊含义： $,<em>,+,&amp;,”,|,?,^例：echo </em>，显示当前目录下的所有文件名，echo *，则显示*。</p>\n<p>运算符类型：<br>按位运算符    ~,&lt;&lt;,&gt;&gt;,&amp;,|,^<br>运算符        说明<br>~op1        反运算符，把op1中所有的二进制为1变为0，0变为1<br>op1&lt;<op2 左移运算符，把op1中的二进制位向左移动op2位，忽略最左端移出的各位，最右端的各位补0值，每做一次按位左移就有实现op1乘以2。=\"\" op1=\"\">&gt;op2    右移运算符，把op1中的二进制位向右移动op2位，忽略最右端移出的各位，最左端的各位补0值，每做一次按位右移就有实现op1除以2。<br>op1&amp;op2        与比较运算符，op1和op2对应位，对于每个二进制位来说，如果二者该位都是1，则结果为1，否则为0。<br>op1^op2        异或运算符，op1和op2对应位，对于每个二进制位来说，如果二者该位互补，则结果为1否则为0。<br>op1|op2        或运算符。<br>$[]表示形式告诉shell对方括号中的表达式求值，例：echo $[2+8]，echo $[2&gt;&gt;8]，echo $[2&lt;&lt;4]，echo $[2^4]，echo $[~3]。<br>逻辑运算符：&amp;&amp;,||,&gt;,==,&lt;,!=例：echo $[2&amp;&amp;2]，echo $[1||0]。<br>赋值运算符：=,+=,-=,*=,/=,%=,&amp;=,^=,|=,&lt;&lt;=,&gt;&gt;=<br>let $count=$count+$change<br>let $count+=$change<br>$[]可以接受不同基数的数字</op2></p>\n<ul>\n<li>[ base#n ] n表示基数从2到36的任何基数，例：echo $[10#8+1]，8进制的10加上1，结果为9。</li>\n</ul>\n<h2 id=\"第三讲-Shell-输入与输出\"><a href=\"#第三讲-Shell-输入与输出\" class=\"headerlink\" title=\"第三讲 Shell 输入与输出\"></a>第三讲 Shell 输入与输出</h2><p>echo [option] string</p>\n<ul>\n<li>e解析转义字符</li>\n<li>-n回车不换行，linux系统默认回车换行，例：echo “hello”和echo -n “hello”的区别。</li>\n<li>string中的转义符(\\c,\\f,\\t,\\n)，\\c表示回车不换行，\\f表示禁止，\\t表示跳格(tab)，\\n表示回车换行<br>例：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#echod</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"This echo's 3 new lines\\n\\n\\n\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"OK\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"This echo's 3 new lines\\n\\n\\n\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"The log files have all been done\"</span>&gt;mylogfile.txt</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>read语句可以从键盘或文件的某一行文本中读入信息，并将其赋给一个变量。<br>read var1 var2…<br>-如果只指定了一个变量，那么read将会把所有的输入赋给该变量，直至遇到第一个文件结束符或回车；如果给出了多个变量，他们按顺序分别被赋予不同的变量。shell将用空格作为变量之间的分隔符。<br>例：</p>\n<p>#!/bin/bash</p>\n<p>#readname<br>echo -n “First name:”<br>read firstname<br>echo -n “Last name:”<br>read lastname<br>echo -e “Your First Name is :${firstname}\\n”<br>echo -e “Your Last Name is :${lastname}\\n”</p>\n<p>cat可显示文件内容，创建文件还可以显示控制字符。<br>cat [options] file1 file2…</p>\n<ul>\n<li>-v显示控制字符<br>使用cat命令时要注意，它不会在文件分页符处停下来，它会一下显示完整个文件，如果希望每次显示一页，可以使用more。例：cat file1 file2 file3，会在屏幕上同时显示三个文件的内容，cat file1 file2 file3&gt;file123，会把这三个文件的内容合并到一个文件file123中，cat -v dos.txt，显示这个windows下生成的文件，并显示控制字符(这些控制字符是在windows生成这个文件时加入的)。<br>管道举例：df -k|awk ‘{print $1}’|grep -v “Filesystem”。<br>tee命令把输出的一个副本输送到标准输出，另一个副本拷贝到相应的文件中。<br>tee -a files</li>\n<li>如果希望在看到输出的同时，也将其存入一个文件，那么这个命令再合适不过了，一般用于管道之后，-a参数表示追加写入files中，如果没有-a参数，则覆盖写入这个文件中。例：who | tee -a who.out。</li>\n</ul>\n<p>标准输入输出和错误<br>在shell中执行命令时，每个进程都和三个打开的文件相联系，并使用文件描述符来引用这些文件，由于文件描述符不容易记忆，shell同时给出了相应的文件名。<br>文件            文件描述符<br>输入文件-标准输入    0(缺省是键盘，也可以是文件或其它命令的输出)<br>输出文件-标准输出    1(缺省是屏幕，也可以是文件)<br>错误输出文件-标准错误    2(缺省是屏幕，也可以是文件)<br>系统中实际上有12个文件描述符，可以任意使用文件描述符3到9。</p>\n<p>文件重定向<br>command &gt; file        把标准输出重定向到一个新文件中<br>command &gt;&gt; file        把标准输出重定向到一个文件中(追加)<br>command 1 &gt; file    把标准输出重定向到一个文件中<br>command &gt; file 2&gt;&amp;1    把标准输出和标准错误一起重定向到一个文件中<br>command 2 &gt; file    把标准错误重定向到一个文件中<br>command 2&gt;&gt; file    把标准输出重定向到一个文件中(追加)<br>command &gt;&gt; file 2&gt;&amp;1    把标准输出和标准错误一起重定向到一个文件中(追加)<br>command &lt; file &gt; file2    command命令以file作为标准输入，file2文件作为标准输出<br>command &lt; file        command命令以file作为输入<br>command &lt;&lt; dclimiter    从标准输入中读入，直至遇到dclimiter分界符<br>command &lt; &amp;m        把文件描述符m作为标准输入<br>command &gt; &amp;m        把标准输出重定向到文件描述符m中<br>command &lt; &amp;-        关闭标准输入<br>例：&gt;nullfile，创建一个新的空文件。sort &lt; file，把file作为输入源，排序然后输出到屏幕上。sort &lt; name.txt &gt; name.out。cat account_new.txt account_old.txt 1&gt;accounts.out 2&gt;accounts.err，account_new.txt存在，account_old.txt不存在，那么accounts.out将包含account_new.txt的内容，不会包含account_old.txt的内容，account_old.txt不存在的错误信息会写入accounts.err中。<br>合并标准输出和标准错误的时候，切忌shell是从左至右分析相应的命令，例：grep “standard” standard.txt &gt; grep.out 2&gt;&amp;1。</p>\n<p>exec命令可以用来替代当前shell；换句话说，并没有启动子shell，使用这一命令时任何现有环境都会被清除，并重新启动一个shell。<br>exec command<br>-其中的command通常是一个shell脚本。<br>对文件描述符进行操作的时候(也只有在这时)，它不会覆盖你当前的shell。</p>\n<p>文件描述符：<br>3-9文件描述符<br>exec与文件描述符的结合<br>例：</p>\n<p>#!/bin/bash</p>\n<p>#file_desc<br>exec 3&lt;&amp;0 0&lt;name.txt<br>read line1<br>read line2<br>exec 0&lt;&amp;3<br>echo $line1<br>echo $line2</p>\n<h2 id=\"第四讲-控制流结构\"><a href=\"#第四讲-控制流结构\" class=\"headerlink\" title=\"第四讲 控制流结构\"></a>第四讲 控制流结构</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> 条件1</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\t命令1</span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件2</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\t命令2</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t命令3</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#if test</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"10\"</span> -lt <span class=\"string\">\"12\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">   <span class=\"built_in\">echo</span> <span class=\"string\">\"yes,10 is less than 12\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>可以使用man test获得条件的帮助。<br>再例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#iftest2</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter your name:\"</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> NAME</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$NAME</span>\"</span> == <span class=\"string\">\"\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"You did not enter your name\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>再例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#ifcp</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> cp myfile.bak myfile;<span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"good copy\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"built_in\">echo</span> <span class=\"string\">\"basename <span class=\"variable\">$0</span>:error could not copy files\"</span> &gt;&amp;2</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>再例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#ifelif</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter your name:\"</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> NAME</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"variable\">$NAME</span> ] || [ <span class=\"string\">\"<span class=\"variable\">$NAME</span>\"</span> = <span class=\"string\">\"\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you do not enter a name.\"</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"string\">\"<span class=\"variable\">$NAME</span>\"</span> = <span class=\"string\">\"root\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"hello root\"</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"string\">\"<span class=\"variable\">$NAME</span>\"</span> = <span class=\"string\">\"chinaitlab\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"hello chinaitlab\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you are not root or chinaitlab,but hi,<span class=\"variable\">$NAME</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>case语句格式: </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> 值 <span class=\"keyword\">in</span></span><br><span class=\"line\">模式1)</span><br><span class=\"line\">\t命令1</span><br><span class=\"line\">\t;;</span><br><span class=\"line\">模式2)</span><br><span class=\"line\">\t命令2</span><br><span class=\"line\">\t;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure>\n<p>case取值后面必须为单词in，每一个模式必须以右括号结束。取值可以为变量或常数，匹配发现取值符合某一模式后，其间所有命令开始执行直至;;。模式匹配符*表示任意字符,?表示任意单字符，[..]表示类或范围中任意字符。<br>例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#case select </span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter a number from 1 to 3:\"</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> ANS</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"variable\">$ANS</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">1)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you select 1\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">2)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you select 2\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">3)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you select 3\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">Y|y)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you select <span class=\"variable\">$ANS</span>\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"basename <span class=\"variable\">$0</span>:This is not between 1 and 3\"</span> &gt;&amp;2</span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>;</span><br><span class=\"line\">\t;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure>\n<p>for循环格式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 变量名 <span class=\"keyword\">in</span> 列表</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t命令1</span><br><span class=\"line\">\t命令2</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>当变量值在列表里，for循环即执行一次所有命令，使用变量名访问列表中取值。命令可为任何有效的shell命令和语句。变量名为任何单词。In列表用法是可选的，如果不用它，for循环使用命令行的位置参数。in列表可以包含替换，字符串和文件名。<br>例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#forlist1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> loop <span class=\"keyword\">in</span> 1 2 3 4 5</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$loop</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>再例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#forlist2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> loop <span class=\"keyword\">in</span> <span class=\"string\">\"orange red blue grey\"</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"variable\">$loop</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>再例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#forlist2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> loop <span class=\"keyword\">in</span> `cat myfile`</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"variable\">$loop</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">until循环格式：</span><br><span class=\"line\">until 条件</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  命令1</span><br><span class=\"line\">  命令2</span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>注：条件可为任意测试条件，测试发生在循环末尾，因此循环至少执行一次。<br>例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#until_mon</span></span><br><span class=\"line\"><span class=\"comment\">#监控分区</span></span><br><span class=\"line\">Part=<span class=\"string\">\"/backup\"</span></span><br><span class=\"line\"><span class=\"comment\">#得到磁盘使用的百分比</span></span><br><span class=\"line\">LOOK_OUT=`df|grep <span class=\"string\">\"<span class=\"variable\">$Part</span>\"</span>|awk <span class=\"string\">'&#123;print $5&#125;'</span>|sed <span class=\"string\">'s/%//g'</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$LOOK_OUT</span></span><br><span class=\"line\">until [<span class=\"string\">\"<span class=\"variable\">$LOOK_OUT</span>\"</span> gt <span class=\"string\">\"90\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"FileSystem /backup is nearly full\"</span> |mail root</span><br><span class=\"line\">  LOOK_OUT=`df|grep <span class=\"string\">\"<span class=\"variable\">$Part</span>\"</span>|awk <span class=\"string\">'&#123;print $5&#125;'</span>|sed <span class=\"string\">'s/%//g'</span>`</span><br><span class=\"line\">  sleep 3600</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>然后# nohup ./dfuntil &amp;让这个程序在后台运行，一小时检测一次看这个分区的空间占用率是否大于90%。</p>\n<p>while格式：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> 命令</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  命令1</span><br><span class=\"line\">  命令2</span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>注：在while和do之间虽然通常只使用一个命令，但可以放几个命令，命令通常用作测试条件。<br>例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#whileread</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"按住&lt;ctrl&gt;+D退出输入。\"</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">echo</span> -n <span class=\"string\">\"输入你最喜欢的电影：\"</span>;<span class=\"built_in\">read</span> FILM</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"Yeah.<span class=\"variable\">$&#123;FILM&#125;</span>是一部好电影！\"</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>再例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#whileread</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> LINE</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$LINE</span></span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt;names.txt</span><br></pre></td></tr></table></figure></p>\n<p>把names.txt这个文件的内容按每行输出到屏幕。<br>break与continue：<br>break[n]<br>-退出循环，如果是在一个嵌入循环里，可以指定n来跳出的循环个数。<br>例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#breakout</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> :</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter any number[1..5]:\"</span></span><br><span class=\"line\">  <span class=\"built_in\">read</span> ANS</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"variable\">$ANS</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">  1|2|3|4|5)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you enter a number between 1 and 5.\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">  *)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"wrong number,bye.\"</span></span><br><span class=\"line\">\t<span class=\"built_in\">break</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">  <span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>再例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#breakout</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> :</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter any number[1..5]:\"</span></span><br><span class=\"line\">  <span class=\"built_in\">read</span> ANS</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"variable\">$ANS</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">  1|2|3|4|5)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you enter a number between 1 and 5.\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">  *)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"wrong number,continue(y/n)?:\"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> IS_CONTINUE</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$IS_CONTINUE</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\ty|yes|Y|YES)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">continue</span></span><br><span class=\"line\">\t\t\t;;</span><br><span class=\"line\">\t\t*)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">break</span></span><br><span class=\"line\">\t\t\t;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\">  <span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第五讲\"><a href=\"#第五讲\" class=\"headerlink\" title=\"第五讲\"></a>第五讲</h2><p>正则表达式：一种用来描述文本模式的特殊语法，由普通字符(a到z)以及特殊字符(称为元字符，如/,*,?等)<br>匹配的字符串<br>文本过滤工具在某种模式下都支持正则表达式<br>基本元字符集及含义<br>字符    含义<br>^    只匹配行首<br>$    只匹配行尾</p>\n<ul>\n<li>匹配0个或多个此单字符<br>]    只匹配[]内字符，可以是一个单字符，也可以是字符序列。可以使用-表示[]内字符序列范围，如用[1-5]代替[12345]。<br> 只用来屏蔽一个元字符的特殊含义<br> 只匹配任意单字符<br>attern{n}    只用来匹配前面pattern出现次数。n为次数<br>attern{n,}    含义同上，但次数最少为n<br>attern{n,m}    含义同上，但pattern出现次数在n与m之间。<br>例：<br>^d<br>rwxrwxrw-    匹配<br>rw-rw-rw    不匹配<br>^…1<br>482XC56D    不匹配<br>442XW7134    不匹配<br>451ABC123    匹配<br>D11XC9871    匹配<br>trouble$–匹配以单词trouble结尾的所有字符<br>^$–匹配空行<br>^.$–匹配包含一个字符的行<br>用\\屏蔽一个特殊字符，特殊字符有”,’,||,^,<em>,.,+等，\\</em>.pas正则表达式中匹配以*.pas结尾的所有字符或文件。</li>\n</ul>\n<p>逗号将括弧内要匹配的不同字符串分开，用-表示一个字符串范围<br>[0123456789]或[0-9]：任意一个数字<br>[a-z]：任意小写字母<br>[A-Z a-z]：任意大小写字母<br>[A-Z a-z 0-9]：任意字母或数字<br>[S,s]：匹配大小写s</p>\n<p>A{2}B：A出现2次：AAB<br>A{4,}B：A最少出现4次，AAAAB，AAAAAB…<br>A{2,4}B：A出现次数范围2-4次，AAB，AAAB，AAAAB<br>[0-9]{3}.[0-9]{3}.[0-9]{3}.[0-9]{3}：匹配IP地址</p>\n<p>find命令形式<br>find pathname -option [-print -exec -ok]<br>-pathname查找路径，例如用.来表示当前目录，用/表示系统根目录。-print，find命令将匹配的文件输出到标准输出。-exec，find命令对匹配的文件执行该参数所给出的shell命令，相应命令的形式为’command’{} \\;’，注意{}和\\；之间的空格。-ok和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前都会给出提示，让用户来确定是否执行。<br>find命令的一般形式：<br>-name按照文件名找文件<br>-perm按照文件权限来找文件<br>-user按照文件属主来找文件<br>-group按照文件所属的组来找文件<br>-mtime -n +n按照文件的更改时间来查找文件。-n表示文件更改时间距现在n天以内，+n表示文件更改时间距现在n天以前。find命令还有-atime和-ctime选项，但他们都和-mtime选项相似<br>-size n[c]查找文件长度为n块的文件，带有c时表示文件长度以字节计。<br>-nogroup查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。<br>-nouser查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。<br>-newer file1 ! -newer file2查找更改时间比文件file1新但比文件file2旧的文件。<br>-type查找某一类的文件，比如：b块设备文件，d目录，c字符设备文件，p管道文件，l符号链接文件，f普通文件。</p>\n<p>举例：<br>-name：可以使用某种文件名模式来匹配文件，记住要用引号将文件名模式引起来，例：<br>find -name “<em>.txt” -print，没有路径表示查找当前路径。find ./ -name “</em>.txt” -print。find ./ -name “[A-Z]<em>“ -print，find /etc -name “host</em>“ -print。<br>-perm：find . -perm 755 -print。<br>-user和-nouser：find <code>pwd</code> -user root -print。find <code>pwd</code> -nouser -print。<br>-group和-nogroup：find ./ -group itlab -print，find / -nogroup -print。<br>-mtime：find /var -mtime -5 -print，find /var -mtime +3 -print。<br>-newer：find <code>pwd</code> -newer “myfile” ! -newer “myfile123” -print。<br>-type：find /etc -type d -print。<br>-size：find . -size +1000000c -print查找文件大小大于1000000字节的文件，find . -size +10 -print，查找大小大于10块的文件。<br>-depth：使用find命令时，可能希望先匹配所有的文件，再在子目录中查找，find / -name “con.file” -depth -print。<br>-exec或ok：find . -type f -exec ls -l {} \\;<br>find . -name “*.log” -mtime +5 -ok rm{} \\;<br>-xargs:在使用find命令的-exec选项处理匹配到的文件时，find命令将所有匹配到的文件一起传递给exec，不幸的是有些系统对能够传递给exec的命令长度有限制，这样在find命令运行几分钟后就会出现溢出错误。错误信息通常是“参数列太长”或“参数列溢出”，这就是xargs命令的用处所在，特别是与find命令一起使用。exec会发起多个进程，而xargs不会多个，只有一个。例：find ./ -perm -7 -print | xargs chmod o-w，<br>find ./ -type f -print | xargs file。</p>\n<p>grep介绍<br>对文本文件进行模式查找，grep有三种变形<br>-Grep：标准grep命令<br>-Egrep：扩展grep，支持基本及扩展的正则表达式<br>-Fgrep：快速grep<br>grep一般格式为：<br>-grep[选项]基本正则表达式[文件]<br>-字符串参数(基本正则表达式)最好采用双引号，一是以防被误解为shell命令，二是可以用来查找多个单词组成的字符串。<br>grep命令选项：<br>-c：只输出匹配行的计数<br>-i：不区分大小写(只适用于单字符)<br>-h：查询多文件时不显示文件名<br>-H：显示文件名<br>-l：查询多文件时只输出包含匹配字符的文件名<br>-n：显示匹配行及行号<br>-s：不显示不存在或无匹配文本的错误信息<br>-v：显示不包含匹配文本的所有行<br>例：<br>grep “jenny” <em>.txt<br>grep “sort it” </em><br>grep -c “2004” myfile<br>grep -n “2004” myfile<br>grep -i “Jul” myfile<br>grep -v “2004:22” myfile<br>grep “2004:22:5[0-9]” myfile<br>grep “^[^210]” myfile，查找行首不是2或1或0的行。<br>grep “[5-8][6-9][0-2]” myfile<br>grep “4{2}“ myfile<br>grep “4{2,}“ myfile<br>grep “4{2,4}“ myfile<br>grep “^$” myfile<br>grep “\\?” myfile<br>grep “^d” myfile<br>grep “^[^d]” myfile</p>\n<p>grep命令类名类等价的正则表达式<br>[[:upper:]][A-Z]<br>[[:alnum:]][0-9a-zA-Z]<br>[[:lower:]][a-z]<br>[[:space:]]    空格或tab键<br>[[:digit:]][0-9]<br>[[:alpha:]][a-zA-Z]<br>例：grep “5[[:digit:]][[:digit:]]” myfile</p>\n<p>awk介绍<br>可从文件或字符串中基于指定规则浏览和抽取信息，是一种自解释的编程语言，三种方式调用awk：<br>-命令行方式：<br>    awk [-F field-spearator]’command’ input-files，field-spearator默认是空格。<br>-awk脚本<br>    所有awk命令插入一个文件，并使awk程序可执行，然后用awk命令解释器作为脚本的首行，以便通过键入脚本名称来调用它。<br>-awk命令插入一个单独文件<br>    awk -f awk-script-file input-files</p>\n<p>awk脚本由各种操作和模式组成<br>模式和动作：<br>    -模式部分决定动作语句何时出发及出发事件。(BEGIN,END)<br>    -动作对数据进行处理，放在大括号{}内指明。(input)<br>分隔符，域和记录：<br>    -awk执行时，其浏览域标记为$1,$2…$n。这种方法称为域标识。$0为所有域，即这条记录。<br>    -注意执行时不要混淆符号$和shell提示符$，他们是不同的。<br>例：awk ‘{print $0}’ score.txt | tee score.out。<br>awk -F . ‘{print $0}’ score.txt |tee score.out。<br>awk ‘{print $1 “\\t”$4}’ score.txt。<br>awk ‘BEGIN {print “Name Maths\\n——“} {print $1”\\t”$4} END {print “end-of-report”}’ score.txt。</p>\n<p>awk中的特殊元字符：+和？，+表示匹配任意字符，？表示匹配单个字符。<br>匹配操作符：~(表示匹配),!~(表示不匹配)，要匹配的内容放在两个\\之间。<br>cat score.txt|awk ‘$0 ~/218.79.131.96/‘。<br>awk ‘$0 !~/218.79.131.96/‘ score.txt。<br>awk ‘{if($1==”218.79.131.96”) print $0}’ score.txt。</p>\n<p>sed介绍<br>sed不与初始化文件打交道，它操作的只是一个拷贝，然后所有的改动如果没有重定向到一个文件，将输出到屏幕。sed是一种重要的文本过滤工具，使用一行命令或使用管道与grep与awk相结合。非交互性文本流编辑。调用sed有三种方式：<br>-使用sed命令行格式<br>   sed [选项] sed命令 输入文件<br>-使用sed脚本文件，格式为：<br>   sed [选贤] -f sed脚本文件 输入文件<br>-sed脚本文件[选项] 输入文件<br>-不管是使用shell命令行方式或脚本文件方式，如果没有指定输入文件，sed从标准输入中接受输入，一般是键盘或重定向结果。<br>sed命令选项：<br>-n不打印<br>-c下一命令是编辑命令<br>-f如果正在调用sed脚本文件</p>\n<p>sed在文件中查找文本的方式<br>-使用行号，可以是一个简单数字或是一个行号范围<br>-使用正则表达式<br>x            x为一行号<br>x,y            表示行号范围从x到y<br>/pattern/        查询包含模式的行<br>/pattern/pattern/    查询包含两个模式的行<br>pattern/,x        在给定的行号上查询包含模式的行<br>x,/pattern/        通过行号和模式查询匹配行<br>x,y!            查询不包含指定行号x和y的行<br>基本sed编辑命令：<br>p    打印匹配行<br>=    显示文件行号<br>a\\    在定位行号后附加新文本信息<br>i\\    在定位行号后插入新文本信息<br>d    删除定位行<br>c\\    用新文本替换定位文本<br>s    使用替换模式替换相应模式<br>r    从另一个文件中读文本<br>w    写文本到一个文件<br>q    第一个模式匹配完成后退出或立即退出<br>l    显示与八进制ASCII代码等价的控制字符<br>{}    在定位行执行的命令组<br>n    从另一个文件中读文本下一行，并附加在下一行<br>g    将模式2粘贴到/pattern n/<br>y    传送字符</p>\n<p>例：<br>sed ‘2p’ score.txt，单引号中的是命令，打印score.txt这个文件的第二行，这里全部打印，因为没有加-n，这样匹配到的和没匹配到的都打印。<br>sed -n ‘2p’ score.txt，-n表示不打印没匹配到的，只打印第二行。<br>sed -n ‘1,4p’ score.txt，打印1~4行。<br>sed -n ‘/los/p’ myfile.txt，打印包含los字符的所有行。<br>sed -n ‘4,/los/p’ myfile.txt，从第四行开始匹配到第一个los结束，如果los在第六行，那么从第四行到第六行都打印，如果下面还有los也不打印了。<br>sed -n ‘/^$/=’ myfile.txt，显示空行的行号。<br>sed -n -e ‘/^$/p’ -e ‘/^$/=’ myfile，打印空白行打印行号。<br>sed -n ‘/chinaitlab/a\\shenzhen’ myfile.txt。<br>sed -n ‘/chinaitlab/i\\shenzhen’ myfile.txt。<br>sed -n ‘/chinaitlab/c\\chinaitlab shenzhen’ myfile.txt。<br>sed ‘1,2d’ myfile.txt，把第一第二行删除。<br>sed ‘s/chinaitlab/chinaitlab shenzhen/g’ myfile.txt，当有多个chinaitlab时，加g表示全部替换。<br>sed -n ‘s/chinaitlab/&amp; hello/p’ myfile.txt， 在匹配到的所有的chinaitlab的后面加 hello。<br>sed -n ‘s/chinaitlab/hello &amp;/p’ myfile.txt，在匹配到的所有的chinaitlab的前面加 hello。<br>sed ‘lr ctrl.txt’ myfile.txt。<br>sed ‘china/q’ myfile.txt。<br>sed -n ‘/china/l’ myfile.txt。</p>\n<p>合并与分割<br>sort[options] files<br>-许多不同的域按不同的列顺序分类<br>-c测试文件是否已经分类<br>-m合并两个分类文件<br>-u删除所有复制行<br>-o存储sort结果的输出文件名<br>-t域分隔符：用非空格或tab键分割域<br>+n n为域号，使用此域号开始分类<br>n指定分类是域上的数字分类项<br>-r比较求逆</p>\n<p>例：<br>sort -c myfile，检查这个文件是否已经排序。<br>sort -u myfile，</p>\n<h2 id=\"第六讲shell函数\"><a href=\"#第六讲shell函数\" class=\"headerlink\" title=\"第六讲shell函数\"></a>第六讲shell函数</h2><p>定义函数格式：<br>函数名()<br>{<br>命令1<br>…<br>}<br>function 函数名()<br>{<br>…<br>}<br>函数可以放在同一个文件中作为一段代码，也可以放在只包含函数的单独文件中。</p>\n<p>#!/bin/bash</p>\n<p>#hellofun<br>function hello()<br>{<br>echo “hello,today is <code>date</code>“<br>return 0<br>}<br>echo “now going to the function hello”<br>hello<br>echo “back from the function”</p>\n<p>参数传递：向函数传递参数就像在脚本中使用位置变量$1,$2…$9<br>例：</p>\n<p>#!/bin/bash</p>\n<p>#func<br>function hello()<br>{<br>echo “Hello,$1 today is <code>date</code>“<br>}<br>echo “now going to the function hello”<br>hello chinaitlab<br>echo “back from the function”</p>\n<p>函数文件</p>\n<p>#!/bin/bash</p>\n<p>#func</p>\n<p>#source function<br>. hellofun<br>echo “now going to the function hello”<br>hello<br>echo “back from the function”</p>\n<p>#!/bin/bash</p>\n<p>#hellofun<br>function hello()<br>{<br>echo “Hello, today is <code>date</code>“<br>return 0<br>}</p>\n<p>检查载入函数和删除函数<br>察看载入函数set<br>删除函数unset<br>例：</p>\n<p>#!/bin/bash</p>\n<p>#func</p>\n<p>#source function<br>. hellofun<br>set #察看加载的函数和变量信息<br>echo “now going to the function hello”<br>unset hello#删除这个函数<br>hello<br>echo “back from the function”</p>\n<p>函数返回值：</p>\n<p>#!/bin/bash</p>\n<p>#hellofun<br>function hello()<br>{<br>echo “Hello, today is <code>date</code>“<br>return 0<br>}</p>\n<p>#!/bin/bash</p>\n<p>#func<br>echo “now going to the function hello”<br>hello<br>echo $?<br>echo “back from the function”</p>\n<h2 id=\"第七讲脚本参数传递\"><a href=\"#第七讲脚本参数传递\" class=\"headerlink\" title=\"第七讲脚本参数传递\"></a>第七讲脚本参数传递</h2><p>shift命令,每次讲参数位置向左偏移n位。</p>\n<p>#!/bin/bash</p>\n<p>#opt2<br>usage()<br>{<br>echo “usage:<code>basename $0</code> filenames”<br>}<br>totalline=0<br>if[ $# -lt 2 ];then<br>    usage<br>    exit#退出系统，下面的代码不执行<br>fi<br>while [ $# -ne 0]#参数个数不等于0<br>do<br>line=<code>cat $1|wc -l</code><br>echo “$1:${line}”<br>totalline=$[$totalline+$line]<br>shift#调用shift时$#(参数个数)也跟着减1<br>done<br>echo “———–”<br>echo “total:${totalline}”</p>\n<p>getopts获得多个命令行参数</p>\n<p>#!/bin/bash<br>ALL=false<br>HELP=false<br>FILE=false<br>VERBOSE=false<br>while getopts ahfvc OPTION<br>do<br>    case $OPTION in<br>    a)<br>        ALL=true<br>        echo “ALL IS $ALL”<br>        ;;<br>    h)<br>        HELP=true<br>        echo “HELP is $HELP”<br>        ;;<br>    f)<br>        FILE=true<br>        echo “FILE is $FILE”<br>        ;;<br>    v)<br>        VERBOSE=true<br>        echo “VERBOSE is $VERBOSE”<br>        ;;<br>    c)<br>        echo “c value is $c”<br>        ;;<br>    \\?)<br>        echo “<code>basename $0</code> -[a h f v] -[c value] file “<br>        ;;<br>    esac<br>done</p>\n<hr>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><h4 id=\"linux使用备忘\"><a href=\"#linux使用备忘\" class=\"headerlink\" title=\"linux使用备忘\"></a>linux使用备忘</h4><p>查看linux文件目录的大小和文件夹包含的文件数：</p>\n<p>du -sh xmldb/ #查看xmldb文件大小<br>du -sm <em> | sort -n  #统计当前目录大小 并安大小 排序<br>du -sk </em> | sort -n </p>\n<h4 id=\"压缩文件：\"><a href=\"#压缩文件：\" class=\"headerlink\" title=\"压缩文件：\"></a>压缩文件：</h4><p>tar -zcvf  a.tgz aa   #压缩aa文件为a.tgz<br>tar -zxvf a.tgz #解压</p>\n<h4 id=\"查找文件：\"><a href=\"#查找文件：\" class=\"headerlink\" title=\"查找文件：\"></a>查找文件：</h4><p>find / -name filename #在所有目录下查找filename<br>find /opt -name file* #在/opt下查找以find开头的文件<br>find / -amin -10 # 查找在系统中最后10分钟访问的文件<br>find / -atime -2 # 查找在系统中最后48小时访问的文件<br>find / -empty # 查找在系统中为空的文件或者文件夹<br>find / -group cat # 查找在系统中属于 groupcat的文件<br>find / -mmin -5 # 查找在系统中最后5分钟里修改过的文件<br>find / -mtime -1 #查找在系统中最后24小时里修改过的文件<br>find / -nouser #查找在系统中属于作废用户的文件<br>find / -user fred #查找在系统中属于FRED这个用户的文件</p>\n<hr>\n<p>小红帽企业版的telnet为krb5-telnet，依附于xinetd服务，将/etc/xinetd.d/krb5-telnet<br>的disable设置为no，重启xinetd即可启用telnet服务，默认是不允许root用户登录。允许普通的telnet登陆，但也可使用kerberos5验证 </p>\n<p>个人版RedHat Linux的telnet也是同样的道理，也是依附于xinetd服务，配置文件是/etc/xinetd.d/telnet。提供telnet服务，使用未加密的用户/密码组进行验证</p>\n<p>用passwd修改用户密码，常常提示“BAD PASSWORD: it is based on a dictionary word”，实际上<br>linux要求的密码的验证机制是在/etc/login.defs中规定最小密码字符数。还要受到/etc/pam.d/passwd的限定，但是在root用户下怎么设置都可以，可以不受验证机制的约束，即便出来“BAD PASSWORD: it is based on a dictionary word”也可以修改成功。</p>\n<p>但是普通用户修改自己的密码，如果不符合密码验证机制的话就修改不成功，会有各种报错，“BAD PASSWORD: it’s WAY too short”，这是报密码太短，不符合/etc/login.defs的设置，“BAD PASSWORD: it is based on your username”，这是密码与帐号不能同名，这是不符合/etc/pam.d/passwd的设置。“BAD PASSWORD: it is based on a dictionary word”这是因为出现了字典里的字符串，如果你英文与数字组合使用，就不会报错。</p>\n<hr>\n<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><h4 id=\"1-ln-命令详解\"><a href=\"#1-ln-命令详解\" class=\"headerlink\" title=\"1.ln 命令详解\"></a>1.ln 命令详解</h4><p><code>ln -s  源文件 目标文件</code>     -s 是 symbolic的意思。<br>例：<code>ln  -s  /lib/lsb   /usr/lj</code><br>即：在usr目录下建立指向/lib/lsb目录的lj文件。</p>\n<p><code>ln -s /opt/oracle /opt/app/oracle</code><br>建立链接<code>/opt/oracle</code> 链接目录 <code>/opt/app/oracle</code><br>比如在/data目录下建立一个a目录的连接b<br><code>ln -s /data/a /data/b</code><br>例如：<br><code>ln -s db_1 /opt/oracle/product/10.2.0/db_1</code><br>这条命令式在 /opt/oracle/product/10.2.0/db_1 下建立一个 db_1 的链接。<br>现在 /opt/oracle/product/10.2.0/db_1 下应该会还有个db_1</p>\n<p>ln 是 Linux 中一个非常重要命令。它的功能是为某一个文件在另外一个位置建立一个同步的链接，这个命令最常用的参数是-s,具体用法是： </p>\n<p>ln -s  源文件 目标文件    -s 是 symbolic的意思。<br>例： <code>ln  -s  /lib/lsb   /usr/lj</code><br>即：在 usr 目录下建立指向 /lib/lsb 目录的lj文件。</p>\n<p>备份命令<br><code>tar -cvf oraclehome.tar /opt/oracle/product/10.2.0/db_1</code><br>备份一下<br>解压命令<br><code>tar -xvfz /opt/oracle/product/allbackup.tar.gz /opt/oracle/product/10.2.0</code></p>\n<p>当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：<code>ln -s /bin/less /usr/local/bin/less-s 是代号（symbolic）的意思。这里有两点要注意：第一，ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化；第二，ln的链接又软链接和硬链接两种，软链接就是ln -s ** **,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **,没有参数-s, 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。软链接是可以跨分区的，但是硬链接只能在同一分区内。如果你用ls察看一个目录时，发现有的文件后面有一个@的符号，那就是一个用ln命令生成的文件，用ls -l命令去察看，就可以看到显示的link的路径了当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：</code>ln -s /bin/less /usr/local/bin/less `<br>注意： </p>\n<p>第一，ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化； </p>\n<p>第二，ln的链接又软链接和硬链接两种，软链接就是ln -s <strong> </strong>,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln <strong> </strong>,没有参数-s, 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。软链接是可以跨分区的，但是硬链接只能在同一分区内。<br>第三：目录不能建立硬链接，但可以建立软链接。 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Linux操作系统下共享文件夹设置方法介绍 </span><br><span class=\"line\"></span><br><span class=\"line\">首先当然是要安装samba了，呵呵： </span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install samba </span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install smbfs </span><br><span class=\"line\"></span><br><span class=\"line\">下面我们来共享群组可读写文件夹，假设你要共享的文件夹为： /home/ray/share </span><br><span class=\"line\"></span><br><span class=\"line\">首先创建这个文件夹 </span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /home/ray/share </span><br><span class=\"line\"></span><br><span class=\"line\">chmod 777 /home/ray/share </span><br><span class=\"line\"></span><br><span class=\"line\">备份并编辑smb.conf允许网络用户访问 </span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp /etc/samba/smb.conf /etc/samba/smb.conf_backup </span><br><span class=\"line\"></span><br><span class=\"line\">sudo gedit /etc/samba/smb.conf </span><br><span class=\"line\"></span><br><span class=\"line\">搜寻这一行文字 </span><br><span class=\"line\"></span><br><span class=\"line\">; security = user </span><br><span class=\"line\"></span><br><span class=\"line\">用下面这几行取代 </span><br><span class=\"line\"></span><br><span class=\"line\">security = user </span><br><span class=\"line\"></span><br><span class=\"line\">username map = /etc/samba/smbusers </span><br><span class=\"line\"></span><br><span class=\"line\">将下列几行新增到文件的最后面，假设允许访问的用户为：newsfan。而文件夹的共享名为 Share </span><br><span class=\"line\"></span><br><span class=\"line\">[Share] </span><br><span class=\"line\"></span><br><span class=\"line\">comment = Shared Folder with username and password </span><br><span class=\"line\"></span><br><span class=\"line\">path = /home/ray/share </span><br><span class=\"line\"></span><br><span class=\"line\">public = yes </span><br><span class=\"line\"></span><br><span class=\"line\">writable = yes </span><br><span class=\"line\"></span><br><span class=\"line\">valid users = newsfan </span><br><span class=\"line\"></span><br><span class=\"line\">create mask = 0700 </span><br><span class=\"line\"></span><br><span class=\"line\">directory mask = 0700 </span><br><span class=\"line\"></span><br><span class=\"line\">force user = nobody </span><br><span class=\"line\"></span><br><span class=\"line\">force group = nogroup </span><br><span class=\"line\"></span><br><span class=\"line\">available = yes </span><br><span class=\"line\"></span><br><span class=\"line\">browseable = yes </span><br><span class=\"line\"></span><br><span class=\"line\">然后顺便把这里改一下，找到［global］把 workgroup = MSHOME 改成 </span><br><span class=\"line\"></span><br><span class=\"line\">workgroup = WORKGROUP </span><br><span class=\"line\"></span><br><span class=\"line\">display charset = UTF-8 </span><br><span class=\"line\"></span><br><span class=\"line\">unix charset = UTF-8 </span><br><span class=\"line\"></span><br><span class=\"line\">dos charset = cp936 </span><br><span class=\"line\"></span><br><span class=\"line\">后面的三行是为了防止出现中文目录乱码的情况。其中根据你的<span class=\"built_in\">local</span>，UTF-8 有可能需要改成 cp936。自己看着办吧。 </span><br><span class=\"line\"></span><br><span class=\"line\">现在要添加newsfan这个网络访问帐户。如果系统中当前没有这个帐户，那么 </span><br><span class=\"line\"></span><br><span class=\"line\">sudo useradd newsfan </span><br><span class=\"line\"></span><br><span class=\"line\">要注意，上面只是增加了newsfan这个用户，却没有给用户赋予本机登录密码。所以这个用户将只能从远程访问，不能从本机登录。而且samba的登录密码可以和本机登录密码不一样。 </span><br><span class=\"line\"></span><br><span class=\"line\">现在要新增网络使用者的帐号： </span><br><span class=\"line\"></span><br><span class=\"line\">sudo smbpasswd -a newsfan </span><br><span class=\"line\"></span><br><span class=\"line\">sudo gedit /etc/samba/smbusers </span><br><span class=\"line\"></span><br><span class=\"line\">在新建立的文件内加入下面这一行并保存 </span><br><span class=\"line\"></span><br><span class=\"line\">newsfan = <span class=\"string\">\"network username\"</span> </span><br><span class=\"line\"></span><br><span class=\"line\">如果将来需要更改newsfan的网络访问密码，也用这个命令更改 </span><br><span class=\"line\"></span><br><span class=\"line\">sudo smbpasswd -a newsfan </span><br><span class=\"line\"></span><br><span class=\"line\">删除网络使用者的帐号的命令把上面的 -a 改成 -x </span><br><span class=\"line\"></span><br><span class=\"line\">sudo testparm </span><br><span class=\"line\"></span><br><span class=\"line\">sudo /etc/init.d/samba restart </span><br><span class=\"line\"></span><br><span class=\"line\">如果还是不行查看Iptables（防火墙是否开启），如果开启可以先将服务停止。</span><br><span class=\"line\"></span><br><span class=\"line\">最后退出重新登录或者重新启动一下机器。 </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">利用Samba配置文件共享服务</span><br><span class=\"line\"></span><br><span class=\"line\">配置文件 /etc/samba/</span><br><span class=\"line\"></span><br><span class=\"line\">//设置samba密码文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cat /etc/passwd|mksmbpasswd.sh &gt; /etc/samba/smbpasswd</span></span><br><span class=\"line\"></span><br><span class=\"line\">//为安全起见，设置文件和目录的权限</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chown root.root /etc/samba/smbpasswd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chmod 500 /etc/samba</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chmod 600 /etc/samba/smbpasswd</span></span><br><span class=\"line\"></span><br><span class=\"line\">//为用户设置口令</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#smbpasswd root</span></span><br><span class=\"line\"></span><br><span class=\"line\">//检查配置文件的正确性</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># testparm</span></span><br><span class=\"line\"></span><br><span class=\"line\">//检查服务器所共享的资源</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># smbclient –L localhost</span></span><br><span class=\"line\"></span><br><span class=\"line\">//列出资源使用情况</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># smbstatus [-b]</span></span><br><span class=\"line\"></span><br><span class=\"line\">//配置文件</span><br><span class=\"line\"></span><br><span class=\"line\">节：</span><br><span class=\"line\"></span><br><span class=\"line\">l         [Global] 定义全局参数和缺省值</span><br><span class=\"line\"></span><br><span class=\"line\">l         [Homes] 定义用户的Home目录共享</span><br><span class=\"line\"></span><br><span class=\"line\">l         [Printers] 定义打印机共享</span><br><span class=\"line\"></span><br><span class=\"line\">l         [Userdefined_ShareName] 用户自定义共享（可有多个）</span><br><span class=\"line\"></span><br><span class=\"line\">变量：</span><br><span class=\"line\"></span><br><span class=\"line\">l         %S 当前服务名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %P 当前服务的根路径</span><br><span class=\"line\"></span><br><span class=\"line\">l         %u 当前服务的用户名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %g 给定%u的所在工作组名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %H 给定%u的宿主目录</span><br><span class=\"line\"></span><br><span class=\"line\">l         %v Samba版本号</span><br><span class=\"line\"></span><br><span class=\"line\">l         %h 运行服务的主机名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %m 客户机的NETBIOS名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %L 服务器的NetBIOS名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %L 当前的日期和时间</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">//使用符号链接组织本地共享资源</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vi /etc/samba/smb.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Resource]</span><br><span class=\"line\"></span><br><span class=\"line\">    comment = Local Resource</span><br><span class=\"line\"></span><br><span class=\"line\">    path = /var/samba/resource</span><br><span class=\"line\"></span><br><span class=\"line\">    public = yes</span><br><span class=\"line\"></span><br><span class=\"line\">writeable = yes</span><br><span class=\"line\"></span><br><span class=\"line\">// -p  parent(no error <span class=\"keyword\">if</span> existing, make parent directories as needed)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mkdir –p /var/samba/resource</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#cd /var/samba/resource</span></span><br><span class=\"line\"></span><br><span class=\"line\">//-s, --symbolic</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ln –s /usr/share/doc doc</span></span><br><span class=\"line\"></span><br><span class=\"line\">//为所有用户配置只读共享和读写共享</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vi /etc/samba/smb.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">[tmp]</span><br><span class=\"line\"></span><br><span class=\"line\">    comment = Temporary file space</span><br><span class=\"line\"></span><br><span class=\"line\">    path = /tem</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">read</span> only = no</span><br><span class=\"line\"></span><br><span class=\"line\">    public = yes</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">[cdrom]</span><br><span class=\"line\"></span><br><span class=\"line\">    comment = CDROM</span><br><span class=\"line\"></span><br><span class=\"line\">    path = /mnt/cdrom</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">read</span> only = yes</span><br><span class=\"line\"></span><br><span class=\"line\">public = yes</span><br><span class=\"line\"></span><br><span class=\"line\">//为指定用户或组配置共享</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># useradd samba</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># passwd samba</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mkdir /var/samba/samba</span></span><br><span class=\"line\"></span><br><span class=\"line\">//更改目录属主</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chown samba.samba /var/samba/samba</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vi smb.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">[sambadir]</span><br><span class=\"line\"></span><br><span class=\"line\">    comment = Samba<span class=\"string\">'s service</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    path = /var/samba/samba</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    valid users = samba</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    public = no</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">//保存修改</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">//Linux环境下访问Samba共享</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># cat /etc/samba/lmhosts</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># smbclient –L IP –U 用户名</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># smbmount //win/tools /mnt/smb/win</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">linux smb.conf详解</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">17行workgroup</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">语法 workgtoup = &lt;工作组群&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 workgroup = MYGROUP</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 Samba Server 的工作组</span></span><br><span class=\"line\"><span class=\"string\">例 workgroup = workgroup 和WIN2000S设为一个组，可在网上邻居可中看到共享</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">21行server string</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">语法 server string = &lt;说明&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 sarver string = Samba Server</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 Samba Server 的注释</span></span><br><span class=\"line\"><span class=\"string\">其他 支持变量 t%-访问时间 I%-客户端IP m%-客户端主机名 M%-客户端域名 S%-客户端用户名</span></span><br><span class=\"line\"><span class=\"string\">例 server string = this is a Samba Server 设定出现在Windows网上邻居的 Samba Server 注释为 this is a Samba Server</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">28行hosts allow</span></span><br><span class=\"line\"><span class=\"string\">语法 hosts aoolw = &lt;IP地址&gt;; …</span></span><br><span class=\"line\"><span class=\"string\">预设 ; host allow = 192.168.1. 192.168.2. 127.</span></span><br><span class=\"line\"><span class=\"string\">说明 限制允许连接到 Samba Server 的机器，多个参数以空格隔开。表示方法可以为</span></span><br><span class=\"line\"><span class=\"string\">完整的IP地址，如 192.168.0.1</span></span><br><span class=\"line\"><span class=\"string\">网段，如 192.168.0.</span></span><br><span class=\"line\"><span class=\"string\">例 hosts allow = 192.168.1. 192.168.0.1 表示允许192.168.1 网段的机器 网址为192.168.0.1 的机器 连接到自己的samba server</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">32行printcap name</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">语法 printcap name = &lt;打印机配置文件&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 printcap name = /etc/printcap</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba srever 打印机的配置文件</span></span><br><span class=\"line\"><span class=\"string\">例 printcap name = /etc/printcap 设定 samba srever 参考 /etc/printcap 档的打印机设定</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">33行load printers</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">语法 load printers = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 load printers = yes</span></span><br><span class=\"line\"><span class=\"string\">说明 是否在开启 samba server 时即共享打印机</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">38行printing</span></span><br><span class=\"line\"><span class=\"string\">语法 printing = &lt;打印机类型&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 printing = lprng</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 打印机所使用的类型,37行为目前所支持的类型</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">42行guest account</span></span><br><span class=\"line\"><span class=\"string\">语法 guert account = &lt;帐户名称&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 guert account = pcguest</span></span><br><span class=\"line\"><span class=\"string\">说明 设定访问 samba server 的来宾帐户(即访问时不用输入用户名和密码的帐户),若设为pcguest的话则为默认为”nobody”用户</span></span><br><span class=\"line\"><span class=\"string\">例 guert account = andy 设定设定访问 samba server 的来宾帐户以andy用户登陆,则此登陆帐户享有andy用户的所有权限</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">46行log file</span></span><br><span class=\"line\"><span class=\"string\">语法 log file = &lt;日志文件&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 log file = /var/log/samba/%m.log</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 日志文件的储存位置和文件名(%m代表客户端主机名)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">49行max log size</span></span><br><span class=\"line\"><span class=\"string\">语法 max log size = &lt;??KB&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 max log size = 0</span></span><br><span class=\"line\"><span class=\"string\">说明 设定日子文件的最大容量,单位KB 这里的预设值0代表不做限制</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">53行security</span></span><br><span class=\"line\"><span class=\"string\">语法 security = &lt;等级&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 security = user</span></span><br><span class=\"line\"><span class=\"string\">说明 设定访问 samba server 的安全级别 共有四种</span></span><br><span class=\"line\"><span class=\"string\">share—不需要提供用户名和密码</span></span><br><span class=\"line\"><span class=\"string\">user—-需要提供用户名和密码,而且身份验证由 samba server 负责</span></span><br><span class=\"line\"><span class=\"string\">server–需要提供用户名和密码,可指定其他机器(winNT/2000/XP)或另一台 samba server作身份验证</span></span><br><span class=\"line\"><span class=\"string\">domain–需要提供用户名和密码,指定winNT/2000/XP域服务器作身份验证</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">60行password server</span></span><br><span class=\"line\"><span class=\"string\">语法 password server = &lt;IP地址/主机名&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 password server = &lt;NT-Server-Name&gt;;</span></span><br><span class=\"line\"><span class=\"string\">说明 指定某台服务器(包括windows 和 linux)的密码,作为用户登入时验证的密码</span></span><br><span class=\"line\"><span class=\"string\">其他 此项需配合 security = server时,才可设定本参数</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">64行password level</span></span><br><span class=\"line\"><span class=\"string\">65行username level</span></span><br><span class=\"line\"><span class=\"string\">语法 password level = &lt;位数&gt;;</span></span><br><span class=\"line\"><span class=\"string\">username level = &lt;位数&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 password level = 8</span></span><br><span class=\"line\"><span class=\"string\">username level = 8</span></span><br><span class=\"line\"><span class=\"string\">说明 设定用户名和密码的位数,预设为8位字符</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">70行encrypt passwords</span></span><br><span class=\"line\"><span class=\"string\">语法 encrypt passwords = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 encrypt passwords = yse</span></span><br><span class=\"line\"><span class=\"string\">说明 设定是否对samba的密码加密</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">71行smb passwd file</span></span><br><span class=\"line\"><span class=\"string\">语法 smb passwd file = &lt;密码文件&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 smb passwd file = /etc/samba/smbpasswd</span></span><br><span class=\"line\"><span class=\"string\">说明 设定samba的密码文件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">130行local master</span></span><br><span class=\"line\"><span class=\"string\">语法 local master = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 local master = no</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 是否要担当LMB角色(LMB负责收集本地网络的Browse List资源),通常无特殊原因设为no</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">134行os level = 33</span></span><br><span class=\"line\"><span class=\"string\">语法 os level = &lt;数字&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 os level = 33</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server的os level. os level从 0 到 255 . winNT的os level为33, win95/98的os level 是 1 .</span></span><br><span class=\"line\"><span class=\"string\">若要拿samba server 当LMB或DMB则它的os level至少要大于NT的33以上</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">139行domain master</span></span><br><span class=\"line\"><span class=\"string\">语法 domain master = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 domain master = yes</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 是否要担当DMB角色(DMB会负责收集其他子网的Browse List资源),通常无特殊原因设为no</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">143行preferred master</span></span><br><span class=\"line\"><span class=\"string\">语法 preferred master = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 preferred master = yes</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 是否要担当PDC角色(PDC会负责追踪网络帐户进行的一切变更),通常无特殊原因设为no.</span></span><br><span class=\"line\"><span class=\"string\">(同一网段内不可有两个PDC,他们会每5分钟抢主控权一次)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">163行wins support</span></span><br><span class=\"line\"><span class=\"string\">语法 wins support = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 wins support = yes</span></span><br><span class=\"line\"><span class=\"string\">说明 设定samba server 是否想网络提供WINS服务,通常无特殊原因设为no.</span></span><br><span class=\"line\"><span class=\"string\">除非所处网络上没有主机提供WINS服务且需要此台samba server提供WINS服务是才设yes</span></span><br><span class=\"line\"><span class=\"string\">其他 wins support 和 wins server 只能选择一个</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">167行wins server</span></span><br><span class=\"line\"><span class=\"string\">语法 wins server = &lt;IP地址&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 wins server = w.x.y.z</span></span><br><span class=\"line\"><span class=\"string\">说明 设定samba server 是否要使用别台主机提供的WINS服务.通常无特殊原因设为no.除非所处网络上有一台主机提供WINS服务才要设yes</span></span><br><span class=\"line\"><span class=\"string\">其他 wins support 和 wins server</span></span><br><span class=\"line\"><span class=\"string\">例 wins server = 192.168.0.1 表示samba server要使用192.168.0.1提供的WINS服务</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">#============================== Share Definitions =============================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[homes]</span></span><br><span class=\"line\"><span class=\"string\">comment = Home Directories</span></span><br><span class=\"line\"><span class=\"string\">browseable = no</span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\">valid users = %S</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">使用者本身的”家”目录，当使用者以samba使用者身份登入samba server 后，</span></span><br><span class=\"line\"><span class=\"string\">samba server 底下会看到自己的家目录，目录名称是使用者自己的帐号</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[分享的资源名称]</span></span><br><span class=\"line\"><span class=\"string\">&lt;指令1&gt;; = (参数)</span></span><br><span class=\"line\"><span class=\"string\">&lt;指令2&gt;; = (参数)</span></span><br><span class=\"line\"><span class=\"string\">……………………..</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">要提供分享资源时，须先把欲分享的资源以 [ ] 符号括住，底下通常会带指令和参数来表示此资源的设定和存取权限等,详情如下</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">comment———注释说明</span></span><br><span class=\"line\"><span class=\"string\">path————分享资源的完整路径名称，除了路径要正确外，目录的权限也要设对</span></span><br><span class=\"line\"><span class=\"string\">browseable——是yes/否no在浏览资源中显示共享目录，若为否则必须指定共享路径才能存取</span></span><br><span class=\"line\"><span class=\"string\">printable——-是yes/否no允许打印</span></span><br><span class=\"line\"><span class=\"string\">hide dot ftles–是yes/否no隐藏隐藏文件</span></span><br><span class=\"line\"><span class=\"string\">public———-是yes/否no公开共享，若为否则进行身份验证(只有当security = share 时此项才起作用)</span></span><br><span class=\"line\"><span class=\"string\">guest ok——–是yes/否no公开共享，若为否则进行身份验证(只有当security = share 时此项才起作用)</span></span><br><span class=\"line\"><span class=\"string\">read only——-是yes/否no以只读方式共享当与writable发生冲突时也writable为准</span></span><br><span class=\"line\"><span class=\"string\">writable——–是yes/否no不以只读方式共享当与read only发生冲突时，无视read only</span></span><br><span class=\"line\"><span class=\"string\">vaild users—–设定只有此名单内的用户才能访问共享资源(拒绝优先)(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">invalid users—设定只有此名单内的用户不能访问共享资源(拒绝优先)(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">read list——-设定此名单内的成员为只读(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">write list——若设定为只读时，则只有此设定的名单内的成员才可作写入动作(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">create mask—–建立文件时所给的权限</span></span><br><span class=\"line\"><span class=\"string\">directory mask–建立目录时所给的权限</span></span><br><span class=\"line\"><span class=\"string\">force group—–指定存取资源时须以此设定的群组使用者进入才能存取(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">force user——指定存取资源时须以此设定的使用者进入才能存取(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">allow hosts—–设定只有此网段/IP的用户才能访问共享资源</span></span><br><span class=\"line\"><span class=\"string\">allwo hosts = 网段 except IP</span></span><br><span class=\"line\"><span class=\"string\">deny hosts——设定只有此网段/IP的用户不能访问共享资源</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">allow hosts=本网段指定IP指定IP</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">deny hosts=指定IP本网段指定IP</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Samba的主配置文件。但所包含的内容并不是很全，详见man smb.conf</span></span><br><span class=\"line\"><span class=\"string\">所有以;或#开头的行为注释行，将被忽略掉。在这个例子中我们使用；表示可以由你来修改或设置的部分，而#则表示真正意义上的注释。</span></span><br><span class=\"line\"><span class=\"string\">注意：不论你何时何地修改了这个文件，你都应运行一下命令“testparm“来测试你是否犯了一些基本语法的错误。</span></span><br><span class=\"line\"><span class=\"string\">1、全局设置</span></span><br><span class=\"line\"><span class=\"string\">[global]</span></span><br><span class=\"line\"><span class=\"string\"># workgroup = NT-Domain-Name or Workgroup-Name</span></span><br><span class=\"line\"><span class=\"string\">workgroup = MYGROUP</span></span><br><span class=\"line\"><span class=\"string\">下面的这句话是后加的，加入的意义为：使WIN用户可以看到主机的名字，但我将此行注释掉后，没看到什么影响。</span></span><br><span class=\"line\"><span class=\"string\">netbios name = express</span></span><br><span class=\"line\"><span class=\"string\">下面设置的是服务器的字符串，相当于NT中的计算机说明部分</span></span><br><span class=\"line\"><span class=\"string\">server string = Samba Server</span></span><br><span class=\"line\"><span class=\"string\">下面的选项对于安全性很重要。他允许你对是否可以进行本地网络连接的机器进行了限制。</span></span><br><span class=\"line\"><span class=\"string\">hosts allow = 192.168.1.50 192.168.1.43 192.168.1.44 192.168.1.45 192.168.1.46 192.168.1.47 192.168.1.48 192.168.1.49</span></span><br><span class=\"line\"><span class=\"string\">如果想要自动共享打印机而不是个别地进行单独设置，使用下面的选项：</span></span><br><span class=\"line\"><span class=\"string\">printcap name = /etc/printcap</span></span><br><span class=\"line\"><span class=\"string\">load printers = yes</span></span><br><span class=\"line\"><span class=\"string\">除非你是非标准的，否则下面的选项对于你说清楚打印系统的类型并不是很必要。当前支持的打印系统主要有以下几类：</span></span><br><span class=\"line\"><span class=\"string\"># bsd, sysv, plp, lprng, aix, hpux, qnx, cups</span></span><br><span class=\"line\"><span class=\"string\">printing = cups</span></span><br><span class=\"line\"><span class=\"string\">如果想要一个guest账号的话就不用注释下面的行。你必须把这个加入到/etc/passwd中，否则用户“nobody“会被使用。</span></span><br><span class=\"line\"><span class=\"string\">; guest account = pcguest</span></span><br><span class=\"line\"><span class=\"string\">下面的选项告诉samba对不同的机器连接使用不同的日志文件。小心如果你允许访问的机器太多的话，文件可能极多哟！！！：）</span></span><br><span class=\"line\"><span class=\"string\">log file = /var/log/samba/%m.log</span></span><br><span class=\"line\"><span class=\"string\">设置log文件的大小（KB）（# Put a capping on the size of the log files (in Kb).）</span></span><br><span class=\"line\"><span class=\"string\">max log size = 0</span></span><br><span class=\"line\"><span class=\"string\">安全格式。大多数用户使用用户级安全。详见security_level.txt。</span></span><br><span class=\"line\"><span class=\"string\">security = share</span></span><br><span class=\"line\"><span class=\"string\">使用密码服务选项，仅用于security = server模式</span></span><br><span class=\"line\"><span class=\"string\">参数列表可以包括：</span></span><br><span class=\"line\"><span class=\"string\"># password server = My_PDC_Name [My_BDC_Name] [My_Next_BDC_Name]</span></span><br><span class=\"line\"><span class=\"string\"># 或自动查找域控制器</span></span><br><span class=\"line\"><span class=\"string\"># password server = *</span></span><br><span class=\"line\"><span class=\"string\">; password server = </span></span><br><span class=\"line\"><span class=\"string\">对于所有的上面和下面的组成部分的_n_characters密码所允许的匹配级别</span></span><br><span class=\"line\"><span class=\"string\">; password level = 8</span></span><br><span class=\"line\"><span class=\"string\">; username level = 8</span></span><br><span class=\"line\"><span class=\"string\">你可能想使用密码编码。见在samba文档中的ENCRYPTION.txt, Win95.txt和WinNT.txt。</span></span><br><span class=\"line\"><span class=\"string\">除非你已经仔细的读过了那些文档，否则不要激活下面的选项：</span></span><br><span class=\"line\"><span class=\"string\">encrypt passwords = yes</span></span><br><span class=\"line\"><span class=\"string\">smb passwd file = /etc/samba/smbpasswd</span></span><br><span class=\"line\"><span class=\"string\">当samba被建成为支持SSL的模式时，下面需要从大量的假的错误中保持smbclient。（原文如下：</span></span><br><span class=\"line\"><span class=\"string\"># The following is needed to keep smbclient from spouting spurious errors</span></span><br><span class=\"line\"><span class=\"string\"># when Samba is built with support for SSL.</span></span><br><span class=\"line\"><span class=\"string\">; ssl CA certFile = /usr/share/ssl/certs/ca-bundle.crt</span></span><br><span class=\"line\"><span class=\"string\">下面的选项需要允许从windows对linux系统的密码进行修改。</span></span><br><span class=\"line\"><span class=\"string\"># 注意：上面带有’encrypt passwords’ 和’smb passwd file’选项使用这些。</span></span><br><span class=\"line\"><span class=\"string\"># 另： 如果仅是允许工作站改变加密的SMB密码那么你不需要这些。它们允许Unix密码与SMB密码保持同步。</span></span><br><span class=\"line\"><span class=\"string\">unix password sync = Yes</span></span><br><span class=\"line\"><span class=\"string\">passwd program = /usr/bin/passwd %u</span></span><br><span class=\"line\"><span class=\"string\">passwd chat = *New*password* %n\\n *Retype*new*password* %n\\n *passwd:*all*authentication*tokens*updated*successfully*</span></span><br><span class=\"line\"><span class=\"string\">你可以使用PAM的密码改变控制标记。如果激活的活，当一个SMB客户端请求代替了在密码程序列表时，PAM将用于密码改变。对于大多数的设置，不改变密码字符参数而激活这个也是可能的。</span></span><br><span class=\"line\"><span class=\"string\">pam password change = yes</span></span><br><span class=\"line\"><span class=\"string\">Unix用户可能映射不同的SMB用户名。</span></span><br><span class=\"line\"><span class=\"string\">username map = /etc/samba/smbusers</span></span><br><span class=\"line\"><span class=\"string\">在每一台机器的基础上，使用下面的行可以使你定制你的配置。%m以连接机器的netbios名代替。</span></span><br><span class=\"line\"><span class=\"string\">; include = /etc/samba/smb.conf.%m</span></span><br><span class=\"line\"><span class=\"string\">这个参数控制samba是否服从于PAM账号和对话管理指示。默认情况下是使用PAM仅清除文本证明且忽略任何的账号或对话管理。注意：当加密密码=yes时，samba总是忽略PAM的证明。</span></span><br><span class=\"line\"><span class=\"string\">obey pam restrictions = yes</span></span><br><span class=\"line\"><span class=\"string\">很多人都会发现这个选项优化了性能。详见speed.txt和帮助手册页。</span></span><br><span class=\"line\"><span class=\"string\">socket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192</span></span><br><span class=\"line\"><span class=\"string\">配置samba使用多重接口。</span></span><br><span class=\"line\"><span class=\"string\">如果你有多个网络接口的话，必须把他们在下面列出来。详见man。</span></span><br><span class=\"line\"><span class=\"string\">; interfaces = 192.168.12.2/24 192.168.13.2/24</span></span><br><span class=\"line\"><span class=\"string\">配置请求播出同步到远程浏览器，或从一个主机同步浏览器列表或从/到整个子网（如下）。</span></span><br><span class=\"line\"><span class=\"string\">; remote browse sync = 192.168.3.25 192.168.5.255</span></span><br><span class=\"line\"><span class=\"string\">使主机将自己广播到本地的子网。</span></span><br><span class=\"line\"><span class=\"string\">; remote announce = 192.168.1.255 192.168.2.44</span></span><br><span class=\"line\"><span class=\"string\">浏览器控件选项：</span></span><br><span class=\"line\"><span class=\"string\">如果你不想让你的samba在你的网络中变成一个主浏览器，那么设置local master为no，否则将采用正常的规则。</span></span><br><span class=\"line\"><span class=\"string\">; local master = no</span></span><br><span class=\"line\"><span class=\"string\">os level决定在主浏览器的中被提取的优先级。默认值是很合理的。</span></span><br><span class=\"line\"><span class=\"string\">; os level = 33</span></span><br><span class=\"line\"><span class=\"string\">域master指定samba是域主浏览器。这允许samba在子网之间比较浏览列表。如果你已经有了一个Win NT的主域控制器的话，就不要设置这个选项。</span></span><br><span class=\"line\"><span class=\"string\">; domain master = yes</span></span><br><span class=\"line\"><span class=\"string\">首选master使samba在启动时拒绝一个本地浏览器的选出，且给他一些小的较高的机会让其来选出。</span></span><br><span class=\"line\"><span class=\"string\">; preferred master = yes</span></span><br><span class=\"line\"><span class=\"string\">如果你要samba成为Win95工作站的域登录服务器的话则激活它。</span></span><br><span class=\"line\"><span class=\"string\">; domain logons = yes</span></span><br><span class=\"line\"><span class=\"string\">如果你激活了domain logons，那么你可以让每一台机器或每一个用户登录角本运行一个指定的登录批处理文件。原文如下：if you enable domain logons then you may want a per-machine or per user logon script run a specific logon batch file per workstation (machine)</span></span><br><span class=\"line\"><span class=\"string\">; logon script = %m.bat</span></span><br><span class=\"line\"><span class=\"string\">每一个用户名都运行一个指定的登录批处理文件</span></span><br><span class=\"line\"><span class=\"string\">; logon script = %U.bat</span></span><br><span class=\"line\"><span class=\"string\"># 存储动态的profile（仅针对95与NT）</span></span><br><span class=\"line\"><span class=\"string\"># %L 代表netbios name, %U 是一个用户名</span></span><br><span class=\"line\"><span class=\"string\"># 不能注释掉下面的[Profiles]共享。</span></span><br><span class=\"line\"><span class=\"string\">; logon path = \\%L\\Profiles\\%U</span></span><br><span class=\"line\"><span class=\"string\">支持WINS部分：告诉samba组件的NMBD去激活WINS服务。</span></span><br><span class=\"line\"><span class=\"string\">; wins support = yes</span></span><br><span class=\"line\"><span class=\"string\">WINS服务器-告诉samba组件的NMBD成为一个WINS客户端。</span></span><br><span class=\"line\"><span class=\"string\">注意：samba即可以是一个WINS服务器，也可以是一个客户端，或都不是。</span></span><br><span class=\"line\"><span class=\"string\">; wins server = w.x.y.z</span></span><br><span class=\"line\"><span class=\"string\">WINS 代理-原文如下，没法翻译（Tells Samba to answer name resolution queries on behalf of a non WINS capable client,），执行这件事必须要求在网络中至少有一个Wins服务器。默认情况下是NO。</span></span><br><span class=\"line\"><span class=\"string\">; wins proxy = yes</span></span><br><span class=\"line\"><span class=\"string\"># DNS Proxy – 告诉samba是否经过DNS的nslookup试着去解析NETBIOS名。1.9.17的内置默认值是yes，目前已经改为1.9.18的no。</span></span><br><span class=\"line\"><span class=\"string\">dns proxy = no</span></span><br><span class=\"line\"><span class=\"string\">实例保存可以很简洁-系统默认值是_no_</span></span><br><span class=\"line\"><span class=\"string\">注意：可以在每一个共享基础上设置</span></span><br><span class=\"line\"><span class=\"string\">; preserve case = no</span></span><br><span class=\"line\"><span class=\"string\">; short preserve case = no</span></span><br><span class=\"line\"><span class=\"string\">默认实例是对于所有的DOS文件都大写</span></span><br><span class=\"line\"><span class=\"string\">; default case = lower</span></span><br><span class=\"line\"><span class=\"string\">对于此选项要很小心-它可能带来一些想不到的事情。</span></span><br><span class=\"line\"><span class=\"string\">; case sensitive = no</span></span><br><span class=\"line\"><span class=\"string\">[homes]</span></span><br><span class=\"line\"><span class=\"string\">comment = Home Directories</span></span><br><span class=\"line\"><span class=\"string\">browseable = no</span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\">valid users = %S</span></span><br><span class=\"line\"><span class=\"string\">create mode = 0664</span></span><br><span class=\"line\"><span class=\"string\">directory mode = 0775</span></span><br><span class=\"line\"><span class=\"string\">如果不想要samba不承认已经映射为guest的用户，可用如下设置</span></span><br><span class=\"line\"><span class=\"string\">; map to guest = bad user</span></span><br><span class=\"line\"><span class=\"string\">如果想创建netlogon目录给域登录，不要注释下面的内容。</span></span><br><span class=\"line\"><span class=\"string\">; [netlogon]</span></span><br><span class=\"line\"><span class=\"string\">; comment = Network Logon Service</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/local/samba/lib/netlogon</span></span><br><span class=\"line\"><span class=\"string\">; guest ok = yes</span></span><br><span class=\"line\"><span class=\"string\">; writable = no</span></span><br><span class=\"line\"><span class=\"string\">; share modes = no</span></span><br><span class=\"line\"><span class=\"string\">想提供一个指定的不固定的共享profile那么就不要注释下面的内容，默认使用用户主目录。</span></span><br><span class=\"line\"><span class=\"string\">;[Profiles]</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/local/samba/profiles</span></span><br><span class=\"line\"><span class=\"string\">; browseable = no</span></span><br><span class=\"line\"><span class=\"string\">; guest ok = yes</span></span><br><span class=\"line\"><span class=\"string\">注意：如果你有一个BSD风格的打印系统，则没有必须单独的特别指定每一个打印机。</span></span><br><span class=\"line\"><span class=\"string\">[printers]</span></span><br><span class=\"line\"><span class=\"string\">comment = All Printers</span></span><br><span class=\"line\"><span class=\"string\">path = /var/spool/samba</span></span><br><span class=\"line\"><span class=\"string\">browseable = no</span></span><br><span class=\"line\"><span class=\"string\">设置public=yes表示允许’guest account’打印</span></span><br><span class=\"line\"><span class=\"string\">guest ok = no</span></span><br><span class=\"line\"><span class=\"string\">writable = no</span></span><br><span class=\"line\"><span class=\"string\">printable = yes</span></span><br><span class=\"line\"><span class=\"string\">下面的内容对人们共享文件是有用的。</span></span><br><span class=\"line\"><span class=\"string\">;[tmp]</span></span><br><span class=\"line\"><span class=\"string\">; comment = Temporary file space</span></span><br><span class=\"line\"><span class=\"string\">; path = /tmp</span></span><br><span class=\"line\"><span class=\"string\">; read only = no</span></span><br><span class=\"line\"><span class=\"string\">; public = yes</span></span><br><span class=\"line\"><span class=\"string\">公用的可访问的目录，除了在staff组中的成员外，对其它人为只读</span></span><br><span class=\"line\"><span class=\"string\">;[public]</span></span><br><span class=\"line\"><span class=\"string\">; comment = Public Stuff</span></span><br><span class=\"line\"><span class=\"string\">; path = /home/nw</span></span><br><span class=\"line\"><span class=\"string\">; public = yes</span></span><br><span class=\"line\"><span class=\"string\">; writable = yes</span></span><br><span class=\"line\"><span class=\"string\">; printable = no</span></span><br><span class=\"line\"><span class=\"string\">; write list = @staff</span></span><br><span class=\"line\"><span class=\"string\">私有打印机，仅仅fred本人可用。打印池中的数据将被放到fred的主目录中。注意：fred用户无论在什么地方都必须对打印池有写访问的权限。</span></span><br><span class=\"line\"><span class=\"string\">;[yingou]</span></span><br><span class=\"line\"><span class=\"string\">; comment = qlj’s Printer</span></span><br><span class=\"line\"><span class=\"string\">; valid users = yingouqlj</span></span><br><span class=\"line\"><span class=\"string\">; path = /home/yingouqlj</span></span><br><span class=\"line\"><span class=\"string\">; public = no</span></span><br><span class=\"line\"><span class=\"string\">; writable = no</span></span><br><span class=\"line\"><span class=\"string\">; printable = yes</span></span><br><span class=\"line\"><span class=\"string\">私有目录，仅能对fred开放。注意fred对这个目录需要写访问的权限。</span></span><br><span class=\"line\"><span class=\"string\">;[fredsdir]</span></span><br><span class=\"line\"><span class=\"string\">; comment = qlj’s Service</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/somewhere/private</span></span><br><span class=\"line\"><span class=\"string\">; valid users = yingouqlj</span></span><br><span class=\"line\"><span class=\"string\">; public = no</span></span><br><span class=\"line\"><span class=\"string\">; writable = yes</span></span><br><span class=\"line\"><span class=\"string\">; printable = no</span></span><br><span class=\"line\"><span class=\"string\">允许你制作配置文件去引入的连接到这里的每一台机器都有不同的目录的服务。</span></span><br><span class=\"line\"><span class=\"string\">使用%U选去配置用户名，%m代替连接到的机器名。</span></span><br><span class=\"line\"><span class=\"string\">;[yingouqlj]</span></span><br><span class=\"line\"><span class=\"string\">; comment = PC Directories</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/local/pc/%m</span></span><br><span class=\"line\"><span class=\"string\">; public = no</span></span><br><span class=\"line\"><span class=\"string\">; writable = yes</span></span><br><span class=\"line\"><span class=\"string\">公共可访问的目录，对所有的用户都可读/写。注意：在这个目录中的所有由用户创建的文件都会被标识成默认用户所有。所以有访问仅限的用户可以删除别的用户的文件。很明显这个目录必须是可以被默认用户写的。另一个用户当然可以指定，这样所有的文件都将被那个用户所替代。</span></span><br><span class=\"line\"><span class=\"string\">[public]</span></span><br><span class=\"line\"><span class=\"string\">path = /tmp/aaaa</span></span><br><span class=\"line\"><span class=\"string\">public = yes</span></span><br><span class=\"line\"><span class=\"string\">guest ok = yes</span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\">printable = no</span></span><br><span class=\"line\"><span class=\"string\">下面的两个例子是怎样共享一个目录给两个用户，在这个共享目录中他们可以放置文件且分别属于各自所有。在这个设置中，目录将可以被两个用户同时使用且在其上有粘滞位保护。很明显，可以扩展为多个用户的情况。</span></span><br><span class=\"line\"><span class=\"string\">;[myshare]</span></span><br><span class=\"line\"><span class=\"string\">; comment = Mary’s and Fred’s stuff</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/somewhere/shared</span></span><br><span class=\"line\"><span class=\"string\">; valid users = mary fred</span></span><br><span class=\"line\"><span class=\"string\">; public = no</span></span><br><span class=\"line\"><span class=\"string\">; writable = yes</span></span><br><span class=\"line\"><span class=\"string\">; printable = no</span></span><br><span class=\"line\"><span class=\"string\">; create mask = 0765</span></span><br><span class=\"line\"><span class=\"string\">以下是个人实际的设置</span></span><br><span class=\"line\"><span class=\"string\">[sharedir]</span></span><br><span class=\"line\"><span class=\"string\">path = /home/nw</span></span><br><span class=\"line\"><span class=\"string\">public = yes</span></span><br><span class=\"line\"><span class=\"string\">guest ok = yes</span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">在RHEL下如何使用VPN？怎么往一个Samba(SMB)共享里添加一个用户？  2007-09-10 21:28:13|  分类： 默认分类 |  标签： |字号大中小 订阅 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">允许用户浏览Samba共享的一种方法是在Samba服务器上拥有一个UNIX帐号。可以通过命令 adduser [用户名] 和 passwd [用户名]来建立UNIX帐号。 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">当用户有了一个本地帐号，他的Samba密码可以这样初始化： </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    smbpasswd -a [用户名]-a选项增加用户名到Samba的密码文件里面里。 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">在/etc/smb.conf配置文件里修改Samba共享，允许新增加的用户浏览该共享资源。 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[ashare]    comment = A Shared Directory    path = /usr/somewhere/shared    valid users = mary [新用户]    public = no    writable = yes用testparm显示升级后的共享资源。</span></span><br><span class=\"line\"><span class=\"string\">用service smb reload命令重载smb.conf配置文件。 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">-- Create the user </span></span><br><span class=\"line\"><span class=\"string\">create user NC56</span></span><br><span class=\"line\"><span class=\"string\">  identified by \"nc56\"</span></span><br><span class=\"line\"><span class=\"string\">  default tablespace NNC_DATA01</span></span><br><span class=\"line\"><span class=\"string\">  temporary tablespace TEMP</span></span><br><span class=\"line\"><span class=\"string\">  profile DEFAULT;</span></span><br><span class=\"line\"><span class=\"string\">-- Grant/Revoke role privileges </span></span><br><span class=\"line\"><span class=\"string\">grant connect to NC56 with admin option;</span></span><br><span class=\"line\"><span class=\"string\">grant dba     to NC56 with admin option;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Linux-压缩命令汇总\"><a href=\"#Linux-压缩命令汇总\" class=\"headerlink\" title=\"Linux 压缩命令汇总\"></a>Linux 压缩命令汇总</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">09在Windows下最常见的压缩文件就只有两种，一是,zip，另一个是.rar。可是Linux就不同了，它有.gz、.tar.gz、tgz、bz2、.Z、.tar等众多的压缩文件名，此外windows下的.zip和.rar也可以在Linux下使用，不过在Linux使用.zip和.rar的人就太少了。本文就来对这些常见的压缩文件进行一</span><br><span class=\"line\">番小结，希望你下次遇到这些文件时不至于被搞晕icon_smile.gif</span><br><span class=\"line\"></span><br><span class=\"line\">　　在具体总结各类压缩文件之前呢，首先要弄清两个概念：打包和压缩。打包是指</span><br><span class=\"line\">将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压</span><br><span class=\"line\">缩算法变成一个小文件。为什么要区分这两个概念呢？其实这源于Linux中的很多压</span><br><span class=\"line\">缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就得先借助</span><br><span class=\"line\">另它的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。</span><br><span class=\"line\"></span><br><span class=\"line\">　　Linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包</span><br><span class=\"line\">，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进</span><br><span class=\"line\">行压缩了，所以首先就来讲讲tar命令的基本用法：</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar命令的选项有很多(用man tar可以查看到)，但常用的就那么几个选项，下面</span><br><span class=\"line\">来举例说明一下：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -cf all.tar *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包</span><br><span class=\"line\">，-f指定包的文件名。</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -rf all.tar *.gif</span></span><br><span class=\"line\">　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的</span><br><span class=\"line\">意思。</span><br><span class=\"line\"><span class=\"comment\"># tar -uf all.tar logo.gif</span></span><br><span class=\"line\">　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -tf all.tar</span></span><br><span class=\"line\">　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xf all.tar</span></span><br><span class=\"line\">　　这条命令是解出all.tar包中所有文件，-x是解开的意思</span><br><span class=\"line\"></span><br><span class=\"line\">　　以上就是tar的最基本的用法。为了方便用户在打包解包的同时可以压缩或解压</span><br><span class=\"line\">文件，tar提供了一种特殊的功能。这就是tar可以在打包或解包的同时调用其它的压</span><br><span class=\"line\">缩程序，比如调用gzip、bzip2等。</span><br><span class=\"line\"></span><br><span class=\"line\">　　1) tar调用gzip</span><br><span class=\"line\"></span><br><span class=\"line\">　　gzip是GNU组织开发的一个压缩程序，.gz结尾的文件就是gzip压缩的结果。与gzip</span><br><span class=\"line\">相对的解压程序是gunzip。tar中使用-z这个参数来调用gzip。下面来举例说明一下</span><br><span class=\"line\">：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -czf all.tar.gz *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个</span><br><span class=\"line\">gzip压缩过的包，包名为all.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xzf all.tar.gz</span></span><br><span class=\"line\">　　这条命令是将上面产生的包解开。</span><br><span class=\"line\"></span><br><span class=\"line\">　　2) tar调用bzip2</span><br><span class=\"line\"></span><br><span class=\"line\">　　bzip2是一个压缩能力更强的压缩程序，.bz2结尾的文件就是bzip2压缩的结果。</span><br><span class=\"line\">与bzip2相对的解压程序是bunzip2。tar中使用-j这个参数来调用gzip。下面来举例</span><br><span class=\"line\">说明一下：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -cjf all.tar.bz2 *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个</span><br><span class=\"line\">bzip2压缩过的包，包名为all.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xjf all.tar.bz2</span></span><br><span class=\"line\">　　这条命令是将上面产生的包解开。</span><br><span class=\"line\">3)tar调用compress</span><br><span class=\"line\"></span><br><span class=\"line\">　　compress也是一个压缩程序，但是好象使用compress的人不如gzip和bzip2的人</span><br><span class=\"line\">多。.Z结尾的文件就是bzip2压缩的结果。与 compress相对的解压程序是uncompress</span><br><span class=\"line\">。tar中使用-Z这个参数来调用compress。下面来举例说明一下：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -cZf all.tar.Z *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成</span><br><span class=\"line\">一个uncompress压缩过的包，包名为all.tar.Z</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xZf all.tar.Z</span></span><br><span class=\"line\">　　这条命令是将上面产生的包解开</span><br><span class=\"line\"></span><br><span class=\"line\">　　有了上面的知识，你应该可以解开多种压缩文件了，下面对于tar系列的压缩文</span><br><span class=\"line\">件作一个小结：</span><br><span class=\"line\"></span><br><span class=\"line\">　　1)对于.tar结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar -xf all.tar</span><br><span class=\"line\"></span><br><span class=\"line\">　　2)对于.gz结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　gzip -d all.gz</span><br><span class=\"line\">　　gunzip all.gz</span><br><span class=\"line\"></span><br><span class=\"line\">　　3)对于.tgz或.tar.gz结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar -xzf all.tar.gz</span><br><span class=\"line\">　　tar -xzf all.tgz</span><br><span class=\"line\"></span><br><span class=\"line\">　　4)对于.bz2结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　bzip2 -d all.bz2</span><br><span class=\"line\">　　bunzip2 all.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">　　5)对于tar.bz2结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar -xjf all.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">　　6)对于.Z结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　uncompress all.Z</span><br><span class=\"line\"></span><br><span class=\"line\">　　7)对于.tar.Z结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar -xZf all.tar.z</span><br><span class=\"line\"></span><br><span class=\"line\">　　另外对于Window下的常见压缩文件.zip和.rar，Linux也有相应的方法来解压它</span><br><span class=\"line\">们：</span><br><span class=\"line\"></span><br><span class=\"line\">　　1)对于.zip</span><br><span class=\"line\"></span><br><span class=\"line\">　　linux下提供了zip和unzip程序，zip是压缩程序，unzip是解压程序。它们的参</span><br><span class=\"line\">数选项很多，这里只做简单介绍，依旧举例说明一下其用法：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># zip all.zip *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件压缩成一个zip包</span><br><span class=\"line\"><span class=\"comment\"># unzip all.zip</span></span><br><span class=\"line\">　　这条命令是将all.zip中的所有文件解压出来</span><br><span class=\"line\"></span><br><span class=\"line\">　　2)对于.rar</span><br><span class=\"line\"></span><br><span class=\"line\">　　要在linux下处理.rar文件，需要安装RAR <span class=\"keyword\">for</span> Linux，可以从网上下载，但要记</span><br><span class=\"line\">住，RAR <span class=\"keyword\">for</span> Linux</span><br><span class=\"line\">不是免费的；可从[url]http://www.rarsoft.com/download.htm[/url]下载RARfor Linux 3.2.</span><br><span class=\"line\">0，然后安装：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xzpvf rarlinux-3.2.0.tar.gz</span></span><br><span class=\"line\">　　<span class=\"comment\"># cd rar</span></span><br><span class=\"line\">　　<span class=\"comment\"># make</span></span><br><span class=\"line\"></span><br><span class=\"line\">　　这样就安装好了，安装后就有了rar和unrar这两个程序，rar是压缩程序，unrar</span><br><span class=\"line\">是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># rar a all *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar</span><br><span class=\"line\">扩展名将自动附加到包名后。</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># unrar e all.rar</span></span><br><span class=\"line\">　　这条命令是将all.rar中的所有文件解压出来</span><br><span class=\"line\"></span><br><span class=\"line\">　　到此为至，我们已经介绍过linux下的tar、gzip、gunzip、bzip2、bunzip2、compress</span><br><span class=\"line\">、 uncompress、 zip、unzip、rar、unrar等程式，你应该已经能够使用它们对.tar</span><br><span class=\"line\">、.gz、.tar.gz、.tgz、.bz2、.tar.bz2、. Z、.tar.Z、.zip、.rar这10种压缩文</span><br><span class=\"line\">件进行解压了，以后应该不需要为下载了一个软件而不知道如何在Linux下解开而烦</span><br><span class=\"line\">恼了。而且以上方法对于Unix也基本有效。</span><br><span class=\"line\"></span><br><span class=\"line\">　　本文介绍了linux下的压缩程式tar、gzip、gunzip、bzip2、bunzip2、compress</span><br><span class=\"line\">、uncompress、 zip、 unzip、rar、unrar等程式，以及如何使用它们对.tar、.gz</span><br><span class=\"line\">、.tar.gz、.tgz、.bz2、.tar.bz2、.Z、. tar.Z、.zip、.rar这10种压缩文件进行</span><br><span class=\"line\">操作。</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"第一讲\"><a href=\"#第一讲\" class=\"headerlink\" title=\"第一讲\"></a>第一讲</h2><p>zh_CN.GB18030<br><code>cat /etc/shells</code> 可以查看系统的 shell 种类。<code>echo $SHELL</code> 查看当前使用的shell。在当前shell中运行其它shell，例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /bin/csh ls -lh。 </span></span><br><span class=\"line\">chomod u=rwx,g+w,o+r file </span><br><span class=\"line\">chown -R jack /etc/<span class=\"built_in\">test</span>/ <span class=\"comment\">#把这个目录下所有的子目录和文件的拥有者都改变成jack</span></span><br></pre></td></tr></table></figure>\n<p>把这个目录下所有的子目录和文件的拥有者都改变成jack。</p>\n<p><code>chown jack.jack /etc/test/ -R</code><br>umask   文件   目录<br>0    6    7<br>1    5    6<br>2    4    5<br>3    3    4<br>4    2    3<br>5    1    2<br>6    0    1<br>7    0    0<br>/etc/profile 文件中可以设定 umask 值。</p>\n<p><code>alias ll=&#39;ls -alh&#39;</code></p>\n<p><code>cat $HOME/.bashrc</code> , 别名都放在这个文件中。</p>\n<p>命令替换：<code>ls \\</code>cat myfile` -al`，这个反引号就是1左边的键，把myfile的内容输出到ls的输入。<br>后台运行：# nohup tar -czf abc.tar.gz /etc/abc/ &amp;。jobs -l查看后台运行情况。<br>模式匹配：ls *.txt -l。</p>\n<h2 id=\"第二讲\"><a href=\"#第二讲\" class=\"headerlink\" title=\"第二讲\"></a>第二讲</h2><p>本地变量在用户现在的shell生命期的脚本中使用，例在当前shell中设置变量，ABC=123，然后exit退出当前shell，再进入系统用set指令(显示本地变量)发现ABC变量无。readonly ABC，把ABC设置成只读变量。只是用readonly指令显示当前shell中有哪些只读变量。</p>\n<p>环境变量用于所有用户进程（经常称为子进程）。登录进程称为父进程，shell中执行的用户进程均称为子进程。不像本地变量(只用于现在的shell)环境变量可用于所有子进程，这包括编辑器，脚本和应用。<br>$HOME/.bash_profile(/etc/profile)<br>export，例：export ABC=”shell program”，把ABC这个变量变成环境变量。直接输入export也可以查看环境变量有哪些。readonly ABC，把环境变量ABC变成只读的。</p>\n<p>变量替换：<br>${var name}    显示实际值到var name<br>${var name:+value}    如果设置了var name，则显示其值value，否则为空<br>${var name:?value}    如果未设置var name，显示用户定义错误信息value<br>${var name:-value}    如果未设置var name，显示其值value，如果设置了var name则显示var name的值<br>${var name:=value}    如果未设置var name，设置其值并显示，如果设置了var name则显示var name的值<br>env<br>unset ABC，删除ABC变量，但是用readonly声明的变量是不能被unset的。</p>\n<p>位置变量：先看下面的脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#parms</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"program name is <span class=\"variable\">$0</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"1 parm is <span class=\"variable\">$1</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"2 parm is <span class=\"variable\">$2</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"3 parm is <span class=\"variable\">$3</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"4 parm is <span class=\"variable\">$4</span>\"</span></span><br></pre></td></tr></table></figure>\n<p>然后运行这个脚本：./parms a b c d，就会显示结果,$0表示脚本名称，$1-9分别表示位置变量名，在运行脚本时代入脚本中。<br>再例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#parm.sh</span></span><br><span class=\"line\">find /home/chinaitlab/shell -name <span class=\"variable\">$1</span> -<span class=\"built_in\">print</span></span><br></pre></td></tr></table></figure>\n<p>然后运行这个脚本: <code>./parm.sh abc.txt</code> 。</p>\n<p>标准变量：bash 默认建立了一些标准环境变量，可在 /etc/profile 中定义。<br> EXINIT，运行 vi 时初始化设置一些参数<br>HOME<br>IFS<br>LOGNAME<br>MAIL<br>MAILCHECK<br>MAILPATH<br>PATH<br>PS1<br>PS2<br>SHELL<br>TERMINFO<br>TERM<br>TZ<br>EDITOR<br>PWD<br>MANPATH</p>\n<p>特殊变量：<br>$#(传递到脚本的参数个数)<br>$*(以一个单字符串显示所有向脚本传递的参数。与位置变量不同，此选项参数可超过9个)<br>$$(脚本运行的当前进程ID号)<br>$!(后台运行的最后一个进程的进程ID号)<br>$@(与$#相同，但是使用时加引号，并在引号中返回每个参数)<br>$-(显示shell使用的当前选项，与set命令功能相同)<br>$?(显示最后命令的推出状态。0表示没有错误，其它任何值表明有错误)</p>\n<p>影响变量的命令：<br>declare<br>-设置或显示变量<br>-f 只显示函数名<br>-r 创建只读变量(declare和typeset)<br>-x 创建转出变量<br>-i 创建整数变量</p>\n<ul>\n<li>使用+替代-，可以颠倒选项的含义<br>export<br>-用于创建传给予shell的变量(环境变量)</li>\n<li>–表明选项结束，所有后续参数都是实参</li>\n<li>-f表明在”名-值”对中的名字是函数名</li>\n<li>-n把全局变量转换成局部变量，换句话说，命令的变量不再传给shell</li>\n<li>-p显示全局变量列表<br>unset</li>\n<li>用于取消变量的定义</li>\n<li>–表明选项结束</li>\n<li>-f删除只读变量，但不能取消从shell环境中删除指定的变量和函数如：PATH，PS1，PS2，PPID，UID，EUID等的设置。<br>shift[n]</li>\n<li>用于移动位置变量，调整位置变量，使$3的值赋予$2,$2的值赋予$1。<br>typeset<br>-用于显示或设置变量<br>-是declare的同义词</li>\n</ul>\n<p>引号：<br>使用双引号可以引用除字符$,<code>(反引号),\\外的任意字符或字符串。例：echo -e &quot;ert, $SHELL&#39;\\n* china</code>echo itlab<code>&quot;。\n单引号会忽略其中所有的特殊含义的字符，例：echo &#39;ert, $SHELL * china</code>echo itlab`’。<br>反引号用于设置系统命令的输出到变量，shell将反引号中的内容作为一个系统命令，并执行其内容。<br>反斜杠：如果一个字符有特殊含义，反斜杠防止shell误解其含义，即屏蔽其特殊含义，这些字符有特殊含义： $,<em>,+,&amp;,”,|,?,^例：echo </em>，显示当前目录下的所有文件名，echo *，则显示*。</p>\n<p>运算符类型：<br>按位运算符    ~,&lt;&lt;,&gt;&gt;,&amp;,|,^<br>运算符        说明<br>~op1        反运算符，把op1中所有的二进制为1变为0，0变为1<br>op1&lt;<op2 左移运算符，把op1中的二进制位向左移动op2位，忽略最左端移出的各位，最右端的各位补0值，每做一次按位左移就有实现op1乘以2。=\"\" op1=\"\">&gt;op2    右移运算符，把op1中的二进制位向右移动op2位，忽略最右端移出的各位，最左端的各位补0值，每做一次按位右移就有实现op1除以2。<br>op1&amp;op2        与比较运算符，op1和op2对应位，对于每个二进制位来说，如果二者该位都是1，则结果为1，否则为0。<br>op1^op2        异或运算符，op1和op2对应位，对于每个二进制位来说，如果二者该位互补，则结果为1否则为0。<br>op1|op2        或运算符。<br>$[]表示形式告诉shell对方括号中的表达式求值，例：echo $[2+8]，echo $[2&gt;&gt;8]，echo $[2&lt;&lt;4]，echo $[2^4]，echo $[~3]。<br>逻辑运算符：&amp;&amp;,||,&gt;,==,&lt;,!=例：echo $[2&amp;&amp;2]，echo $[1||0]。<br>赋值运算符：=,+=,-=,*=,/=,%=,&amp;=,^=,|=,&lt;&lt;=,&gt;&gt;=<br>let $count=$count+$change<br>let $count+=$change<br>$[]可以接受不同基数的数字</op2></p>\n<ul>\n<li>[ base#n ] n表示基数从2到36的任何基数，例：echo $[10#8+1]，8进制的10加上1，结果为9。</li>\n</ul>\n<h2 id=\"第三讲-Shell-输入与输出\"><a href=\"#第三讲-Shell-输入与输出\" class=\"headerlink\" title=\"第三讲 Shell 输入与输出\"></a>第三讲 Shell 输入与输出</h2><p>echo [option] string</p>\n<ul>\n<li>e解析转义字符</li>\n<li>-n回车不换行，linux系统默认回车换行，例：echo “hello”和echo -n “hello”的区别。</li>\n<li>string中的转义符(\\c,\\f,\\t,\\n)，\\c表示回车不换行，\\f表示禁止，\\t表示跳格(tab)，\\n表示回车换行<br>例：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#echod</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"This echo's 3 new lines\\n\\n\\n\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"OK\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"This echo's 3 new lines\\n\\n\\n\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"The log files have all been done\"</span>&gt;mylogfile.txt</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>read语句可以从键盘或文件的某一行文本中读入信息，并将其赋给一个变量。<br>read var1 var2…<br>-如果只指定了一个变量，那么read将会把所有的输入赋给该变量，直至遇到第一个文件结束符或回车；如果给出了多个变量，他们按顺序分别被赋予不同的变量。shell将用空格作为变量之间的分隔符。<br>例：</p>\n<p>#!/bin/bash</p>\n<p>#readname<br>echo -n “First name:”<br>read firstname<br>echo -n “Last name:”<br>read lastname<br>echo -e “Your First Name is :${firstname}\\n”<br>echo -e “Your Last Name is :${lastname}\\n”</p>\n<p>cat可显示文件内容，创建文件还可以显示控制字符。<br>cat [options] file1 file2…</p>\n<ul>\n<li>-v显示控制字符<br>使用cat命令时要注意，它不会在文件分页符处停下来，它会一下显示完整个文件，如果希望每次显示一页，可以使用more。例：cat file1 file2 file3，会在屏幕上同时显示三个文件的内容，cat file1 file2 file3&gt;file123，会把这三个文件的内容合并到一个文件file123中，cat -v dos.txt，显示这个windows下生成的文件，并显示控制字符(这些控制字符是在windows生成这个文件时加入的)。<br>管道举例：df -k|awk ‘{print $1}’|grep -v “Filesystem”。<br>tee命令把输出的一个副本输送到标准输出，另一个副本拷贝到相应的文件中。<br>tee -a files</li>\n<li>如果希望在看到输出的同时，也将其存入一个文件，那么这个命令再合适不过了，一般用于管道之后，-a参数表示追加写入files中，如果没有-a参数，则覆盖写入这个文件中。例：who | tee -a who.out。</li>\n</ul>\n<p>标准输入输出和错误<br>在shell中执行命令时，每个进程都和三个打开的文件相联系，并使用文件描述符来引用这些文件，由于文件描述符不容易记忆，shell同时给出了相应的文件名。<br>文件            文件描述符<br>输入文件-标准输入    0(缺省是键盘，也可以是文件或其它命令的输出)<br>输出文件-标准输出    1(缺省是屏幕，也可以是文件)<br>错误输出文件-标准错误    2(缺省是屏幕，也可以是文件)<br>系统中实际上有12个文件描述符，可以任意使用文件描述符3到9。</p>\n<p>文件重定向<br>command &gt; file        把标准输出重定向到一个新文件中<br>command &gt;&gt; file        把标准输出重定向到一个文件中(追加)<br>command 1 &gt; file    把标准输出重定向到一个文件中<br>command &gt; file 2&gt;&amp;1    把标准输出和标准错误一起重定向到一个文件中<br>command 2 &gt; file    把标准错误重定向到一个文件中<br>command 2&gt;&gt; file    把标准输出重定向到一个文件中(追加)<br>command &gt;&gt; file 2&gt;&amp;1    把标准输出和标准错误一起重定向到一个文件中(追加)<br>command &lt; file &gt; file2    command命令以file作为标准输入，file2文件作为标准输出<br>command &lt; file        command命令以file作为输入<br>command &lt;&lt; dclimiter    从标准输入中读入，直至遇到dclimiter分界符<br>command &lt; &amp;m        把文件描述符m作为标准输入<br>command &gt; &amp;m        把标准输出重定向到文件描述符m中<br>command &lt; &amp;-        关闭标准输入<br>例：&gt;nullfile，创建一个新的空文件。sort &lt; file，把file作为输入源，排序然后输出到屏幕上。sort &lt; name.txt &gt; name.out。cat account_new.txt account_old.txt 1&gt;accounts.out 2&gt;accounts.err，account_new.txt存在，account_old.txt不存在，那么accounts.out将包含account_new.txt的内容，不会包含account_old.txt的内容，account_old.txt不存在的错误信息会写入accounts.err中。<br>合并标准输出和标准错误的时候，切忌shell是从左至右分析相应的命令，例：grep “standard” standard.txt &gt; grep.out 2&gt;&amp;1。</p>\n<p>exec命令可以用来替代当前shell；换句话说，并没有启动子shell，使用这一命令时任何现有环境都会被清除，并重新启动一个shell。<br>exec command<br>-其中的command通常是一个shell脚本。<br>对文件描述符进行操作的时候(也只有在这时)，它不会覆盖你当前的shell。</p>\n<p>文件描述符：<br>3-9文件描述符<br>exec与文件描述符的结合<br>例：</p>\n<p>#!/bin/bash</p>\n<p>#file_desc<br>exec 3&lt;&amp;0 0&lt;name.txt<br>read line1<br>read line2<br>exec 0&lt;&amp;3<br>echo $line1<br>echo $line2</p>\n<h2 id=\"第四讲-控制流结构\"><a href=\"#第四讲-控制流结构\" class=\"headerlink\" title=\"第四讲 控制流结构\"></a>第四讲 控制流结构</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> 条件1</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\t命令1</span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件2</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">\t命令2</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t命令3</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#if test</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"10\"</span> -lt <span class=\"string\">\"12\"</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">   <span class=\"built_in\">echo</span> <span class=\"string\">\"yes,10 is less than 12\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>可以使用man test获得条件的帮助。<br>再例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#iftest2</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter your name:\"</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> NAME</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$NAME</span>\"</span> == <span class=\"string\">\"\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"You did not enter your name\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>再例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#ifcp</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> cp myfile.bak myfile;<span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"good copy\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"built_in\">echo</span> <span class=\"string\">\"basename <span class=\"variable\">$0</span>:error could not copy files\"</span> &gt;&amp;2</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>再例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#ifelif</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter your name:\"</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> NAME</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"variable\">$NAME</span> ] || [ <span class=\"string\">\"<span class=\"variable\">$NAME</span>\"</span> = <span class=\"string\">\"\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you do not enter a name.\"</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"string\">\"<span class=\"variable\">$NAME</span>\"</span> = <span class=\"string\">\"root\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"hello root\"</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"string\">\"<span class=\"variable\">$NAME</span>\"</span> = <span class=\"string\">\"chinaitlab\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"hello chinaitlab\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you are not root or chinaitlab,but hi,<span class=\"variable\">$NAME</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>case语句格式: </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> 值 <span class=\"keyword\">in</span></span><br><span class=\"line\">模式1)</span><br><span class=\"line\">\t命令1</span><br><span class=\"line\">\t;;</span><br><span class=\"line\">模式2)</span><br><span class=\"line\">\t命令2</span><br><span class=\"line\">\t;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure>\n<p>case取值后面必须为单词in，每一个模式必须以右括号结束。取值可以为变量或常数，匹配发现取值符合某一模式后，其间所有命令开始执行直至;;。模式匹配符*表示任意字符,?表示任意单字符，[..]表示类或范围中任意字符。<br>例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#case select </span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter a number from 1 to 3:\"</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> ANS</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"variable\">$ANS</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">1)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you select 1\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">2)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you select 2\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">3)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you select 3\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">Y|y)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you select <span class=\"variable\">$ANS</span>\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"basename <span class=\"variable\">$0</span>:This is not between 1 and 3\"</span> &gt;&amp;2</span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>;</span><br><span class=\"line\">\t;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure>\n<p>for循环格式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> 变量名 <span class=\"keyword\">in</span> 列表</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t命令1</span><br><span class=\"line\">\t命令2</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>当变量值在列表里，for循环即执行一次所有命令，使用变量名访问列表中取值。命令可为任何有效的shell命令和语句。变量名为任何单词。In列表用法是可选的，如果不用它，for循环使用命令行的位置参数。in列表可以包含替换，字符串和文件名。<br>例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#forlist1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> loop <span class=\"keyword\">in</span> 1 2 3 4 5</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$loop</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>再例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#forlist2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> loop <span class=\"keyword\">in</span> <span class=\"string\">\"orange red blue grey\"</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"variable\">$loop</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>再例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#forlist2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> loop <span class=\"keyword\">in</span> `cat myfile`</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"variable\">$loop</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">until循环格式：</span><br><span class=\"line\">until 条件</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  命令1</span><br><span class=\"line\">  命令2</span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>注：条件可为任意测试条件，测试发生在循环末尾，因此循环至少执行一次。<br>例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#until_mon</span></span><br><span class=\"line\"><span class=\"comment\">#监控分区</span></span><br><span class=\"line\">Part=<span class=\"string\">\"/backup\"</span></span><br><span class=\"line\"><span class=\"comment\">#得到磁盘使用的百分比</span></span><br><span class=\"line\">LOOK_OUT=`df|grep <span class=\"string\">\"<span class=\"variable\">$Part</span>\"</span>|awk <span class=\"string\">'&#123;print $5&#125;'</span>|sed <span class=\"string\">'s/%//g'</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$LOOK_OUT</span></span><br><span class=\"line\">until [<span class=\"string\">\"<span class=\"variable\">$LOOK_OUT</span>\"</span> gt <span class=\"string\">\"90\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"FileSystem /backup is nearly full\"</span> |mail root</span><br><span class=\"line\">  LOOK_OUT=`df|grep <span class=\"string\">\"<span class=\"variable\">$Part</span>\"</span>|awk <span class=\"string\">'&#123;print $5&#125;'</span>|sed <span class=\"string\">'s/%//g'</span>`</span><br><span class=\"line\">  sleep 3600</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>然后# nohup ./dfuntil &amp;让这个程序在后台运行，一小时检测一次看这个分区的空间占用率是否大于90%。</p>\n<p>while格式：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> 命令</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  命令1</span><br><span class=\"line\">  命令2</span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>注：在while和do之间虽然通常只使用一个命令，但可以放几个命令，命令通常用作测试条件。<br>例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#whileread</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"按住&lt;ctrl&gt;+D退出输入。\"</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">echo</span> -n <span class=\"string\">\"输入你最喜欢的电影：\"</span>;<span class=\"built_in\">read</span> FILM</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"Yeah.<span class=\"variable\">$&#123;FILM&#125;</span>是一部好电影！\"</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>再例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#whileread</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> LINE</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$LINE</span></span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt;names.txt</span><br></pre></td></tr></table></figure></p>\n<p>把names.txt这个文件的内容按每行输出到屏幕。<br>break与continue：<br>break[n]<br>-退出循环，如果是在一个嵌入循环里，可以指定n来跳出的循环个数。<br>例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#breakout</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> :</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter any number[1..5]:\"</span></span><br><span class=\"line\">  <span class=\"built_in\">read</span> ANS</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"variable\">$ANS</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">  1|2|3|4|5)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you enter a number between 1 and 5.\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">  *)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"wrong number,bye.\"</span></span><br><span class=\"line\">\t<span class=\"built_in\">break</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">  <span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>再例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#breakout</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> :</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -n <span class=\"string\">\"Enter any number[1..5]:\"</span></span><br><span class=\"line\">  <span class=\"built_in\">read</span> ANS</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"variable\">$ANS</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">  1|2|3|4|5)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"you enter a number between 1 and 5.\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\">  *)</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -n <span class=\"string\">\"wrong number,continue(y/n)?:\"</span></span><br><span class=\"line\">\t<span class=\"built_in\">read</span> IS_CONTINUE</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$IS_CONTINUE</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\ty|yes|Y|YES)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">continue</span></span><br><span class=\"line\">\t\t\t;;</span><br><span class=\"line\">\t\t*)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">break</span></span><br><span class=\"line\">\t\t\t;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\">  <span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第五讲\"><a href=\"#第五讲\" class=\"headerlink\" title=\"第五讲\"></a>第五讲</h2><p>正则表达式：一种用来描述文本模式的特殊语法，由普通字符(a到z)以及特殊字符(称为元字符，如/,*,?等)<br>匹配的字符串<br>文本过滤工具在某种模式下都支持正则表达式<br>基本元字符集及含义<br>字符    含义<br>^    只匹配行首<br>$    只匹配行尾</p>\n<ul>\n<li>匹配0个或多个此单字符<br>]    只匹配[]内字符，可以是一个单字符，也可以是字符序列。可以使用-表示[]内字符序列范围，如用[1-5]代替[12345]。<br> 只用来屏蔽一个元字符的特殊含义<br> 只匹配任意单字符<br>attern{n}    只用来匹配前面pattern出现次数。n为次数<br>attern{n,}    含义同上，但次数最少为n<br>attern{n,m}    含义同上，但pattern出现次数在n与m之间。<br>例：<br>^d<br>rwxrwxrw-    匹配<br>rw-rw-rw    不匹配<br>^…1<br>482XC56D    不匹配<br>442XW7134    不匹配<br>451ABC123    匹配<br>D11XC9871    匹配<br>trouble$–匹配以单词trouble结尾的所有字符<br>^$–匹配空行<br>^.$–匹配包含一个字符的行<br>用\\屏蔽一个特殊字符，特殊字符有”,’,||,^,<em>,.,+等，\\</em>.pas正则表达式中匹配以*.pas结尾的所有字符或文件。</li>\n</ul>\n<p>逗号将括弧内要匹配的不同字符串分开，用-表示一个字符串范围<br>[0123456789]或[0-9]：任意一个数字<br>[a-z]：任意小写字母<br>[A-Z a-z]：任意大小写字母<br>[A-Z a-z 0-9]：任意字母或数字<br>[S,s]：匹配大小写s</p>\n<p>A{2}B：A出现2次：AAB<br>A{4,}B：A最少出现4次，AAAAB，AAAAAB…<br>A{2,4}B：A出现次数范围2-4次，AAB，AAAB，AAAAB<br>[0-9]{3}.[0-9]{3}.[0-9]{3}.[0-9]{3}：匹配IP地址</p>\n<p>find命令形式<br>find pathname -option [-print -exec -ok]<br>-pathname查找路径，例如用.来表示当前目录，用/表示系统根目录。-print，find命令将匹配的文件输出到标准输出。-exec，find命令对匹配的文件执行该参数所给出的shell命令，相应命令的形式为’command’{} \\;’，注意{}和\\；之间的空格。-ok和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前都会给出提示，让用户来确定是否执行。<br>find命令的一般形式：<br>-name按照文件名找文件<br>-perm按照文件权限来找文件<br>-user按照文件属主来找文件<br>-group按照文件所属的组来找文件<br>-mtime -n +n按照文件的更改时间来查找文件。-n表示文件更改时间距现在n天以内，+n表示文件更改时间距现在n天以前。find命令还有-atime和-ctime选项，但他们都和-mtime选项相似<br>-size n[c]查找文件长度为n块的文件，带有c时表示文件长度以字节计。<br>-nogroup查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。<br>-nouser查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。<br>-newer file1 ! -newer file2查找更改时间比文件file1新但比文件file2旧的文件。<br>-type查找某一类的文件，比如：b块设备文件，d目录，c字符设备文件，p管道文件，l符号链接文件，f普通文件。</p>\n<p>举例：<br>-name：可以使用某种文件名模式来匹配文件，记住要用引号将文件名模式引起来，例：<br>find -name “<em>.txt” -print，没有路径表示查找当前路径。find ./ -name “</em>.txt” -print。find ./ -name “[A-Z]<em>“ -print，find /etc -name “host</em>“ -print。<br>-perm：find . -perm 755 -print。<br>-user和-nouser：find <code>pwd</code> -user root -print。find <code>pwd</code> -nouser -print。<br>-group和-nogroup：find ./ -group itlab -print，find / -nogroup -print。<br>-mtime：find /var -mtime -5 -print，find /var -mtime +3 -print。<br>-newer：find <code>pwd</code> -newer “myfile” ! -newer “myfile123” -print。<br>-type：find /etc -type d -print。<br>-size：find . -size +1000000c -print查找文件大小大于1000000字节的文件，find . -size +10 -print，查找大小大于10块的文件。<br>-depth：使用find命令时，可能希望先匹配所有的文件，再在子目录中查找，find / -name “con.file” -depth -print。<br>-exec或ok：find . -type f -exec ls -l {} \\;<br>find . -name “*.log” -mtime +5 -ok rm{} \\;<br>-xargs:在使用find命令的-exec选项处理匹配到的文件时，find命令将所有匹配到的文件一起传递给exec，不幸的是有些系统对能够传递给exec的命令长度有限制，这样在find命令运行几分钟后就会出现溢出错误。错误信息通常是“参数列太长”或“参数列溢出”，这就是xargs命令的用处所在，特别是与find命令一起使用。exec会发起多个进程，而xargs不会多个，只有一个。例：find ./ -perm -7 -print | xargs chmod o-w，<br>find ./ -type f -print | xargs file。</p>\n<p>grep介绍<br>对文本文件进行模式查找，grep有三种变形<br>-Grep：标准grep命令<br>-Egrep：扩展grep，支持基本及扩展的正则表达式<br>-Fgrep：快速grep<br>grep一般格式为：<br>-grep[选项]基本正则表达式[文件]<br>-字符串参数(基本正则表达式)最好采用双引号，一是以防被误解为shell命令，二是可以用来查找多个单词组成的字符串。<br>grep命令选项：<br>-c：只输出匹配行的计数<br>-i：不区分大小写(只适用于单字符)<br>-h：查询多文件时不显示文件名<br>-H：显示文件名<br>-l：查询多文件时只输出包含匹配字符的文件名<br>-n：显示匹配行及行号<br>-s：不显示不存在或无匹配文本的错误信息<br>-v：显示不包含匹配文本的所有行<br>例：<br>grep “jenny” <em>.txt<br>grep “sort it” </em><br>grep -c “2004” myfile<br>grep -n “2004” myfile<br>grep -i “Jul” myfile<br>grep -v “2004:22” myfile<br>grep “2004:22:5[0-9]” myfile<br>grep “^[^210]” myfile，查找行首不是2或1或0的行。<br>grep “[5-8][6-9][0-2]” myfile<br>grep “4{2}“ myfile<br>grep “4{2,}“ myfile<br>grep “4{2,4}“ myfile<br>grep “^$” myfile<br>grep “\\?” myfile<br>grep “^d” myfile<br>grep “^[^d]” myfile</p>\n<p>grep命令类名类等价的正则表达式<br>[[:upper:]][A-Z]<br>[[:alnum:]][0-9a-zA-Z]<br>[[:lower:]][a-z]<br>[[:space:]]    空格或tab键<br>[[:digit:]][0-9]<br>[[:alpha:]][a-zA-Z]<br>例：grep “5[[:digit:]][[:digit:]]” myfile</p>\n<p>awk介绍<br>可从文件或字符串中基于指定规则浏览和抽取信息，是一种自解释的编程语言，三种方式调用awk：<br>-命令行方式：<br>    awk [-F field-spearator]’command’ input-files，field-spearator默认是空格。<br>-awk脚本<br>    所有awk命令插入一个文件，并使awk程序可执行，然后用awk命令解释器作为脚本的首行，以便通过键入脚本名称来调用它。<br>-awk命令插入一个单独文件<br>    awk -f awk-script-file input-files</p>\n<p>awk脚本由各种操作和模式组成<br>模式和动作：<br>    -模式部分决定动作语句何时出发及出发事件。(BEGIN,END)<br>    -动作对数据进行处理，放在大括号{}内指明。(input)<br>分隔符，域和记录：<br>    -awk执行时，其浏览域标记为$1,$2…$n。这种方法称为域标识。$0为所有域，即这条记录。<br>    -注意执行时不要混淆符号$和shell提示符$，他们是不同的。<br>例：awk ‘{print $0}’ score.txt | tee score.out。<br>awk -F . ‘{print $0}’ score.txt |tee score.out。<br>awk ‘{print $1 “\\t”$4}’ score.txt。<br>awk ‘BEGIN {print “Name Maths\\n——“} {print $1”\\t”$4} END {print “end-of-report”}’ score.txt。</p>\n<p>awk中的特殊元字符：+和？，+表示匹配任意字符，？表示匹配单个字符。<br>匹配操作符：~(表示匹配),!~(表示不匹配)，要匹配的内容放在两个\\之间。<br>cat score.txt|awk ‘$0 ~/218.79.131.96/‘。<br>awk ‘$0 !~/218.79.131.96/‘ score.txt。<br>awk ‘{if($1==”218.79.131.96”) print $0}’ score.txt。</p>\n<p>sed介绍<br>sed不与初始化文件打交道，它操作的只是一个拷贝，然后所有的改动如果没有重定向到一个文件，将输出到屏幕。sed是一种重要的文本过滤工具，使用一行命令或使用管道与grep与awk相结合。非交互性文本流编辑。调用sed有三种方式：<br>-使用sed命令行格式<br>   sed [选项] sed命令 输入文件<br>-使用sed脚本文件，格式为：<br>   sed [选贤] -f sed脚本文件 输入文件<br>-sed脚本文件[选项] 输入文件<br>-不管是使用shell命令行方式或脚本文件方式，如果没有指定输入文件，sed从标准输入中接受输入，一般是键盘或重定向结果。<br>sed命令选项：<br>-n不打印<br>-c下一命令是编辑命令<br>-f如果正在调用sed脚本文件</p>\n<p>sed在文件中查找文本的方式<br>-使用行号，可以是一个简单数字或是一个行号范围<br>-使用正则表达式<br>x            x为一行号<br>x,y            表示行号范围从x到y<br>/pattern/        查询包含模式的行<br>/pattern/pattern/    查询包含两个模式的行<br>pattern/,x        在给定的行号上查询包含模式的行<br>x,/pattern/        通过行号和模式查询匹配行<br>x,y!            查询不包含指定行号x和y的行<br>基本sed编辑命令：<br>p    打印匹配行<br>=    显示文件行号<br>a\\    在定位行号后附加新文本信息<br>i\\    在定位行号后插入新文本信息<br>d    删除定位行<br>c\\    用新文本替换定位文本<br>s    使用替换模式替换相应模式<br>r    从另一个文件中读文本<br>w    写文本到一个文件<br>q    第一个模式匹配完成后退出或立即退出<br>l    显示与八进制ASCII代码等价的控制字符<br>{}    在定位行执行的命令组<br>n    从另一个文件中读文本下一行，并附加在下一行<br>g    将模式2粘贴到/pattern n/<br>y    传送字符</p>\n<p>例：<br>sed ‘2p’ score.txt，单引号中的是命令，打印score.txt这个文件的第二行，这里全部打印，因为没有加-n，这样匹配到的和没匹配到的都打印。<br>sed -n ‘2p’ score.txt，-n表示不打印没匹配到的，只打印第二行。<br>sed -n ‘1,4p’ score.txt，打印1~4行。<br>sed -n ‘/los/p’ myfile.txt，打印包含los字符的所有行。<br>sed -n ‘4,/los/p’ myfile.txt，从第四行开始匹配到第一个los结束，如果los在第六行，那么从第四行到第六行都打印，如果下面还有los也不打印了。<br>sed -n ‘/^$/=’ myfile.txt，显示空行的行号。<br>sed -n -e ‘/^$/p’ -e ‘/^$/=’ myfile，打印空白行打印行号。<br>sed -n ‘/chinaitlab/a\\shenzhen’ myfile.txt。<br>sed -n ‘/chinaitlab/i\\shenzhen’ myfile.txt。<br>sed -n ‘/chinaitlab/c\\chinaitlab shenzhen’ myfile.txt。<br>sed ‘1,2d’ myfile.txt，把第一第二行删除。<br>sed ‘s/chinaitlab/chinaitlab shenzhen/g’ myfile.txt，当有多个chinaitlab时，加g表示全部替换。<br>sed -n ‘s/chinaitlab/&amp; hello/p’ myfile.txt， 在匹配到的所有的chinaitlab的后面加 hello。<br>sed -n ‘s/chinaitlab/hello &amp;/p’ myfile.txt，在匹配到的所有的chinaitlab的前面加 hello。<br>sed ‘lr ctrl.txt’ myfile.txt。<br>sed ‘china/q’ myfile.txt。<br>sed -n ‘/china/l’ myfile.txt。</p>\n<p>合并与分割<br>sort[options] files<br>-许多不同的域按不同的列顺序分类<br>-c测试文件是否已经分类<br>-m合并两个分类文件<br>-u删除所有复制行<br>-o存储sort结果的输出文件名<br>-t域分隔符：用非空格或tab键分割域<br>+n n为域号，使用此域号开始分类<br>n指定分类是域上的数字分类项<br>-r比较求逆</p>\n<p>例：<br>sort -c myfile，检查这个文件是否已经排序。<br>sort -u myfile，</p>\n<h2 id=\"第六讲shell函数\"><a href=\"#第六讲shell函数\" class=\"headerlink\" title=\"第六讲shell函数\"></a>第六讲shell函数</h2><p>定义函数格式：<br>函数名()<br>{<br>命令1<br>…<br>}<br>function 函数名()<br>{<br>…<br>}<br>函数可以放在同一个文件中作为一段代码，也可以放在只包含函数的单独文件中。</p>\n<p>#!/bin/bash</p>\n<p>#hellofun<br>function hello()<br>{<br>echo “hello,today is <code>date</code>“<br>return 0<br>}<br>echo “now going to the function hello”<br>hello<br>echo “back from the function”</p>\n<p>参数传递：向函数传递参数就像在脚本中使用位置变量$1,$2…$9<br>例：</p>\n<p>#!/bin/bash</p>\n<p>#func<br>function hello()<br>{<br>echo “Hello,$1 today is <code>date</code>“<br>}<br>echo “now going to the function hello”<br>hello chinaitlab<br>echo “back from the function”</p>\n<p>函数文件</p>\n<p>#!/bin/bash</p>\n<p>#func</p>\n<p>#source function<br>. hellofun<br>echo “now going to the function hello”<br>hello<br>echo “back from the function”</p>\n<p>#!/bin/bash</p>\n<p>#hellofun<br>function hello()<br>{<br>echo “Hello, today is <code>date</code>“<br>return 0<br>}</p>\n<p>检查载入函数和删除函数<br>察看载入函数set<br>删除函数unset<br>例：</p>\n<p>#!/bin/bash</p>\n<p>#func</p>\n<p>#source function<br>. hellofun<br>set #察看加载的函数和变量信息<br>echo “now going to the function hello”<br>unset hello#删除这个函数<br>hello<br>echo “back from the function”</p>\n<p>函数返回值：</p>\n<p>#!/bin/bash</p>\n<p>#hellofun<br>function hello()<br>{<br>echo “Hello, today is <code>date</code>“<br>return 0<br>}</p>\n<p>#!/bin/bash</p>\n<p>#func<br>echo “now going to the function hello”<br>hello<br>echo $?<br>echo “back from the function”</p>\n<h2 id=\"第七讲脚本参数传递\"><a href=\"#第七讲脚本参数传递\" class=\"headerlink\" title=\"第七讲脚本参数传递\"></a>第七讲脚本参数传递</h2><p>shift命令,每次讲参数位置向左偏移n位。</p>\n<p>#!/bin/bash</p>\n<p>#opt2<br>usage()<br>{<br>echo “usage:<code>basename $0</code> filenames”<br>}<br>totalline=0<br>if[ $# -lt 2 ];then<br>    usage<br>    exit#退出系统，下面的代码不执行<br>fi<br>while [ $# -ne 0]#参数个数不等于0<br>do<br>line=<code>cat $1|wc -l</code><br>echo “$1:${line}”<br>totalline=$[$totalline+$line]<br>shift#调用shift时$#(参数个数)也跟着减1<br>done<br>echo “———–”<br>echo “total:${totalline}”</p>\n<p>getopts获得多个命令行参数</p>\n<p>#!/bin/bash<br>ALL=false<br>HELP=false<br>FILE=false<br>VERBOSE=false<br>while getopts ahfvc OPTION<br>do<br>    case $OPTION in<br>    a)<br>        ALL=true<br>        echo “ALL IS $ALL”<br>        ;;<br>    h)<br>        HELP=true<br>        echo “HELP is $HELP”<br>        ;;<br>    f)<br>        FILE=true<br>        echo “FILE is $FILE”<br>        ;;<br>    v)<br>        VERBOSE=true<br>        echo “VERBOSE is $VERBOSE”<br>        ;;<br>    c)<br>        echo “c value is $c”<br>        ;;<br>    \\?)<br>        echo “<code>basename $0</code> -[a h f v] -[c value] file “<br>        ;;<br>    esac<br>done</p>\n<hr>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><h4 id=\"linux使用备忘\"><a href=\"#linux使用备忘\" class=\"headerlink\" title=\"linux使用备忘\"></a>linux使用备忘</h4><p>查看linux文件目录的大小和文件夹包含的文件数：</p>\n<p>du -sh xmldb/ #查看xmldb文件大小<br>du -sm <em> | sort -n  #统计当前目录大小 并安大小 排序<br>du -sk </em> | sort -n </p>\n<h4 id=\"压缩文件：\"><a href=\"#压缩文件：\" class=\"headerlink\" title=\"压缩文件：\"></a>压缩文件：</h4><p>tar -zcvf  a.tgz aa   #压缩aa文件为a.tgz<br>tar -zxvf a.tgz #解压</p>\n<h4 id=\"查找文件：\"><a href=\"#查找文件：\" class=\"headerlink\" title=\"查找文件：\"></a>查找文件：</h4><p>find / -name filename #在所有目录下查找filename<br>find /opt -name file* #在/opt下查找以find开头的文件<br>find / -amin -10 # 查找在系统中最后10分钟访问的文件<br>find / -atime -2 # 查找在系统中最后48小时访问的文件<br>find / -empty # 查找在系统中为空的文件或者文件夹<br>find / -group cat # 查找在系统中属于 groupcat的文件<br>find / -mmin -5 # 查找在系统中最后5分钟里修改过的文件<br>find / -mtime -1 #查找在系统中最后24小时里修改过的文件<br>find / -nouser #查找在系统中属于作废用户的文件<br>find / -user fred #查找在系统中属于FRED这个用户的文件</p>\n<hr>\n<p>小红帽企业版的telnet为krb5-telnet，依附于xinetd服务，将/etc/xinetd.d/krb5-telnet<br>的disable设置为no，重启xinetd即可启用telnet服务，默认是不允许root用户登录。允许普通的telnet登陆，但也可使用kerberos5验证 </p>\n<p>个人版RedHat Linux的telnet也是同样的道理，也是依附于xinetd服务，配置文件是/etc/xinetd.d/telnet。提供telnet服务，使用未加密的用户/密码组进行验证</p>\n<p>用passwd修改用户密码，常常提示“BAD PASSWORD: it is based on a dictionary word”，实际上<br>linux要求的密码的验证机制是在/etc/login.defs中规定最小密码字符数。还要受到/etc/pam.d/passwd的限定，但是在root用户下怎么设置都可以，可以不受验证机制的约束，即便出来“BAD PASSWORD: it is based on a dictionary word”也可以修改成功。</p>\n<p>但是普通用户修改自己的密码，如果不符合密码验证机制的话就修改不成功，会有各种报错，“BAD PASSWORD: it’s WAY too short”，这是报密码太短，不符合/etc/login.defs的设置，“BAD PASSWORD: it is based on your username”，这是密码与帐号不能同名，这是不符合/etc/pam.d/passwd的设置。“BAD PASSWORD: it is based on a dictionary word”这是因为出现了字典里的字符串，如果你英文与数字组合使用，就不会报错。</p>\n<hr>\n<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><h4 id=\"1-ln-命令详解\"><a href=\"#1-ln-命令详解\" class=\"headerlink\" title=\"1.ln 命令详解\"></a>1.ln 命令详解</h4><p><code>ln -s  源文件 目标文件</code>     -s 是 symbolic的意思。<br>例：<code>ln  -s  /lib/lsb   /usr/lj</code><br>即：在usr目录下建立指向/lib/lsb目录的lj文件。</p>\n<p><code>ln -s /opt/oracle /opt/app/oracle</code><br>建立链接<code>/opt/oracle</code> 链接目录 <code>/opt/app/oracle</code><br>比如在/data目录下建立一个a目录的连接b<br><code>ln -s /data/a /data/b</code><br>例如：<br><code>ln -s db_1 /opt/oracle/product/10.2.0/db_1</code><br>这条命令式在 /opt/oracle/product/10.2.0/db_1 下建立一个 db_1 的链接。<br>现在 /opt/oracle/product/10.2.0/db_1 下应该会还有个db_1</p>\n<p>ln 是 Linux 中一个非常重要命令。它的功能是为某一个文件在另外一个位置建立一个同步的链接，这个命令最常用的参数是-s,具体用法是： </p>\n<p>ln -s  源文件 目标文件    -s 是 symbolic的意思。<br>例： <code>ln  -s  /lib/lsb   /usr/lj</code><br>即：在 usr 目录下建立指向 /lib/lsb 目录的lj文件。</p>\n<p>备份命令<br><code>tar -cvf oraclehome.tar /opt/oracle/product/10.2.0/db_1</code><br>备份一下<br>解压命令<br><code>tar -xvfz /opt/oracle/product/allbackup.tar.gz /opt/oracle/product/10.2.0</code></p>\n<p>当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：<code>ln -s /bin/less /usr/local/bin/less-s 是代号（symbolic）的意思。这里有两点要注意：第一，ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化；第二，ln的链接又软链接和硬链接两种，软链接就是ln -s ** **,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln ** **,没有参数-s, 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。软链接是可以跨分区的，但是硬链接只能在同一分区内。如果你用ls察看一个目录时，发现有的文件后面有一个@的符号，那就是一个用ln命令生成的文件，用ls -l命令去察看，就可以看到显示的link的路径了当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：</code>ln -s /bin/less /usr/local/bin/less `<br>注意： </p>\n<p>第一，ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化； </p>\n<p>第二，ln的链接又软链接和硬链接两种，软链接就是ln -s <strong> </strong>,它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接ln <strong> </strong>,没有参数-s, 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。软链接是可以跨分区的，但是硬链接只能在同一分区内。<br>第三：目录不能建立硬链接，但可以建立软链接。 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Linux操作系统下共享文件夹设置方法介绍 </span><br><span class=\"line\"></span><br><span class=\"line\">首先当然是要安装samba了，呵呵： </span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install samba </span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install smbfs </span><br><span class=\"line\"></span><br><span class=\"line\">下面我们来共享群组可读写文件夹，假设你要共享的文件夹为： /home/ray/share </span><br><span class=\"line\"></span><br><span class=\"line\">首先创建这个文件夹 </span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /home/ray/share </span><br><span class=\"line\"></span><br><span class=\"line\">chmod 777 /home/ray/share </span><br><span class=\"line\"></span><br><span class=\"line\">备份并编辑smb.conf允许网络用户访问 </span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp /etc/samba/smb.conf /etc/samba/smb.conf_backup </span><br><span class=\"line\"></span><br><span class=\"line\">sudo gedit /etc/samba/smb.conf </span><br><span class=\"line\"></span><br><span class=\"line\">搜寻这一行文字 </span><br><span class=\"line\"></span><br><span class=\"line\">; security = user </span><br><span class=\"line\"></span><br><span class=\"line\">用下面这几行取代 </span><br><span class=\"line\"></span><br><span class=\"line\">security = user </span><br><span class=\"line\"></span><br><span class=\"line\">username map = /etc/samba/smbusers </span><br><span class=\"line\"></span><br><span class=\"line\">将下列几行新增到文件的最后面，假设允许访问的用户为：newsfan。而文件夹的共享名为 Share </span><br><span class=\"line\"></span><br><span class=\"line\">[Share] </span><br><span class=\"line\"></span><br><span class=\"line\">comment = Shared Folder with username and password </span><br><span class=\"line\"></span><br><span class=\"line\">path = /home/ray/share </span><br><span class=\"line\"></span><br><span class=\"line\">public = yes </span><br><span class=\"line\"></span><br><span class=\"line\">writable = yes </span><br><span class=\"line\"></span><br><span class=\"line\">valid users = newsfan </span><br><span class=\"line\"></span><br><span class=\"line\">create mask = 0700 </span><br><span class=\"line\"></span><br><span class=\"line\">directory mask = 0700 </span><br><span class=\"line\"></span><br><span class=\"line\">force user = nobody </span><br><span class=\"line\"></span><br><span class=\"line\">force group = nogroup </span><br><span class=\"line\"></span><br><span class=\"line\">available = yes </span><br><span class=\"line\"></span><br><span class=\"line\">browseable = yes </span><br><span class=\"line\"></span><br><span class=\"line\">然后顺便把这里改一下，找到［global］把 workgroup = MSHOME 改成 </span><br><span class=\"line\"></span><br><span class=\"line\">workgroup = WORKGROUP </span><br><span class=\"line\"></span><br><span class=\"line\">display charset = UTF-8 </span><br><span class=\"line\"></span><br><span class=\"line\">unix charset = UTF-8 </span><br><span class=\"line\"></span><br><span class=\"line\">dos charset = cp936 </span><br><span class=\"line\"></span><br><span class=\"line\">后面的三行是为了防止出现中文目录乱码的情况。其中根据你的<span class=\"built_in\">local</span>，UTF-8 有可能需要改成 cp936。自己看着办吧。 </span><br><span class=\"line\"></span><br><span class=\"line\">现在要添加newsfan这个网络访问帐户。如果系统中当前没有这个帐户，那么 </span><br><span class=\"line\"></span><br><span class=\"line\">sudo useradd newsfan </span><br><span class=\"line\"></span><br><span class=\"line\">要注意，上面只是增加了newsfan这个用户，却没有给用户赋予本机登录密码。所以这个用户将只能从远程访问，不能从本机登录。而且samba的登录密码可以和本机登录密码不一样。 </span><br><span class=\"line\"></span><br><span class=\"line\">现在要新增网络使用者的帐号： </span><br><span class=\"line\"></span><br><span class=\"line\">sudo smbpasswd -a newsfan </span><br><span class=\"line\"></span><br><span class=\"line\">sudo gedit /etc/samba/smbusers </span><br><span class=\"line\"></span><br><span class=\"line\">在新建立的文件内加入下面这一行并保存 </span><br><span class=\"line\"></span><br><span class=\"line\">newsfan = <span class=\"string\">\"network username\"</span> </span><br><span class=\"line\"></span><br><span class=\"line\">如果将来需要更改newsfan的网络访问密码，也用这个命令更改 </span><br><span class=\"line\"></span><br><span class=\"line\">sudo smbpasswd -a newsfan </span><br><span class=\"line\"></span><br><span class=\"line\">删除网络使用者的帐号的命令把上面的 -a 改成 -x </span><br><span class=\"line\"></span><br><span class=\"line\">sudo testparm </span><br><span class=\"line\"></span><br><span class=\"line\">sudo /etc/init.d/samba restart </span><br><span class=\"line\"></span><br><span class=\"line\">如果还是不行查看Iptables（防火墙是否开启），如果开启可以先将服务停止。</span><br><span class=\"line\"></span><br><span class=\"line\">最后退出重新登录或者重新启动一下机器。 </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">利用Samba配置文件共享服务</span><br><span class=\"line\"></span><br><span class=\"line\">配置文件 /etc/samba/</span><br><span class=\"line\"></span><br><span class=\"line\">//设置samba密码文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cat /etc/passwd|mksmbpasswd.sh &gt; /etc/samba/smbpasswd</span></span><br><span class=\"line\"></span><br><span class=\"line\">//为安全起见，设置文件和目录的权限</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chown root.root /etc/samba/smbpasswd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chmod 500 /etc/samba</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chmod 600 /etc/samba/smbpasswd</span></span><br><span class=\"line\"></span><br><span class=\"line\">//为用户设置口令</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#smbpasswd root</span></span><br><span class=\"line\"></span><br><span class=\"line\">//检查配置文件的正确性</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># testparm</span></span><br><span class=\"line\"></span><br><span class=\"line\">//检查服务器所共享的资源</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># smbclient –L localhost</span></span><br><span class=\"line\"></span><br><span class=\"line\">//列出资源使用情况</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># smbstatus [-b]</span></span><br><span class=\"line\"></span><br><span class=\"line\">//配置文件</span><br><span class=\"line\"></span><br><span class=\"line\">节：</span><br><span class=\"line\"></span><br><span class=\"line\">l         [Global] 定义全局参数和缺省值</span><br><span class=\"line\"></span><br><span class=\"line\">l         [Homes] 定义用户的Home目录共享</span><br><span class=\"line\"></span><br><span class=\"line\">l         [Printers] 定义打印机共享</span><br><span class=\"line\"></span><br><span class=\"line\">l         [Userdefined_ShareName] 用户自定义共享（可有多个）</span><br><span class=\"line\"></span><br><span class=\"line\">变量：</span><br><span class=\"line\"></span><br><span class=\"line\">l         %S 当前服务名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %P 当前服务的根路径</span><br><span class=\"line\"></span><br><span class=\"line\">l         %u 当前服务的用户名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %g 给定%u的所在工作组名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %H 给定%u的宿主目录</span><br><span class=\"line\"></span><br><span class=\"line\">l         %v Samba版本号</span><br><span class=\"line\"></span><br><span class=\"line\">l         %h 运行服务的主机名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %m 客户机的NETBIOS名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %L 服务器的NetBIOS名</span><br><span class=\"line\"></span><br><span class=\"line\">l         %L 当前的日期和时间</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">//使用符号链接组织本地共享资源</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vi /etc/samba/smb.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Resource]</span><br><span class=\"line\"></span><br><span class=\"line\">    comment = Local Resource</span><br><span class=\"line\"></span><br><span class=\"line\">    path = /var/samba/resource</span><br><span class=\"line\"></span><br><span class=\"line\">    public = yes</span><br><span class=\"line\"></span><br><span class=\"line\">writeable = yes</span><br><span class=\"line\"></span><br><span class=\"line\">// -p  parent(no error <span class=\"keyword\">if</span> existing, make parent directories as needed)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mkdir –p /var/samba/resource</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#cd /var/samba/resource</span></span><br><span class=\"line\"></span><br><span class=\"line\">//-s, --symbolic</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ln –s /usr/share/doc doc</span></span><br><span class=\"line\"></span><br><span class=\"line\">//为所有用户配置只读共享和读写共享</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vi /etc/samba/smb.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">[tmp]</span><br><span class=\"line\"></span><br><span class=\"line\">    comment = Temporary file space</span><br><span class=\"line\"></span><br><span class=\"line\">    path = /tem</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">read</span> only = no</span><br><span class=\"line\"></span><br><span class=\"line\">    public = yes</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">[cdrom]</span><br><span class=\"line\"></span><br><span class=\"line\">    comment = CDROM</span><br><span class=\"line\"></span><br><span class=\"line\">    path = /mnt/cdrom</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">read</span> only = yes</span><br><span class=\"line\"></span><br><span class=\"line\">public = yes</span><br><span class=\"line\"></span><br><span class=\"line\">//为指定用户或组配置共享</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># useradd samba</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># passwd samba</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mkdir /var/samba/samba</span></span><br><span class=\"line\"></span><br><span class=\"line\">//更改目录属主</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chown samba.samba /var/samba/samba</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vi smb.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">[sambadir]</span><br><span class=\"line\"></span><br><span class=\"line\">    comment = Samba<span class=\"string\">'s service</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    path = /var/samba/samba</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    valid users = samba</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    public = no</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">//保存修改</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">//Linux环境下访问Samba共享</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># cat /etc/samba/lmhosts</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># smbclient –L IP –U 用户名</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># smbmount //win/tools /mnt/smb/win</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">linux smb.conf详解</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">17行workgroup</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">语法 workgtoup = &lt;工作组群&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 workgroup = MYGROUP</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 Samba Server 的工作组</span></span><br><span class=\"line\"><span class=\"string\">例 workgroup = workgroup 和WIN2000S设为一个组，可在网上邻居可中看到共享</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">21行server string</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">语法 server string = &lt;说明&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 sarver string = Samba Server</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 Samba Server 的注释</span></span><br><span class=\"line\"><span class=\"string\">其他 支持变量 t%-访问时间 I%-客户端IP m%-客户端主机名 M%-客户端域名 S%-客户端用户名</span></span><br><span class=\"line\"><span class=\"string\">例 server string = this is a Samba Server 设定出现在Windows网上邻居的 Samba Server 注释为 this is a Samba Server</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">28行hosts allow</span></span><br><span class=\"line\"><span class=\"string\">语法 hosts aoolw = &lt;IP地址&gt;; …</span></span><br><span class=\"line\"><span class=\"string\">预设 ; host allow = 192.168.1. 192.168.2. 127.</span></span><br><span class=\"line\"><span class=\"string\">说明 限制允许连接到 Samba Server 的机器，多个参数以空格隔开。表示方法可以为</span></span><br><span class=\"line\"><span class=\"string\">完整的IP地址，如 192.168.0.1</span></span><br><span class=\"line\"><span class=\"string\">网段，如 192.168.0.</span></span><br><span class=\"line\"><span class=\"string\">例 hosts allow = 192.168.1. 192.168.0.1 表示允许192.168.1 网段的机器 网址为192.168.0.1 的机器 连接到自己的samba server</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">32行printcap name</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">语法 printcap name = &lt;打印机配置文件&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 printcap name = /etc/printcap</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba srever 打印机的配置文件</span></span><br><span class=\"line\"><span class=\"string\">例 printcap name = /etc/printcap 设定 samba srever 参考 /etc/printcap 档的打印机设定</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">33行load printers</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">语法 load printers = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 load printers = yes</span></span><br><span class=\"line\"><span class=\"string\">说明 是否在开启 samba server 时即共享打印机</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">38行printing</span></span><br><span class=\"line\"><span class=\"string\">语法 printing = &lt;打印机类型&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 printing = lprng</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 打印机所使用的类型,37行为目前所支持的类型</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">42行guest account</span></span><br><span class=\"line\"><span class=\"string\">语法 guert account = &lt;帐户名称&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 guert account = pcguest</span></span><br><span class=\"line\"><span class=\"string\">说明 设定访问 samba server 的来宾帐户(即访问时不用输入用户名和密码的帐户),若设为pcguest的话则为默认为”nobody”用户</span></span><br><span class=\"line\"><span class=\"string\">例 guert account = andy 设定设定访问 samba server 的来宾帐户以andy用户登陆,则此登陆帐户享有andy用户的所有权限</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">46行log file</span></span><br><span class=\"line\"><span class=\"string\">语法 log file = &lt;日志文件&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 log file = /var/log/samba/%m.log</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 日志文件的储存位置和文件名(%m代表客户端主机名)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">49行max log size</span></span><br><span class=\"line\"><span class=\"string\">语法 max log size = &lt;??KB&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 max log size = 0</span></span><br><span class=\"line\"><span class=\"string\">说明 设定日子文件的最大容量,单位KB 这里的预设值0代表不做限制</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">53行security</span></span><br><span class=\"line\"><span class=\"string\">语法 security = &lt;等级&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 security = user</span></span><br><span class=\"line\"><span class=\"string\">说明 设定访问 samba server 的安全级别 共有四种</span></span><br><span class=\"line\"><span class=\"string\">share—不需要提供用户名和密码</span></span><br><span class=\"line\"><span class=\"string\">user—-需要提供用户名和密码,而且身份验证由 samba server 负责</span></span><br><span class=\"line\"><span class=\"string\">server–需要提供用户名和密码,可指定其他机器(winNT/2000/XP)或另一台 samba server作身份验证</span></span><br><span class=\"line\"><span class=\"string\">domain–需要提供用户名和密码,指定winNT/2000/XP域服务器作身份验证</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">60行password server</span></span><br><span class=\"line\"><span class=\"string\">语法 password server = &lt;IP地址/主机名&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 password server = &lt;NT-Server-Name&gt;;</span></span><br><span class=\"line\"><span class=\"string\">说明 指定某台服务器(包括windows 和 linux)的密码,作为用户登入时验证的密码</span></span><br><span class=\"line\"><span class=\"string\">其他 此项需配合 security = server时,才可设定本参数</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">64行password level</span></span><br><span class=\"line\"><span class=\"string\">65行username level</span></span><br><span class=\"line\"><span class=\"string\">语法 password level = &lt;位数&gt;;</span></span><br><span class=\"line\"><span class=\"string\">username level = &lt;位数&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 password level = 8</span></span><br><span class=\"line\"><span class=\"string\">username level = 8</span></span><br><span class=\"line\"><span class=\"string\">说明 设定用户名和密码的位数,预设为8位字符</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">70行encrypt passwords</span></span><br><span class=\"line\"><span class=\"string\">语法 encrypt passwords = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 encrypt passwords = yse</span></span><br><span class=\"line\"><span class=\"string\">说明 设定是否对samba的密码加密</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">71行smb passwd file</span></span><br><span class=\"line\"><span class=\"string\">语法 smb passwd file = &lt;密码文件&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 smb passwd file = /etc/samba/smbpasswd</span></span><br><span class=\"line\"><span class=\"string\">说明 设定samba的密码文件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">130行local master</span></span><br><span class=\"line\"><span class=\"string\">语法 local master = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 local master = no</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 是否要担当LMB角色(LMB负责收集本地网络的Browse List资源),通常无特殊原因设为no</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">134行os level = 33</span></span><br><span class=\"line\"><span class=\"string\">语法 os level = &lt;数字&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 os level = 33</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server的os level. os level从 0 到 255 . winNT的os level为33, win95/98的os level 是 1 .</span></span><br><span class=\"line\"><span class=\"string\">若要拿samba server 当LMB或DMB则它的os level至少要大于NT的33以上</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">139行domain master</span></span><br><span class=\"line\"><span class=\"string\">语法 domain master = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 domain master = yes</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 是否要担当DMB角色(DMB会负责收集其他子网的Browse List资源),通常无特殊原因设为no</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">143行preferred master</span></span><br><span class=\"line\"><span class=\"string\">语法 preferred master = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 preferred master = yes</span></span><br><span class=\"line\"><span class=\"string\">说明 设定 samba server 是否要担当PDC角色(PDC会负责追踪网络帐户进行的一切变更),通常无特殊原因设为no.</span></span><br><span class=\"line\"><span class=\"string\">(同一网段内不可有两个PDC,他们会每5分钟抢主控权一次)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">163行wins support</span></span><br><span class=\"line\"><span class=\"string\">语法 wins support = &lt;yes/no&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 wins support = yes</span></span><br><span class=\"line\"><span class=\"string\">说明 设定samba server 是否想网络提供WINS服务,通常无特殊原因设为no.</span></span><br><span class=\"line\"><span class=\"string\">除非所处网络上没有主机提供WINS服务且需要此台samba server提供WINS服务是才设yes</span></span><br><span class=\"line\"><span class=\"string\">其他 wins support 和 wins server 只能选择一个</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">167行wins server</span></span><br><span class=\"line\"><span class=\"string\">语法 wins server = &lt;IP地址&gt;;</span></span><br><span class=\"line\"><span class=\"string\">预设 wins server = w.x.y.z</span></span><br><span class=\"line\"><span class=\"string\">说明 设定samba server 是否要使用别台主机提供的WINS服务.通常无特殊原因设为no.除非所处网络上有一台主机提供WINS服务才要设yes</span></span><br><span class=\"line\"><span class=\"string\">其他 wins support 和 wins server</span></span><br><span class=\"line\"><span class=\"string\">例 wins server = 192.168.0.1 表示samba server要使用192.168.0.1提供的WINS服务</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">#============================== Share Definitions =============================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[homes]</span></span><br><span class=\"line\"><span class=\"string\">comment = Home Directories</span></span><br><span class=\"line\"><span class=\"string\">browseable = no</span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\">valid users = %S</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">使用者本身的”家”目录，当使用者以samba使用者身份登入samba server 后，</span></span><br><span class=\"line\"><span class=\"string\">samba server 底下会看到自己的家目录，目录名称是使用者自己的帐号</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[分享的资源名称]</span></span><br><span class=\"line\"><span class=\"string\">&lt;指令1&gt;; = (参数)</span></span><br><span class=\"line\"><span class=\"string\">&lt;指令2&gt;; = (参数)</span></span><br><span class=\"line\"><span class=\"string\">……………………..</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">要提供分享资源时，须先把欲分享的资源以 [ ] 符号括住，底下通常会带指令和参数来表示此资源的设定和存取权限等,详情如下</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">comment———注释说明</span></span><br><span class=\"line\"><span class=\"string\">path————分享资源的完整路径名称，除了路径要正确外，目录的权限也要设对</span></span><br><span class=\"line\"><span class=\"string\">browseable——是yes/否no在浏览资源中显示共享目录，若为否则必须指定共享路径才能存取</span></span><br><span class=\"line\"><span class=\"string\">printable——-是yes/否no允许打印</span></span><br><span class=\"line\"><span class=\"string\">hide dot ftles–是yes/否no隐藏隐藏文件</span></span><br><span class=\"line\"><span class=\"string\">public———-是yes/否no公开共享，若为否则进行身份验证(只有当security = share 时此项才起作用)</span></span><br><span class=\"line\"><span class=\"string\">guest ok——–是yes/否no公开共享，若为否则进行身份验证(只有当security = share 时此项才起作用)</span></span><br><span class=\"line\"><span class=\"string\">read only——-是yes/否no以只读方式共享当与writable发生冲突时也writable为准</span></span><br><span class=\"line\"><span class=\"string\">writable——–是yes/否no不以只读方式共享当与read only发生冲突时，无视read only</span></span><br><span class=\"line\"><span class=\"string\">vaild users—–设定只有此名单内的用户才能访问共享资源(拒绝优先)(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">invalid users—设定只有此名单内的用户不能访问共享资源(拒绝优先)(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">read list——-设定此名单内的成员为只读(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">write list——若设定为只读时，则只有此设定的名单内的成员才可作写入动作(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">create mask—–建立文件时所给的权限</span></span><br><span class=\"line\"><span class=\"string\">directory mask–建立目录时所给的权限</span></span><br><span class=\"line\"><span class=\"string\">force group—–指定存取资源时须以此设定的群组使用者进入才能存取(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">force user——指定存取资源时须以此设定的使用者进入才能存取(用户名/@组名)</span></span><br><span class=\"line\"><span class=\"string\">allow hosts—–设定只有此网段/IP的用户才能访问共享资源</span></span><br><span class=\"line\"><span class=\"string\">allwo hosts = 网段 except IP</span></span><br><span class=\"line\"><span class=\"string\">deny hosts——设定只有此网段/IP的用户不能访问共享资源</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">allow hosts=本网段指定IP指定IP</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">deny hosts=指定IP本网段指定IP</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Samba的主配置文件。但所包含的内容并不是很全，详见man smb.conf</span></span><br><span class=\"line\"><span class=\"string\">所有以;或#开头的行为注释行，将被忽略掉。在这个例子中我们使用；表示可以由你来修改或设置的部分，而#则表示真正意义上的注释。</span></span><br><span class=\"line\"><span class=\"string\">注意：不论你何时何地修改了这个文件，你都应运行一下命令“testparm“来测试你是否犯了一些基本语法的错误。</span></span><br><span class=\"line\"><span class=\"string\">1、全局设置</span></span><br><span class=\"line\"><span class=\"string\">[global]</span></span><br><span class=\"line\"><span class=\"string\"># workgroup = NT-Domain-Name or Workgroup-Name</span></span><br><span class=\"line\"><span class=\"string\">workgroup = MYGROUP</span></span><br><span class=\"line\"><span class=\"string\">下面的这句话是后加的，加入的意义为：使WIN用户可以看到主机的名字，但我将此行注释掉后，没看到什么影响。</span></span><br><span class=\"line\"><span class=\"string\">netbios name = express</span></span><br><span class=\"line\"><span class=\"string\">下面设置的是服务器的字符串，相当于NT中的计算机说明部分</span></span><br><span class=\"line\"><span class=\"string\">server string = Samba Server</span></span><br><span class=\"line\"><span class=\"string\">下面的选项对于安全性很重要。他允许你对是否可以进行本地网络连接的机器进行了限制。</span></span><br><span class=\"line\"><span class=\"string\">hosts allow = 192.168.1.50 192.168.1.43 192.168.1.44 192.168.1.45 192.168.1.46 192.168.1.47 192.168.1.48 192.168.1.49</span></span><br><span class=\"line\"><span class=\"string\">如果想要自动共享打印机而不是个别地进行单独设置，使用下面的选项：</span></span><br><span class=\"line\"><span class=\"string\">printcap name = /etc/printcap</span></span><br><span class=\"line\"><span class=\"string\">load printers = yes</span></span><br><span class=\"line\"><span class=\"string\">除非你是非标准的，否则下面的选项对于你说清楚打印系统的类型并不是很必要。当前支持的打印系统主要有以下几类：</span></span><br><span class=\"line\"><span class=\"string\"># bsd, sysv, plp, lprng, aix, hpux, qnx, cups</span></span><br><span class=\"line\"><span class=\"string\">printing = cups</span></span><br><span class=\"line\"><span class=\"string\">如果想要一个guest账号的话就不用注释下面的行。你必须把这个加入到/etc/passwd中，否则用户“nobody“会被使用。</span></span><br><span class=\"line\"><span class=\"string\">; guest account = pcguest</span></span><br><span class=\"line\"><span class=\"string\">下面的选项告诉samba对不同的机器连接使用不同的日志文件。小心如果你允许访问的机器太多的话，文件可能极多哟！！！：）</span></span><br><span class=\"line\"><span class=\"string\">log file = /var/log/samba/%m.log</span></span><br><span class=\"line\"><span class=\"string\">设置log文件的大小（KB）（# Put a capping on the size of the log files (in Kb).）</span></span><br><span class=\"line\"><span class=\"string\">max log size = 0</span></span><br><span class=\"line\"><span class=\"string\">安全格式。大多数用户使用用户级安全。详见security_level.txt。</span></span><br><span class=\"line\"><span class=\"string\">security = share</span></span><br><span class=\"line\"><span class=\"string\">使用密码服务选项，仅用于security = server模式</span></span><br><span class=\"line\"><span class=\"string\">参数列表可以包括：</span></span><br><span class=\"line\"><span class=\"string\"># password server = My_PDC_Name [My_BDC_Name] [My_Next_BDC_Name]</span></span><br><span class=\"line\"><span class=\"string\"># 或自动查找域控制器</span></span><br><span class=\"line\"><span class=\"string\"># password server = *</span></span><br><span class=\"line\"><span class=\"string\">; password server = </span></span><br><span class=\"line\"><span class=\"string\">对于所有的上面和下面的组成部分的_n_characters密码所允许的匹配级别</span></span><br><span class=\"line\"><span class=\"string\">; password level = 8</span></span><br><span class=\"line\"><span class=\"string\">; username level = 8</span></span><br><span class=\"line\"><span class=\"string\">你可能想使用密码编码。见在samba文档中的ENCRYPTION.txt, Win95.txt和WinNT.txt。</span></span><br><span class=\"line\"><span class=\"string\">除非你已经仔细的读过了那些文档，否则不要激活下面的选项：</span></span><br><span class=\"line\"><span class=\"string\">encrypt passwords = yes</span></span><br><span class=\"line\"><span class=\"string\">smb passwd file = /etc/samba/smbpasswd</span></span><br><span class=\"line\"><span class=\"string\">当samba被建成为支持SSL的模式时，下面需要从大量的假的错误中保持smbclient。（原文如下：</span></span><br><span class=\"line\"><span class=\"string\"># The following is needed to keep smbclient from spouting spurious errors</span></span><br><span class=\"line\"><span class=\"string\"># when Samba is built with support for SSL.</span></span><br><span class=\"line\"><span class=\"string\">; ssl CA certFile = /usr/share/ssl/certs/ca-bundle.crt</span></span><br><span class=\"line\"><span class=\"string\">下面的选项需要允许从windows对linux系统的密码进行修改。</span></span><br><span class=\"line\"><span class=\"string\"># 注意：上面带有’encrypt passwords’ 和’smb passwd file’选项使用这些。</span></span><br><span class=\"line\"><span class=\"string\"># 另： 如果仅是允许工作站改变加密的SMB密码那么你不需要这些。它们允许Unix密码与SMB密码保持同步。</span></span><br><span class=\"line\"><span class=\"string\">unix password sync = Yes</span></span><br><span class=\"line\"><span class=\"string\">passwd program = /usr/bin/passwd %u</span></span><br><span class=\"line\"><span class=\"string\">passwd chat = *New*password* %n\\n *Retype*new*password* %n\\n *passwd:*all*authentication*tokens*updated*successfully*</span></span><br><span class=\"line\"><span class=\"string\">你可以使用PAM的密码改变控制标记。如果激活的活，当一个SMB客户端请求代替了在密码程序列表时，PAM将用于密码改变。对于大多数的设置，不改变密码字符参数而激活这个也是可能的。</span></span><br><span class=\"line\"><span class=\"string\">pam password change = yes</span></span><br><span class=\"line\"><span class=\"string\">Unix用户可能映射不同的SMB用户名。</span></span><br><span class=\"line\"><span class=\"string\">username map = /etc/samba/smbusers</span></span><br><span class=\"line\"><span class=\"string\">在每一台机器的基础上，使用下面的行可以使你定制你的配置。%m以连接机器的netbios名代替。</span></span><br><span class=\"line\"><span class=\"string\">; include = /etc/samba/smb.conf.%m</span></span><br><span class=\"line\"><span class=\"string\">这个参数控制samba是否服从于PAM账号和对话管理指示。默认情况下是使用PAM仅清除文本证明且忽略任何的账号或对话管理。注意：当加密密码=yes时，samba总是忽略PAM的证明。</span></span><br><span class=\"line\"><span class=\"string\">obey pam restrictions = yes</span></span><br><span class=\"line\"><span class=\"string\">很多人都会发现这个选项优化了性能。详见speed.txt和帮助手册页。</span></span><br><span class=\"line\"><span class=\"string\">socket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192</span></span><br><span class=\"line\"><span class=\"string\">配置samba使用多重接口。</span></span><br><span class=\"line\"><span class=\"string\">如果你有多个网络接口的话，必须把他们在下面列出来。详见man。</span></span><br><span class=\"line\"><span class=\"string\">; interfaces = 192.168.12.2/24 192.168.13.2/24</span></span><br><span class=\"line\"><span class=\"string\">配置请求播出同步到远程浏览器，或从一个主机同步浏览器列表或从/到整个子网（如下）。</span></span><br><span class=\"line\"><span class=\"string\">; remote browse sync = 192.168.3.25 192.168.5.255</span></span><br><span class=\"line\"><span class=\"string\">使主机将自己广播到本地的子网。</span></span><br><span class=\"line\"><span class=\"string\">; remote announce = 192.168.1.255 192.168.2.44</span></span><br><span class=\"line\"><span class=\"string\">浏览器控件选项：</span></span><br><span class=\"line\"><span class=\"string\">如果你不想让你的samba在你的网络中变成一个主浏览器，那么设置local master为no，否则将采用正常的规则。</span></span><br><span class=\"line\"><span class=\"string\">; local master = no</span></span><br><span class=\"line\"><span class=\"string\">os level决定在主浏览器的中被提取的优先级。默认值是很合理的。</span></span><br><span class=\"line\"><span class=\"string\">; os level = 33</span></span><br><span class=\"line\"><span class=\"string\">域master指定samba是域主浏览器。这允许samba在子网之间比较浏览列表。如果你已经有了一个Win NT的主域控制器的话，就不要设置这个选项。</span></span><br><span class=\"line\"><span class=\"string\">; domain master = yes</span></span><br><span class=\"line\"><span class=\"string\">首选master使samba在启动时拒绝一个本地浏览器的选出，且给他一些小的较高的机会让其来选出。</span></span><br><span class=\"line\"><span class=\"string\">; preferred master = yes</span></span><br><span class=\"line\"><span class=\"string\">如果你要samba成为Win95工作站的域登录服务器的话则激活它。</span></span><br><span class=\"line\"><span class=\"string\">; domain logons = yes</span></span><br><span class=\"line\"><span class=\"string\">如果你激活了domain logons，那么你可以让每一台机器或每一个用户登录角本运行一个指定的登录批处理文件。原文如下：if you enable domain logons then you may want a per-machine or per user logon script run a specific logon batch file per workstation (machine)</span></span><br><span class=\"line\"><span class=\"string\">; logon script = %m.bat</span></span><br><span class=\"line\"><span class=\"string\">每一个用户名都运行一个指定的登录批处理文件</span></span><br><span class=\"line\"><span class=\"string\">; logon script = %U.bat</span></span><br><span class=\"line\"><span class=\"string\"># 存储动态的profile（仅针对95与NT）</span></span><br><span class=\"line\"><span class=\"string\"># %L 代表netbios name, %U 是一个用户名</span></span><br><span class=\"line\"><span class=\"string\"># 不能注释掉下面的[Profiles]共享。</span></span><br><span class=\"line\"><span class=\"string\">; logon path = \\%L\\Profiles\\%U</span></span><br><span class=\"line\"><span class=\"string\">支持WINS部分：告诉samba组件的NMBD去激活WINS服务。</span></span><br><span class=\"line\"><span class=\"string\">; wins support = yes</span></span><br><span class=\"line\"><span class=\"string\">WINS服务器-告诉samba组件的NMBD成为一个WINS客户端。</span></span><br><span class=\"line\"><span class=\"string\">注意：samba即可以是一个WINS服务器，也可以是一个客户端，或都不是。</span></span><br><span class=\"line\"><span class=\"string\">; wins server = w.x.y.z</span></span><br><span class=\"line\"><span class=\"string\">WINS 代理-原文如下，没法翻译（Tells Samba to answer name resolution queries on behalf of a non WINS capable client,），执行这件事必须要求在网络中至少有一个Wins服务器。默认情况下是NO。</span></span><br><span class=\"line\"><span class=\"string\">; wins proxy = yes</span></span><br><span class=\"line\"><span class=\"string\"># DNS Proxy – 告诉samba是否经过DNS的nslookup试着去解析NETBIOS名。1.9.17的内置默认值是yes，目前已经改为1.9.18的no。</span></span><br><span class=\"line\"><span class=\"string\">dns proxy = no</span></span><br><span class=\"line\"><span class=\"string\">实例保存可以很简洁-系统默认值是_no_</span></span><br><span class=\"line\"><span class=\"string\">注意：可以在每一个共享基础上设置</span></span><br><span class=\"line\"><span class=\"string\">; preserve case = no</span></span><br><span class=\"line\"><span class=\"string\">; short preserve case = no</span></span><br><span class=\"line\"><span class=\"string\">默认实例是对于所有的DOS文件都大写</span></span><br><span class=\"line\"><span class=\"string\">; default case = lower</span></span><br><span class=\"line\"><span class=\"string\">对于此选项要很小心-它可能带来一些想不到的事情。</span></span><br><span class=\"line\"><span class=\"string\">; case sensitive = no</span></span><br><span class=\"line\"><span class=\"string\">[homes]</span></span><br><span class=\"line\"><span class=\"string\">comment = Home Directories</span></span><br><span class=\"line\"><span class=\"string\">browseable = no</span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\">valid users = %S</span></span><br><span class=\"line\"><span class=\"string\">create mode = 0664</span></span><br><span class=\"line\"><span class=\"string\">directory mode = 0775</span></span><br><span class=\"line\"><span class=\"string\">如果不想要samba不承认已经映射为guest的用户，可用如下设置</span></span><br><span class=\"line\"><span class=\"string\">; map to guest = bad user</span></span><br><span class=\"line\"><span class=\"string\">如果想创建netlogon目录给域登录，不要注释下面的内容。</span></span><br><span class=\"line\"><span class=\"string\">; [netlogon]</span></span><br><span class=\"line\"><span class=\"string\">; comment = Network Logon Service</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/local/samba/lib/netlogon</span></span><br><span class=\"line\"><span class=\"string\">; guest ok = yes</span></span><br><span class=\"line\"><span class=\"string\">; writable = no</span></span><br><span class=\"line\"><span class=\"string\">; share modes = no</span></span><br><span class=\"line\"><span class=\"string\">想提供一个指定的不固定的共享profile那么就不要注释下面的内容，默认使用用户主目录。</span></span><br><span class=\"line\"><span class=\"string\">;[Profiles]</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/local/samba/profiles</span></span><br><span class=\"line\"><span class=\"string\">; browseable = no</span></span><br><span class=\"line\"><span class=\"string\">; guest ok = yes</span></span><br><span class=\"line\"><span class=\"string\">注意：如果你有一个BSD风格的打印系统，则没有必须单独的特别指定每一个打印机。</span></span><br><span class=\"line\"><span class=\"string\">[printers]</span></span><br><span class=\"line\"><span class=\"string\">comment = All Printers</span></span><br><span class=\"line\"><span class=\"string\">path = /var/spool/samba</span></span><br><span class=\"line\"><span class=\"string\">browseable = no</span></span><br><span class=\"line\"><span class=\"string\">设置public=yes表示允许’guest account’打印</span></span><br><span class=\"line\"><span class=\"string\">guest ok = no</span></span><br><span class=\"line\"><span class=\"string\">writable = no</span></span><br><span class=\"line\"><span class=\"string\">printable = yes</span></span><br><span class=\"line\"><span class=\"string\">下面的内容对人们共享文件是有用的。</span></span><br><span class=\"line\"><span class=\"string\">;[tmp]</span></span><br><span class=\"line\"><span class=\"string\">; comment = Temporary file space</span></span><br><span class=\"line\"><span class=\"string\">; path = /tmp</span></span><br><span class=\"line\"><span class=\"string\">; read only = no</span></span><br><span class=\"line\"><span class=\"string\">; public = yes</span></span><br><span class=\"line\"><span class=\"string\">公用的可访问的目录，除了在staff组中的成员外，对其它人为只读</span></span><br><span class=\"line\"><span class=\"string\">;[public]</span></span><br><span class=\"line\"><span class=\"string\">; comment = Public Stuff</span></span><br><span class=\"line\"><span class=\"string\">; path = /home/nw</span></span><br><span class=\"line\"><span class=\"string\">; public = yes</span></span><br><span class=\"line\"><span class=\"string\">; writable = yes</span></span><br><span class=\"line\"><span class=\"string\">; printable = no</span></span><br><span class=\"line\"><span class=\"string\">; write list = @staff</span></span><br><span class=\"line\"><span class=\"string\">私有打印机，仅仅fred本人可用。打印池中的数据将被放到fred的主目录中。注意：fred用户无论在什么地方都必须对打印池有写访问的权限。</span></span><br><span class=\"line\"><span class=\"string\">;[yingou]</span></span><br><span class=\"line\"><span class=\"string\">; comment = qlj’s Printer</span></span><br><span class=\"line\"><span class=\"string\">; valid users = yingouqlj</span></span><br><span class=\"line\"><span class=\"string\">; path = /home/yingouqlj</span></span><br><span class=\"line\"><span class=\"string\">; public = no</span></span><br><span class=\"line\"><span class=\"string\">; writable = no</span></span><br><span class=\"line\"><span class=\"string\">; printable = yes</span></span><br><span class=\"line\"><span class=\"string\">私有目录，仅能对fred开放。注意fred对这个目录需要写访问的权限。</span></span><br><span class=\"line\"><span class=\"string\">;[fredsdir]</span></span><br><span class=\"line\"><span class=\"string\">; comment = qlj’s Service</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/somewhere/private</span></span><br><span class=\"line\"><span class=\"string\">; valid users = yingouqlj</span></span><br><span class=\"line\"><span class=\"string\">; public = no</span></span><br><span class=\"line\"><span class=\"string\">; writable = yes</span></span><br><span class=\"line\"><span class=\"string\">; printable = no</span></span><br><span class=\"line\"><span class=\"string\">允许你制作配置文件去引入的连接到这里的每一台机器都有不同的目录的服务。</span></span><br><span class=\"line\"><span class=\"string\">使用%U选去配置用户名，%m代替连接到的机器名。</span></span><br><span class=\"line\"><span class=\"string\">;[yingouqlj]</span></span><br><span class=\"line\"><span class=\"string\">; comment = PC Directories</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/local/pc/%m</span></span><br><span class=\"line\"><span class=\"string\">; public = no</span></span><br><span class=\"line\"><span class=\"string\">; writable = yes</span></span><br><span class=\"line\"><span class=\"string\">公共可访问的目录，对所有的用户都可读/写。注意：在这个目录中的所有由用户创建的文件都会被标识成默认用户所有。所以有访问仅限的用户可以删除别的用户的文件。很明显这个目录必须是可以被默认用户写的。另一个用户当然可以指定，这样所有的文件都将被那个用户所替代。</span></span><br><span class=\"line\"><span class=\"string\">[public]</span></span><br><span class=\"line\"><span class=\"string\">path = /tmp/aaaa</span></span><br><span class=\"line\"><span class=\"string\">public = yes</span></span><br><span class=\"line\"><span class=\"string\">guest ok = yes</span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\">printable = no</span></span><br><span class=\"line\"><span class=\"string\">下面的两个例子是怎样共享一个目录给两个用户，在这个共享目录中他们可以放置文件且分别属于各自所有。在这个设置中，目录将可以被两个用户同时使用且在其上有粘滞位保护。很明显，可以扩展为多个用户的情况。</span></span><br><span class=\"line\"><span class=\"string\">;[myshare]</span></span><br><span class=\"line\"><span class=\"string\">; comment = Mary’s and Fred’s stuff</span></span><br><span class=\"line\"><span class=\"string\">; path = /usr/somewhere/shared</span></span><br><span class=\"line\"><span class=\"string\">; valid users = mary fred</span></span><br><span class=\"line\"><span class=\"string\">; public = no</span></span><br><span class=\"line\"><span class=\"string\">; writable = yes</span></span><br><span class=\"line\"><span class=\"string\">; printable = no</span></span><br><span class=\"line\"><span class=\"string\">; create mask = 0765</span></span><br><span class=\"line\"><span class=\"string\">以下是个人实际的设置</span></span><br><span class=\"line\"><span class=\"string\">[sharedir]</span></span><br><span class=\"line\"><span class=\"string\">path = /home/nw</span></span><br><span class=\"line\"><span class=\"string\">public = yes</span></span><br><span class=\"line\"><span class=\"string\">guest ok = yes</span></span><br><span class=\"line\"><span class=\"string\">writable = yes</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">在RHEL下如何使用VPN？怎么往一个Samba(SMB)共享里添加一个用户？  2007-09-10 21:28:13|  分类： 默认分类 |  标签： |字号大中小 订阅 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">允许用户浏览Samba共享的一种方法是在Samba服务器上拥有一个UNIX帐号。可以通过命令 adduser [用户名] 和 passwd [用户名]来建立UNIX帐号。 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">当用户有了一个本地帐号，他的Samba密码可以这样初始化： </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    smbpasswd -a [用户名]-a选项增加用户名到Samba的密码文件里面里。 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">在/etc/smb.conf配置文件里修改Samba共享，允许新增加的用户浏览该共享资源。 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[ashare]    comment = A Shared Directory    path = /usr/somewhere/shared    valid users = mary [新用户]    public = no    writable = yes用testparm显示升级后的共享资源。</span></span><br><span class=\"line\"><span class=\"string\">用service smb reload命令重载smb.conf配置文件。 </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">-- Create the user </span></span><br><span class=\"line\"><span class=\"string\">create user NC56</span></span><br><span class=\"line\"><span class=\"string\">  identified by \"nc56\"</span></span><br><span class=\"line\"><span class=\"string\">  default tablespace NNC_DATA01</span></span><br><span class=\"line\"><span class=\"string\">  temporary tablespace TEMP</span></span><br><span class=\"line\"><span class=\"string\">  profile DEFAULT;</span></span><br><span class=\"line\"><span class=\"string\">-- Grant/Revoke role privileges </span></span><br><span class=\"line\"><span class=\"string\">grant connect to NC56 with admin option;</span></span><br><span class=\"line\"><span class=\"string\">grant dba     to NC56 with admin option;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Linux-压缩命令汇总\"><a href=\"#Linux-压缩命令汇总\" class=\"headerlink\" title=\"Linux 压缩命令汇总\"></a>Linux 压缩命令汇总</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">09在Windows下最常见的压缩文件就只有两种，一是,zip，另一个是.rar。可是Linux就不同了，它有.gz、.tar.gz、tgz、bz2、.Z、.tar等众多的压缩文件名，此外windows下的.zip和.rar也可以在Linux下使用，不过在Linux使用.zip和.rar的人就太少了。本文就来对这些常见的压缩文件进行一</span><br><span class=\"line\">番小结，希望你下次遇到这些文件时不至于被搞晕icon_smile.gif</span><br><span class=\"line\"></span><br><span class=\"line\">　　在具体总结各类压缩文件之前呢，首先要弄清两个概念：打包和压缩。打包是指</span><br><span class=\"line\">将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压</span><br><span class=\"line\">缩算法变成一个小文件。为什么要区分这两个概念呢？其实这源于Linux中的很多压</span><br><span class=\"line\">缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就得先借助</span><br><span class=\"line\">另它的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。</span><br><span class=\"line\"></span><br><span class=\"line\">　　Linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包</span><br><span class=\"line\">，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进</span><br><span class=\"line\">行压缩了，所以首先就来讲讲tar命令的基本用法：</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar命令的选项有很多(用man tar可以查看到)，但常用的就那么几个选项，下面</span><br><span class=\"line\">来举例说明一下：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -cf all.tar *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包</span><br><span class=\"line\">，-f指定包的文件名。</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -rf all.tar *.gif</span></span><br><span class=\"line\">　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的</span><br><span class=\"line\">意思。</span><br><span class=\"line\"><span class=\"comment\"># tar -uf all.tar logo.gif</span></span><br><span class=\"line\">　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -tf all.tar</span></span><br><span class=\"line\">　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xf all.tar</span></span><br><span class=\"line\">　　这条命令是解出all.tar包中所有文件，-x是解开的意思</span><br><span class=\"line\"></span><br><span class=\"line\">　　以上就是tar的最基本的用法。为了方便用户在打包解包的同时可以压缩或解压</span><br><span class=\"line\">文件，tar提供了一种特殊的功能。这就是tar可以在打包或解包的同时调用其它的压</span><br><span class=\"line\">缩程序，比如调用gzip、bzip2等。</span><br><span class=\"line\"></span><br><span class=\"line\">　　1) tar调用gzip</span><br><span class=\"line\"></span><br><span class=\"line\">　　gzip是GNU组织开发的一个压缩程序，.gz结尾的文件就是gzip压缩的结果。与gzip</span><br><span class=\"line\">相对的解压程序是gunzip。tar中使用-z这个参数来调用gzip。下面来举例说明一下</span><br><span class=\"line\">：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -czf all.tar.gz *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个</span><br><span class=\"line\">gzip压缩过的包，包名为all.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xzf all.tar.gz</span></span><br><span class=\"line\">　　这条命令是将上面产生的包解开。</span><br><span class=\"line\"></span><br><span class=\"line\">　　2) tar调用bzip2</span><br><span class=\"line\"></span><br><span class=\"line\">　　bzip2是一个压缩能力更强的压缩程序，.bz2结尾的文件就是bzip2压缩的结果。</span><br><span class=\"line\">与bzip2相对的解压程序是bunzip2。tar中使用-j这个参数来调用gzip。下面来举例</span><br><span class=\"line\">说明一下：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -cjf all.tar.bz2 *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个</span><br><span class=\"line\">bzip2压缩过的包，包名为all.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xjf all.tar.bz2</span></span><br><span class=\"line\">　　这条命令是将上面产生的包解开。</span><br><span class=\"line\">3)tar调用compress</span><br><span class=\"line\"></span><br><span class=\"line\">　　compress也是一个压缩程序，但是好象使用compress的人不如gzip和bzip2的人</span><br><span class=\"line\">多。.Z结尾的文件就是bzip2压缩的结果。与 compress相对的解压程序是uncompress</span><br><span class=\"line\">。tar中使用-Z这个参数来调用compress。下面来举例说明一下：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -cZf all.tar.Z *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成</span><br><span class=\"line\">一个uncompress压缩过的包，包名为all.tar.Z</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xZf all.tar.Z</span></span><br><span class=\"line\">　　这条命令是将上面产生的包解开</span><br><span class=\"line\"></span><br><span class=\"line\">　　有了上面的知识，你应该可以解开多种压缩文件了，下面对于tar系列的压缩文</span><br><span class=\"line\">件作一个小结：</span><br><span class=\"line\"></span><br><span class=\"line\">　　1)对于.tar结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar -xf all.tar</span><br><span class=\"line\"></span><br><span class=\"line\">　　2)对于.gz结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　gzip -d all.gz</span><br><span class=\"line\">　　gunzip all.gz</span><br><span class=\"line\"></span><br><span class=\"line\">　　3)对于.tgz或.tar.gz结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar -xzf all.tar.gz</span><br><span class=\"line\">　　tar -xzf all.tgz</span><br><span class=\"line\"></span><br><span class=\"line\">　　4)对于.bz2结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　bzip2 -d all.bz2</span><br><span class=\"line\">　　bunzip2 all.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">　　5)对于tar.bz2结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar -xjf all.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">　　6)对于.Z结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　uncompress all.Z</span><br><span class=\"line\"></span><br><span class=\"line\">　　7)对于.tar.Z结尾的文件</span><br><span class=\"line\"></span><br><span class=\"line\">　　tar -xZf all.tar.z</span><br><span class=\"line\"></span><br><span class=\"line\">　　另外对于Window下的常见压缩文件.zip和.rar，Linux也有相应的方法来解压它</span><br><span class=\"line\">们：</span><br><span class=\"line\"></span><br><span class=\"line\">　　1)对于.zip</span><br><span class=\"line\"></span><br><span class=\"line\">　　linux下提供了zip和unzip程序，zip是压缩程序，unzip是解压程序。它们的参</span><br><span class=\"line\">数选项很多，这里只做简单介绍，依旧举例说明一下其用法：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># zip all.zip *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件压缩成一个zip包</span><br><span class=\"line\"><span class=\"comment\"># unzip all.zip</span></span><br><span class=\"line\">　　这条命令是将all.zip中的所有文件解压出来</span><br><span class=\"line\"></span><br><span class=\"line\">　　2)对于.rar</span><br><span class=\"line\"></span><br><span class=\"line\">　　要在linux下处理.rar文件，需要安装RAR <span class=\"keyword\">for</span> Linux，可以从网上下载，但要记</span><br><span class=\"line\">住，RAR <span class=\"keyword\">for</span> Linux</span><br><span class=\"line\">不是免费的；可从[url]http://www.rarsoft.com/download.htm[/url]下载RARfor Linux 3.2.</span><br><span class=\"line\">0，然后安装：</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># tar -xzpvf rarlinux-3.2.0.tar.gz</span></span><br><span class=\"line\">　　<span class=\"comment\"># cd rar</span></span><br><span class=\"line\">　　<span class=\"comment\"># make</span></span><br><span class=\"line\"></span><br><span class=\"line\">　　这样就安装好了，安装后就有了rar和unrar这两个程序，rar是压缩程序，unrar</span><br><span class=\"line\">是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># rar a all *.jpg</span></span><br><span class=\"line\">　　这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar</span><br><span class=\"line\">扩展名将自动附加到包名后。</span><br><span class=\"line\"></span><br><span class=\"line\">　　<span class=\"comment\"># unrar e all.rar</span></span><br><span class=\"line\">　　这条命令是将all.rar中的所有文件解压出来</span><br><span class=\"line\"></span><br><span class=\"line\">　　到此为至，我们已经介绍过linux下的tar、gzip、gunzip、bzip2、bunzip2、compress</span><br><span class=\"line\">、 uncompress、 zip、unzip、rar、unrar等程式，你应该已经能够使用它们对.tar</span><br><span class=\"line\">、.gz、.tar.gz、.tgz、.bz2、.tar.bz2、. Z、.tar.Z、.zip、.rar这10种压缩文</span><br><span class=\"line\">件进行解压了，以后应该不需要为下载了一个软件而不知道如何在Linux下解开而烦</span><br><span class=\"line\">恼了。而且以上方法对于Unix也基本有效。</span><br><span class=\"line\"></span><br><span class=\"line\">　　本文介绍了linux下的压缩程式tar、gzip、gunzip、bzip2、bunzip2、compress</span><br><span class=\"line\">、uncompress、 zip、 unzip、rar、unrar等程式，以及如何使用它们对.tar、.gz</span><br><span class=\"line\">、.tar.gz、.tgz、.bz2、.tar.bz2、.Z、. tar.Z、.zip、.rar这10种压缩文件进行</span><br><span class=\"line\">操作。</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/2018-08-20-shujukujichu1/Image.png","post":"cjl9jao910002wswkdq7tcsco","slug":"Image.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-08-22-Git-changyongmingling/726930-5079e6da8900d0e2.jpg","post":"cjl9jao9k0008wswkkf8kpz3k","slug":"726930-5079e6da8900d0e2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/2018-08-22-Git-changyongmingling/linux.gif","post":"cjl9jao9k0008wswkkf8kpz3k","slug":"linux.gif","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjl9jao8k0000wswkvetw3ud8","category_id":"cjl9jao990004wswk0jewdy33","_id":"cjl9jaoa4000fwswkp9ltukz3"},{"post_id":"cjl9jaoak000owswkwdsxrdjw","category_id":"cjl9jao990004wswk0jewdy33","_id":"cjl9jaoas000vwswkbze1cl4x"},{"post_id":"cjl9jao9m0009wswklhxrelmo","category_id":"cjl9jaoam000pwswkot8oco1g","_id":"cjl9jaoat000xwswkqo9cgesp"},{"post_id":"cjl9jao9q000dwswkxpk71ndj","category_id":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaoaw0011wswk3utth2w0"},{"post_id":"cjl9jao9q000dwswkxpk71ndj","category_id":"cjl9jaoap000twswkze0e0fci","_id":"cjl9jaoay0015wswkhh0zs2vz"},{"post_id":"cjl9jao910002wswkdq7tcsco","category_id":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaoay0016wswk2p312aje"},{"post_id":"cjl9jao910002wswkdq7tcsco","category_id":"cjl9jaoau000ywswk9j8be77a","_id":"cjl9jaoaz0019wswkzvvtonvj"},{"post_id":"cjl9jaoa2000ewswk4l22x3r9","category_id":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaob1001bwswkj5y79udb"},{"post_id":"cjl9jaoa2000ewswk4l22x3r9","category_id":"cjl9jaoaw0012wswk4nf712xv","_id":"cjl9jaob2001fwswk8ge8mja4"},{"post_id":"cjl9jaoaa000iwswk65ut3tdw","category_id":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaob4001iwswk7i8w9fm2"},{"post_id":"cjl9jaoaa000iwswk65ut3tdw","category_id":"cjl9jaoaz0017wswkxiptq1au","_id":"cjl9jaob5001kwswkuw1yc9be"},{"post_id":"cjl9jao9d0006wswk676h5zve","category_id":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaobd001nwswkk28natnb"},{"post_id":"cjl9jao9d0006wswk676h5zve","category_id":"cjl9jaoap000twswkze0e0fci","_id":"cjl9jaobf001qwswkyqr7380t"},{"post_id":"cjl9jaoad000kwswkwdmaazhw","category_id":"cjl9jaoam000pwswkot8oco1g","_id":"cjl9jaobg001swswkf0dacvyn"},{"post_id":"cjl9jaoai000nwswkflatb1rf","category_id":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaobj001xwswkmbylkswb"},{"post_id":"cjl9jaoai000nwswkflatb1rf","category_id":"cjl9jaobd001mwswkbsalpj70","_id":"cjl9jaobk001ywswkv9i70lb2"},{"post_id":"cjl9jao9k0008wswkkf8kpz3k","category_id":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaobl0020wswk0869f8to"},{"post_id":"cjl9jao9k0008wswkkf8kpz3k","category_id":"cjl9jaoaz0017wswkxiptq1au","_id":"cjl9jaobl0021wswkrlmb8vx4"},{"post_id":"cjl9jaoch0022wswkbmvx4ncv","category_id":"cjl9jao9o000awswkfmm6swk9","_id":"cjl9jaocn0026wswkpsav91zm"},{"post_id":"cjl9jaoch0022wswkbmvx4ncv","category_id":"cjl9jaocl0024wswky2jqj4fu","_id":"cjl9jaoco0028wswksxy8tmcv"}],"PostTag":[{"post_id":"cjl9jao8k0000wswkvetw3ud8","tag_id":"cjl9jao9c0005wswk2prob0tg","_id":"cjl9jao9q000cwswkchu9bm5i"},{"post_id":"cjl9jao9d0006wswk676h5zve","tag_id":"cjl9jao9p000bwswk2okbtxfe","_id":"cjl9jaoac000jwswk0vgyhzbv"},{"post_id":"cjl9jaoai000nwswkflatb1rf","tag_id":"cjl9jao9c0005wswk2prob0tg","_id":"cjl9jaoan000qwswk9ll2emdg"},{"post_id":"cjl9jao9k0008wswkkf8kpz3k","tag_id":"cjl9jaoa5000hwswks5aoyv8r","_id":"cjl9jaoao000swswk6zc817rj"},{"post_id":"cjl9jao9k0008wswkkf8kpz3k","tag_id":"cjl9jaoah000mwswkjgpv7wq7","_id":"cjl9jaoaq000uwswkoiop5rih"},{"post_id":"cjl9jao9m0009wswklhxrelmo","tag_id":"cjl9jaoan000rwswkejedt3vi","_id":"cjl9jaoav0010wswkepcoh99g"},{"post_id":"cjl9jao9m0009wswklhxrelmo","tag_id":"cjl9jaoas000wwswk35l7s0u1","_id":"cjl9jaoax0013wswkvkh1y8ir"},{"post_id":"cjl9jao9q000dwswkxpk71ndj","tag_id":"cjl9jao9p000bwswk2okbtxfe","_id":"cjl9jaob0001awswk8v07n5ej"},{"post_id":"cjl9jao9q000dwswkxpk71ndj","tag_id":"cjl9jaoau000zwswksny47ox8","_id":"cjl9jaob1001dwswkyd024u4c"},{"post_id":"cjl9jao9q000dwswkxpk71ndj","tag_id":"cjl9jaoax0014wswkqkud677v","_id":"cjl9jaob3001gwswk9ys7lyp6"},{"post_id":"cjl9jaoa2000ewswk4l22x3r9","tag_id":"cjl9jaoaz0018wswky7bj343z","_id":"cjl9jaobd001lwswk4l6rn3ou"},{"post_id":"cjl9jaoa2000ewswk4l22x3r9","tag_id":"cjl9jaob2001ewswkj9o2l70a","_id":"cjl9jaobe001owswk0mag9sm9"},{"post_id":"cjl9jaoaa000iwswk65ut3tdw","tag_id":"cjl9jaoa5000hwswks5aoyv8r","_id":"cjl9jaobg001rwswkh8mqs433"},{"post_id":"cjl9jaoaa000iwswk65ut3tdw","tag_id":"cjl9jaoah000mwswkjgpv7wq7","_id":"cjl9jaobi001uwswklzh5d742"},{"post_id":"cjl9jaoad000kwswkwdmaazhw","tag_id":"cjl9jaoan000rwswkejedt3vi","_id":"cjl9jaobj001wwswk1r6180xc"},{"post_id":"cjl9jaoak000owswkwdsxrdjw","tag_id":"cjl9jaobi001vwswkcqt91hhi","_id":"cjl9jaobk001zwswkc5rvjvzr"},{"post_id":"cjl9jaoch0022wswkbmvx4ncv","tag_id":"cjl9jaocl0023wswkkyn4cydg","_id":"cjl9jaoco0027wswk4mv7cr6c"},{"post_id":"cjl9jaoch0022wswkbmvx4ncv","tag_id":"cjl9jaocm0025wswk2oadghjx","_id":"cjl9jaoco0029wswk77fyuraf"}],"Tag":[{"name":"Python","_id":"cjl9jao9c0005wswk2prob0tg"},{"name":"Oracle","_id":"cjl9jao9p000bwswk2okbtxfe"},{"name":"Git","_id":"cjl9jaoa5000hwswks5aoyv8r"},{"name":"版本控制","_id":"cjl9jaoah000mwswkjgpv7wq7"},{"name":"tools","_id":"cjl9jaoan000rwswkejedt3vi"},{"name":"效率工具","_id":"cjl9jaoas000wwswk35l7s0u1"},{"name":"SQL","_id":"cjl9jaoau000zwswksny47ox8"},{"name":"PLSQL","_id":"cjl9jaoax0014wswkqkud677v"},{"name":"bat","_id":"cjl9jaoaz0018wswky7bj343z"},{"name":"Windows","_id":"cjl9jaob2001ewswkj9o2l70a"},{"name":"test","_id":"cjl9jaobi001vwswkcqt91hhi"},{"name":"Shell","_id":"cjl9jaocl0023wswkkyn4cydg"},{"name":"Linux","_id":"cjl9jaocm0025wswk2oadghjx"}]}}