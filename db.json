{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1534897881190},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1534897881190},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1534897881190},{"_id":"themes/next/.gitignore","hash":"0378adb9c2dc4855b3198184df4863cb30e4059c","modified":1534897881191},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1534897881191},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1534897881191},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1534897881191},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1534897881191},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1534897881191},{"_id":"themes/next/LICENSE.md","hash":"f0190c7d83a98464549a6b3a51bb206148d88e1b","modified":1534897881192},{"_id":"themes/next/README.md","hash":"af2a9c55d698955240b6c791bbbfd7d5f82387f3","modified":1534897881192},{"_id":"themes/next/_config.yml","hash":"7a1ee365bd80619a9cea88b9b770d950058992a5","modified":1534898580305},{"_id":"themes/next/_config - 副本.yml","hash":"495a1a5c556f9bbfac5ba152e29fbc6879ffb227","modified":1534897881192},{"_id":"themes/next/bower.json","hash":"f124431f2ff1225322863d6e6f73de980a85fd7a","modified":1534897881206},{"_id":"themes/next/gulpfile.coffee","hash":"67eaf2515100971f6195b60eeebbfe5e8de895ab","modified":1534897881209},{"_id":"themes/next/package.json","hash":"93526ad6d3c5145ea32a1cda8dfd19f79b773aa5","modified":1534897881224},{"_id":"source/about/index.md","hash":"567025c18f20863564e937e285eedb52022c6030","modified":1534897881171},{"_id":"source/_posts/2018-08-20-数据库基础1.md","hash":"c2bf9f4298cf8a395329649b3a94e80d7f714bdb","modified":1534902802318},{"_id":"source/_posts/2018-08-20-第一篇文章.md~","hash":"8bceb1184d0b173ea21ad6a8d5bc902ae41e61dd","modified":1534897881169},{"_id":"source/_posts/2018-08-21-命令行工具rlwrap.md","hash":"224409e7237a8a02599cab4086ed1532f54886f8","modified":1534902923284},{"_id":"source/_posts/2018-08-20-第一篇文章.md","hash":"925b67716c1204bd6e05ef06769c004f193b8365","modified":1534897881169},{"_id":"source/_posts/2018-08-22-Git-常用命令小结.md","hash":"bbba4a062a3f72152cfd0501d727c5ef7718c09c","modified":1534902813999},{"_id":"source/_posts/726930-5079e6da8900d0e2.jpg","hash":"a2f099798543dfca2563f3cf6c0571e1bfa75332","modified":1534901855285},{"_id":"source/_posts/git配置命令.md","hash":"3df422cce20e3aa3da60375b20587f3686491c60","modified":1534897881170},{"_id":"source/_posts/bat基础.md","hash":"cb5336b4bd53ea5b2ffe46e637eef1e7e0759fb6","modified":1534902844585},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1534897881170},{"_id":"source/_posts/test.md","hash":"f8d044ae56705b8e938d8c4844054c2dafad896c","modified":1534897881171},{"_id":"source/_posts/test.md~","hash":"3b08370820c75aaa90fc3df1fc57552a9200987c","modified":1534897881171},{"_id":"source/_posts/test1.md~","hash":"f113575e90ec8625478d1ce335293a0a58238fa4","modified":1534897881171},{"_id":"source/categories/index.md","hash":"fa49caecd8e98c2e43846cccc85224b9410ec08d","modified":1534897881171},{"_id":"source/_posts/limqfirst.md","hash":"2165202e7b6e5b6b55e8152b227bf640d939409b","modified":1534917344611},{"_id":"source/categories/index.md~","hash":"0ff49d7c9426d868adc09d847d07c2e286942c29","modified":1534897881171},{"_id":"source/tags/index.md","hash":"48e4b885fa79fc52c5feffbf409705a0b50f48e4","modified":1534897881171},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e8400c762e5754baf439ab2b7c9e92acd2fc6fe9","modified":1534897881190},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1534897881191},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c4c1d2d73714e5f9a64e42722e41675d14237236","modified":1534897881190},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"36201119490a04107c8179b10202548a9d0e5e60","modified":1534897881191},{"_id":"themes/next/.github/stale.yml","hash":"b9f7b394c0f3c00ac36168aa5f88c04cbb335911","modified":1534897881191},{"_id":"themes/next/bak.git/FETCH_HEAD","hash":"927cf1c326ed68bb4aab81281b1aef9c4ca96854","modified":1534897881193},{"_id":"themes/next/bak.git/HEAD","hash":"cbbd873eec67d5e5dcf906926aea444709645fb9","modified":1534897881193},{"_id":"themes/next/bak.git/config","hash":"3af2d565c8eb1e4cae9ee983a466d52d851d8db2","modified":1534897881193},{"_id":"themes/next/bak.git/description","hash":"88d76a8724b84a5bbcc3bea08650bc679a0b3da6","modified":1534897881193},{"_id":"themes/next/bak.git/index","hash":"cd756f625445e356841d1a685a85c0365022b3c9","modified":1534897881195},{"_id":"themes/next/bak.git/packed-refs","hash":"55b259d779fb2b90f39512b90fd4a07b2089e5c8","modified":1534897881205},{"_id":"themes/next/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1534897881206},{"_id":"themes/next/docs/INSTALLATION.md","hash":"90565973c39b1c6166317740df2685a1b9961c25","modified":1534897881206},{"_id":"themes/next/docs/DATA-FILES.md","hash":"a5b89b34c1a76bef60f650fdcfae08ccedc4a4a6","modified":1534897881206},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1534897881206},{"_id":"themes/next/docs/LICENSE","hash":"5b702310012d480b40529fd10cf1872f687277a0","modified":1534897881207},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1534897881207},{"_id":"themes/next/languages/de.yml","hash":"b8962e3a680530c331c96b06a41a519e7eca9988","modified":1534897881209},{"_id":"themes/next/languages/default.yml","hash":"2e52aa06eedfdfbb90ab0e8792968721aac412fb","modified":1534897881209},{"_id":"themes/next/languages/fr-FR.yml","hash":"e8cf4d66e919f3c1672b8ca26827185e774c4439","modified":1534897881210},{"_id":"themes/next/languages/en.yml","hash":"4e6b8699dca27936b2f784c7680f1e4fab5b4c5b","modified":1534897881209},{"_id":"themes/next/languages/id.yml","hash":"d0c2f8e90b047db16491a1a5c8f288d0e7244ed3","modified":1534897881210},{"_id":"themes/next/languages/it.yml","hash":"ac109a258ba8a58d07ece728239b093e132feb82","modified":1534897881210},{"_id":"themes/next/languages/ja.yml","hash":"640f0886603b8ed850a2ce81240a414c0cdda997","modified":1534897881210},{"_id":"themes/next/languages/ko.yml","hash":"edf0eeebb6d713c1f7e6b9751b19e8d0b13de4ee","modified":1534897881210},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1534897881211},{"_id":"themes/next/languages/pt-BR.yml","hash":"379591d355f7a1f16447635a0c154bad655db06e","modified":1534897881211},{"_id":"themes/next/languages/pt.yml","hash":"ef68c52c85fa6c1aa0d53586794f8afd0d3a99ae","modified":1534897881211},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1534897881211},{"_id":"themes/next/languages/ru.yml","hash":"06e92838a38696f6a519caee12e70ca7898eaea4","modified":1534897881211},{"_id":"themes/next/languages/zh-Hans.yml","hash":"1094b72ddcb19862787181705b1b779bb52ef34c","modified":1534897881211},{"_id":"themes/next/languages/zh-tw.yml","hash":"85a434a7ed860fed58dc748cba2a857ad6878338","modified":1534897881212},{"_id":"themes/next/languages/zh-hk.yml","hash":"6f01b26859d6f3fa86ae346c03f2cff86cdbdc63","modified":1534897881212},{"_id":"themes/next/layout/_layout.swig","hash":"39992cb72ab178ef6cce5bb36317fd0b24d17912","modified":1534897881212},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1534897881223},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1534897881223},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1534897881224},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1534897881223},{"_id":"themes/next/layout/post.swig","hash":"ceba7287574c429a235aa7a62bf7a3dc1efb265a","modified":1534897881224},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1534897881224},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1534897881224},{"_id":"themes/next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1534897881224},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1534897881225},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1534897881253},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1534897881253},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1534897881253},{"_id":"source/_posts/Image.png","hash":"1497cd005727341d9f4fc34ecf2a3b38294f4f58","modified":1534897881170},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534897881244},{"_id":"themes/next/bak.git/hooks/commit-msg.sample","hash":"e44c3d173580f6b4d8ee7f9b963d252af9902703","modified":1534897881193},{"_id":"themes/next/bak.git/hooks/applypatch-msg.sample","hash":"61f0ed9af9a16dbba9b834edfb657f07aa10125d","modified":1534897881193},{"_id":"themes/next/bak.git/hooks/post-update.sample","hash":"6c00d034115de8f56eba4ded1eba7ffc73b332f6","modified":1534897881194},{"_id":"themes/next/bak.git/hooks/pre-applypatch.sample","hash":"7863e8a9fef55740491ab4429a13081a20a1dad9","modified":1534897881194},{"_id":"themes/next/bak.git/hooks/pre-commit.sample","hash":"da4e689ea46d093a0a4585046fca844e243b22b0","modified":1534897881194},{"_id":"themes/next/bak.git/hooks/pre-push.sample","hash":"ac10c067e42e887ed93052dbece70922812546f3","modified":1534897881194},{"_id":"themes/next/bak.git/hooks/pre-rebase.sample","hash":"38c5fea16bac7be194361a885c678d8b08787d3b","modified":1534897881194},{"_id":"themes/next/bak.git/hooks/pre-receive.sample","hash":"bfff8781c853c3d554371cc50e63ec70eb377711","modified":1534897881194},{"_id":"themes/next/bak.git/hooks/prepare-commit-msg.sample","hash":"bbc936f9c3920673a901aae46a8b99afb1400a56","modified":1534897881194},{"_id":"themes/next/bak.git/hooks/update.sample","hash":"df9f68bdcd0e7c6cee8cdce7b17f8ff7e625847b","modified":1534897881194},{"_id":"themes/next/bak.git/logs/HEAD","hash":"ae1b1454ffdbc183c36f09bf433bb20b925eaaf1","modified":1534897881195},{"_id":"themes/next/bak.git/info/exclude","hash":"0214ce0925395605f10f65300bc1e4871dd9441e","modified":1534897881195},{"_id":"themes/next/docs/cn/DATA-FILES.md","hash":"9d1efb47c78969e9b1e5a2374d03ad9ea6e8b738","modified":1534897881207},{"_id":"themes/next/docs/cn/README.md","hash":"09e60d80615b99bc620547c360d77bf8614d0354","modified":1534897881208},{"_id":"themes/next/docs/cn/INSTALLATION.md","hash":"eb488ed645c48fe3436b9dcd6c719ec38295bd41","modified":1534897881207},{"_id":"themes/next/docs/cn/UPDATE-FROM-5.1.X.md","hash":"a667000e655fe66b2234fb66cc99e66450ba8cc8","modified":1534897881208},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"6f10fbc0aa0bb65a8eaeb0a9454aa280f1d84d77","modified":1534897881208},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"3afd4abd7a25d78951a7e027b8c72ba817991c47","modified":1534897881208},{"_id":"themes/next/docs/ru/README.md","hash":"5f43e98cd460e82d04333c0918aabd33b34e74b5","modified":1534897881208},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1534897881209},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1534897881212},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1534897881212},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"17c41210cfa3d4c648fba4b4bb7a456e547235e2","modified":1534897881212},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1534897881212},{"_id":"themes/next/layout/_macro/post.swig","hash":"5ece620b125ccc2eab8482061a152f2a285bb293","modified":1534897881213},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1534897881213},{"_id":"themes/next/layout/_macro/post.swig.bak","hash":"907011f1cea499bba6dc6a37a8d48d266d3b56ec","modified":1534897881213},{"_id":"themes/next/layout/_macro/post.swig.chushihua0821","hash":"27bf0b808929801dc863ae0821831ccb81841236","modified":1534897881214},{"_id":"themes/next/layout/_macro/post.swig1","hash":"11b10785a813404e507fd939b1a2d7e29732add0","modified":1534897881214},{"_id":"themes/next/layout/_macro/reward.swig","hash":"8dc3b6ba76c389aaa0810cbd0df206f7096d76a0","modified":1534897881214},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9f9a4adce86ec9f430ad050d58f8ee4eeccfa5eb","modified":1534897881214},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"616ffee93e84958e72ee0f996808f866c4ccdbf7","modified":1534897881214},{"_id":"themes/next/layout/_partials/comments.swig","hash":"365e32a72453cc087faa67a0919a3dbdf20a2dd0","modified":1534897881214},{"_id":"themes/next/layout/_partials/footer.swig","hash":"94be016d84414f1039536ab2fee0ffe69ae76418","modified":1534897881215},{"_id":"themes/next/layout/_partials/header.swig","hash":"73a575d672902cbc926fa1d6a063a0ca163692aa","modified":1534897881215},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1534897881215},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1534897881215},{"_id":"themes/next/layout/_partials/head.swig","hash":"75f4e47019b818324296cbfd36a067bd3ccb4670","modified":1534897881215},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1534897881216},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1534897881217},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1534897881217},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"f134aeb8d5bee351e5277edb92ac694af314b75f","modified":1534897881218},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1534897881221},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1534897881221},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1534897881222},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1534897881222},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1534897881222},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1534897881222},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1534897881244},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1534897881244},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1534897881245},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1534897881245},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1534897881246},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1534897881245},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1534897881246},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1534897881246},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1534897881246},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1534897881246},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1534897881246},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1534897881247},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1534897881247},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534897881247},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1534897881247},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1534897881247},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534897881247},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1534897881247},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1534897881247},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1534897881225},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1534897881225},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1534897881225},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1534897881225},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1534897881226},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1534897881226},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1534897881226},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1534897881226},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1534897881226},{"_id":"source/_posts/2018-08-20-数据库基础1/Image.png","hash":"1497cd005727341d9f4fc34ecf2a3b38294f4f58","modified":1534897881169},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534897881218},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534897881218},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534897881243},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534897881244},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534897881239},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534897881239},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534897881240},{"_id":"themes/next/bak.git/refs/heads/master","hash":"fe20870c18f713ddf047b16a2bbd717cfbdb44a5","modified":1534897881205},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1534897881215},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1534897881215},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1534897881216},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1534897881216},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1534897881216},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1534897881216},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1534897881216},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1534897881216},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1534897881217},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1534897881217},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1534897881218},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1534897881218},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1534897881219},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1534897881219},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1534897881219},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1534897881219},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1534897881219},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1534897881219},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1534897881219},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1534897881220},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1534897881220},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1534897881220},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1534897881220},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1534897881220},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1534897881220},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1534897881220},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"6ebaaef0bd55b215b0e109adc41364e34255764e","modified":1534897881220},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"292cdd1059b76d3d10486b71c99d9afb3e59ea44","modified":1534897881221},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"787d482d797c38e77d69629ebb88d45f972216b7","modified":1534897881221},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"18a58db53f1eef50462ee0065d4445b7fbb04fb5","modified":1534897881221},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"7cf0c589d95a2d1848266ffe2357e91c95d2e7f8","modified":1534897881221},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1534897881221},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"ab181c036cda9656f87bb1a749e3e7cbc437f012","modified":1534897881221},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1534897881223},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1534897881222},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1534897881223},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1534897881223},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1534897881239},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1534897881243},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1534897881243},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1534897881243},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1534897881244},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1534897881239},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1534897881240},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1534897881240},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1534897881247},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6c30aab4822b189d1fe9b20ca5272fd8d3ebe998","modified":1534897881248},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1534897881248},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1534897881248},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1534897881248},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1534897881248},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1534897881248},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1534897881249},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1534897881249},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1534897881249},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1534897881252},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1534897881252},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1534897881252},{"_id":"themes/next/bak.git/objects/pack/pack-59ccd5c447b91c1959fc50148301893e8f07b025.idx","hash":"5ccd4b141734c83d5f6da0449ee14ee35dcc50d1","modified":1534897881196},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1534897881250},{"_id":"themes/next/bak.git/logs/refs/heads/master","hash":"2a6d31c817504a16b370d4d1ecc7b460bc29b3b1","modified":1534897881195},{"_id":"themes/next/bak.git/refs/remotes/origin/HEAD","hash":"e72f7364331a01c35feea3858c09e16db1631660","modified":1534897881205},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1534897881222},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1534897881222},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1534897881227},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1534897881227},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1534897881227},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1534897881227},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1534897881227},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1534897881230},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1534897881235},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1534897881238},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1534897881238},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1534897881238},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1534897881239},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1534897881239},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1534897881239},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1534897881239},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1534897881240},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1534897881240},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1534897881240},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1534897881240},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1534897881241},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"4ec334200cca3c8ed7becb702c8fc3467e28b0d4","modified":1534897881241},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1534897881241},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1534897881241},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1534897881241},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c0b5f6f095a5c192705dc45b98208d25242f8083","modified":1534897881242},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1534897881242},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1534897881242},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1534897881242},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"fada15ae00295ebd7b4d9390512ddc09ab759bf1","modified":1534897881242},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1534897881242},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1534897881243},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1534897881243},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1534897881243},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1534897881241},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1534897881249},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1534897881251},{"_id":"themes/next/bak.git/logs/refs/remotes/origin/HEAD","hash":"2a6d31c817504a16b370d4d1ecc7b460bc29b3b1","modified":1534897881195},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1534897881227},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1534897881227},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1534897881228},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1534897881228},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1534897881228},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1534897881228},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1534897881228},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1534897881229},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1534897881228},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1534897881229},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1534897881229},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1534897881230},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1534897881230},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1534897881230},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1534897881230},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1534897881231},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1534897881231},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1534897881231},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1534897881231},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"f1e6e6495e69c4da3e8167ffc56bfc4d17aa15e1","modified":1534897881232},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"82bc7fa5d38d98e98cc25f9a73189024fda25e63","modified":1534897881232},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1534897881232},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1534897881232},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1534897881232},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1534897881232},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1534897881232},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1534897881233},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"1faeb3fca899df9d033e4e6ad9a4867cdce7ef9d","modified":1534897881233},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1534897881233},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1534897881233},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1534897881231},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1534897881233},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1534897881233},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1534897881234},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1534897881234},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1534897881234},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1534897881234},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1534897881234},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1534897881234},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1534897881232},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1534897881235},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1534897881235},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1534897881235},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1534897881236},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1534897881236},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1534897881235},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1534897881236},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1534897881236},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1534897881236},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1534897881236},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1534897881236},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1534897881237},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1534897881237},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1534897881237},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1534897881237},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1534897881237},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1534897881238},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"b66aa075b48429cf3875fd02f693f378aec424da","modified":1534897881238},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1534897881241},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1534897881241},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1534897881242},{"_id":"themes/next/bak.git/objects/pack/pack-59ccd5c447b91c1959fc50148301893e8f07b025.pack","hash":"d3098328724ecc3d690260c6ea4ec3cba80d355b","modified":1534897881205},{"_id":"public/atom.xml","hash":"616283a410720fb30a8333d65800366b0e77cc1d","modified":1534917378865},{"_id":"public/search.xml","hash":"a1033ac929a40d929df776ef73ed222b54af8893","modified":1534917378874},{"_id":"public/about/index.html","hash":"d1cce02b6ebfe1f88a6ea457268679c95caa07a5","modified":1534917378879},{"_id":"public/categories/index.html","hash":"86ec3cea573501527aa15bdac7f6f2ad6e9959af","modified":1534917378879},{"_id":"public/tags/index.html","hash":"cc0f47504ad77301297a888d4a087372a45b7409","modified":1534917378880},{"_id":"public/2018/08/22/Git-常用命令小结/index.html","hash":"185778246a07c78fd684ae02a229ef582d2a5758","modified":1534917378880},{"_id":"public/2018/08/22/hello-world/index.html","hash":"15614f22040b17e4bd4cde4ed0f9a8ca62b511f3","modified":1534917378880},{"_id":"public/2018/08/20/数据库基础1/index.html","hash":"1363a8693c9bd32c6899119b1e9851ac0523fc9e","modified":1534917378880},{"_id":"public/2018/08/20/命令行工具rlwrap/index.html","hash":"27114d5b05bb6195e018e0ff1b64c07d5b8b7142","modified":1534917378880},{"_id":"public/2018/08/20/第一篇文章/index.html","hash":"2ba73260b6e812d3bce4d2759de04411e1203ec0","modified":1534917378880},{"_id":"public/2018/08/20/bat基础/index.html","hash":"6c6094b1f1a7a23cbe01c947376463b49ae21c7a","modified":1534917378880},{"_id":"public/2018/08/20/git配置命令/index.html","hash":"97873eefd656d9d7761092dc297e60a95021b67c","modified":1534917378880},{"_id":"public/2018/08/20/limqfirst/index.html","hash":"54beb466669a985426ba498367777315e4083980","modified":1534917378881},{"_id":"public/2018/08/20/test/index.html","hash":"11561cd21c2f8757e4f3b90a2ffd4051f7692e8e","modified":1534917378881},{"_id":"public/categories/Program/index.html","hash":"12780404524c944f8c7fa5e4ce82b84e55b15033","modified":1534917378881},{"_id":"public/categories/life/index.html","hash":"229817924213584cc8c3e39585fd8840ec52d1f4","modified":1534917378881},{"_id":"public/categories/Program/Git/index.html","hash":"fd83ede9919ac14cbdba8eebd990bc9f96c3f576","modified":1534917378881},{"_id":"public/categories/Program/test/index.html","hash":"e21473e9cf85dac3e64d84078acee2d2f7a5230a","modified":1534917378881},{"_id":"public/categories/Program/bat/index.html","hash":"022c081cea9ce25024326af385ba36c6c891f619","modified":1534917378881},{"_id":"public/categories/Program/Oracle/index.html","hash":"8d20c4ac279fe58c4962589a20ed59471c213b97","modified":1534917378881},{"_id":"public/categories/Program/hexo/index.html","hash":"dc8da4cb45074e1380db8196bffca53c37298bf0","modified":1534917378881},{"_id":"public/archives/index.html","hash":"b72a993caaf4d01782eed50a5169fb0377e25e5e","modified":1534917378882},{"_id":"public/archives/2018/index.html","hash":"b72a993caaf4d01782eed50a5169fb0377e25e5e","modified":1534917378882},{"_id":"public/archives/2018/08/index.html","hash":"b72a993caaf4d01782eed50a5169fb0377e25e5e","modified":1534917378882},{"_id":"public/index.html","hash":"fcd6d225fea265cbfbfdc77a473624ba905e3d88","modified":1534917378882},{"_id":"public/tags/Oracle/index.html","hash":"7a9df5bbff037cd352faac3c7977098b188daa8d","modified":1534917378882},{"_id":"public/tags/Python/index.html","hash":"82e3356b039477583f1efc23638161b38118c6c0","modified":1534917378882},{"_id":"public/tags/Git/index.html","hash":"4d1acfe7719ad0d91fcc2b691d3612fee2526146","modified":1534917378882},{"_id":"public/tags/版本控制/index.html","hash":"daab3ec78b10c2726013dfda49ff5e4ac4c85295","modified":1534917378882},{"_id":"public/tags/bat/index.html","hash":"e3b8e65b42d72f847506f0ebba31804ef225d531","modified":1534917378882},{"_id":"public/tags/Windows/index.html","hash":"4e5c82c3580702cc38f67a4609bf933e4d1a3f1a","modified":1534917378882},{"_id":"public/tags/test/index.html","hash":"5a0b3fe77801c9d9d360cb2c1d54fff9b0a54c0f","modified":1534917378882},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1534917378892},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1534917378892},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1534917378892},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1534917378892},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1534917378892},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1534917378892},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1534917378893},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1534917378893},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1534917378893},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1534917378893},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1534917378893},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534917378893},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1534917378893},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1534917378893},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1534917378893},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1534917378893},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534917378893},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1534917378893},{"_id":"public/2018/08/20/数据库基础1/Image.png","hash":"1497cd005727341d9f4fc34ecf2a3b38294f4f58","modified":1534917379309},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1534917379315},{"_id":"public/js/src/bootstrap.js","hash":"531cdedd7fbe8cb1dab2e4328774a9f6b15b59da","modified":1534917379315},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1534917379315},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1534917379316},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1534917379316},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1534917379316},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1534917379316},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1534917379316},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1534917379316},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1534917379316},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1534917379316},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1534917379316},{"_id":"public/css/main.css","hash":"4d94aa46a2c2ded8d3a7a2f96f980a36567357bb","modified":1534917379316},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1534917379316},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1534917379316},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1534917379316},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1534917379316}],"Category":[{"name":"Program","_id":"cjl4q6ceh0004bwlrebqs7mqt"},{"name":"life","_id":"cjl4q6ceu000fbwlrod73mr0s"},{"name":"Git","parent":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cey000kbwlrdzdzmgdt"},{"name":"test","parent":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cez000obwlrxdz46yds"},{"name":"bat","parent":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cf0000tbwlrhhuzznxb"},{"name":"Oracle","parent":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cf30012bwlrt2j7z6d6"},{"name":"hexo","parent":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cf50019bwlrw21bzy7u"}],"Data":[],"Page":[{"title":"about","date":"2018-08-20T05:16:33.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-08-20 13:16:33\n---\n","updated":"2018-08-22T00:31:21.171Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjl4q6ce80000bwlr1y7k272d","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","layout":"categories","type":"categories","date":"2018-08-20T05:16:15.000Z","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\nlayout: categories\ntype: \"categories\"\ndate: 2018-08-20 13:16:15\ncomments: false\n---\n","updated":"2018-08-22T00:31:21.171Z","path":"categories/index.html","_id":"cjl4q6cee0002bwlr37zppj1i","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-08-20T05:16:25.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-08-20 13:16:25\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-08-22T00:31:21.171Z","path":"tags/index.html","layout":"page","_id":"cjl4q6cei0005bwlrf3ilcebz","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"数据库基础1","comments":1,"date":"2018-08-20T09:05:48.000Z","updated":"2018-08-20T09:05:48.000Z","_content":"\n## 4.1 关系代数运算       \n\n传统的几何运算。并、差、交、笛卡尔积等。        \n专门的关系运算。选择、投影、连接等。    \n### 4.1.1 关系运算   \n\n(1)并(Union)     \n(2)差（Difference）  \n(3)交（Intersect）\n![图片代替文字](2018-08-20-数据库基础1\\Image.png)        \n\n### 4.1.2专门的关系运算        \n\n(1)选择            \nselect * from students where 性别='男'        \n(2)投影            \nselect 学号，姓名，身份证号 from students       \n(3)连接            \n连接是关系的横向结合。连接运算将两个关系模式拼接成一个更宽的关系模式，生成新关系中包含满足条件的元祖。连接过程是通过连接条件来控制的，连接条件中将出现两个表中的公共属性名，或者具有相同语义、可比的属性。连接结果是满足条件的所有记录，连接运算需要两个表作为操作对象，操作结果产生一个关系。若需要连接两个以上的表，则应当两两进行连接。一般可以描述为：JOIN <关系1> AND <关系2> WHERE <条件>SELECT *　FROM STUDENTS A INNER JOIN SECORES B ON A.学号=B.学号该命令查出学生表和成绩表中有相同学号的全部信息。 ","source":"_posts/2018-08-20-数据库基础1.md","raw":"---\ntitle: 数据库基础1\ncomments: true\ndate: 2018-08-20 17:05:48\nupdated: 2018-08-20 17:05:48\ntags:\ncategories:\n- Program\n- test\n---\n\n## 4.1 关系代数运算       \n\n传统的几何运算。并、差、交、笛卡尔积等。        \n专门的关系运算。选择、投影、连接等。    \n### 4.1.1 关系运算   \n\n(1)并(Union)     \n(2)差（Difference）  \n(3)交（Intersect）\n![图片代替文字](2018-08-20-数据库基础1\\Image.png)        \n\n### 4.1.2专门的关系运算        \n\n(1)选择            \nselect * from students where 性别='男'        \n(2)投影            \nselect 学号，姓名，身份证号 from students       \n(3)连接            \n连接是关系的横向结合。连接运算将两个关系模式拼接成一个更宽的关系模式，生成新关系中包含满足条件的元祖。连接过程是通过连接条件来控制的，连接条件中将出现两个表中的公共属性名，或者具有相同语义、可比的属性。连接结果是满足条件的所有记录，连接运算需要两个表作为操作对象，操作结果产生一个关系。若需要连接两个以上的表，则应当两两进行连接。一般可以描述为：JOIN <关系1> AND <关系2> WHERE <条件>SELECT *　FROM STUDENTS A INNER JOIN SECORES B ON A.学号=B.学号该命令查出学生表和成绩表中有相同学号的全部信息。 ","slug":"数据库基础1","published":1,"layout":"post","photos":[],"link":"","_id":"cjl4q6ce90001bwlriar7asw7","content":"<h2 id=\"4-1-关系代数运算\"><a href=\"#4-1-关系代数运算\" class=\"headerlink\" title=\"4.1 关系代数运算\"></a>4.1 关系代数运算</h2><p>传统的几何运算。并、差、交、笛卡尔积等。<br>专门的关系运算。选择、投影、连接等。    </p>\n<h3 id=\"4-1-1-关系运算\"><a href=\"#4-1-1-关系运算\" class=\"headerlink\" title=\"4.1.1 关系运算\"></a>4.1.1 关系运算</h3><p>(1)并(Union)<br>(2)差（Difference）<br>(3)交（Intersect）<br><img src=\"2018-08-20-数据库基础1\\Image.png\" alt=\"图片代替文字\">        </p>\n<h3 id=\"4-1-2专门的关系运算\"><a href=\"#4-1-2专门的关系运算\" class=\"headerlink\" title=\"4.1.2专门的关系运算\"></a>4.1.2专门的关系运算</h3><p>(1)选择<br>select <em> from students where 性别=’男’<br>(2)投影<br>select 学号，姓名，身份证号 from students<br>(3)连接<br>连接是关系的横向结合。连接运算将两个关系模式拼接成一个更宽的关系模式，生成新关系中包含满足条件的元祖。连接过程是通过连接条件来控制的，连接条件中将出现两个表中的公共属性名，或者具有相同语义、可比的属性。连接结果是满足条件的所有记录，连接运算需要两个表作为操作对象，操作结果产生一个关系。若需要连接两个以上的表，则应当两两进行连接。一般可以描述为：JOIN &lt;关系1&gt; AND &lt;关系2&gt; WHERE &lt;条件&gt;SELECT </em>　FROM STUDENTS A INNER JOIN SECORES B ON A.学号=B.学号该命令查出学生表和成绩表中有相同学号的全部信息。 </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"4-1-关系代数运算\"><a href=\"#4-1-关系代数运算\" class=\"headerlink\" title=\"4.1 关系代数运算\"></a>4.1 关系代数运算</h2><p>传统的几何运算。并、差、交、笛卡尔积等。<br>专门的关系运算。选择、投影、连接等。    </p>\n<h3 id=\"4-1-1-关系运算\"><a href=\"#4-1-1-关系运算\" class=\"headerlink\" title=\"4.1.1 关系运算\"></a>4.1.1 关系运算</h3><p>(1)并(Union)<br>(2)差（Difference）<br>(3)交（Intersect）<br><img src=\"2018-08-20-数据库基础1\\Image.png\" alt=\"图片代替文字\">        </p>\n<h3 id=\"4-1-2专门的关系运算\"><a href=\"#4-1-2专门的关系运算\" class=\"headerlink\" title=\"4.1.2专门的关系运算\"></a>4.1.2专门的关系运算</h3><p>(1)选择<br>select <em> from students where 性别=’男’<br>(2)投影<br>select 学号，姓名，身份证号 from students<br>(3)连接<br>连接是关系的横向结合。连接运算将两个关系模式拼接成一个更宽的关系模式，生成新关系中包含满足条件的元祖。连接过程是通过连接条件来控制的，连接条件中将出现两个表中的公共属性名，或者具有相同语义、可比的属性。连接结果是满足条件的所有记录，连接运算需要两个表作为操作对象，操作结果产生一个关系。若需要连接两个以上的表，则应当两两进行连接。一般可以描述为：JOIN &lt;关系1&gt; AND &lt;关系2&gt; WHERE &lt;条件&gt;SELECT </em>　FROM STUDENTS A INNER JOIN SECORES B ON A.学号=B.学号该命令查出学生表和成绩表中有相同学号的全部信息。 </p>\n"},{"title":"Linux 下 Oracle 命令行工具 Rlwrap","comments":1,"date":"2018-08-20T09:05:48.000Z","updated":"2018-08-20T09:05:48.000Z","_content":"\n如果您对Rlwrap这个工具不是很熟悉，建议参考一下这篇文章：[ Rlwrap Linux 上实现 Windows 的 SQL*Plus 保存 SQL 历史记录功能](http://space.itpub.net/519536/viewspace-614104)，这篇文章描述了如何部署安装 Rlwrap 工具。\n\n这个工具可以理解为在 UNIX 或 Linux 平台下模拟 Windows 下 SQL*Plus 的操作习惯（当然不仅限于此），同时在  SQL*Plus 中可以模拟 UNIX 或 Linux 的操作习惯，一旦掌握，可以提高在 SQL*Plus 中的操作效率。 \n\n以下是我尝试出来的一下快捷键，分享在此。\n```\nCtrl+L 将当前行置顶，相当于完成清屏的动作\nCtrl+P 上一条命令\nCtrl+N 下一条命令\nCtrl+U 从光标处删除到行首Ctrl+W 向前删除一个单词\nCtrl+R 增量搜索用过的命令，反复使用\nCtrl+R可以向前继续寻找包含关键字的命令，但不能循环\nCtrl+T 当前字母与前面的字母交换，最后的时候是最后两个字母交换\nCtrl+Z 后台运行，使用fg调出\nCtrl+XX 光标最近两次位置交换\nCtrl+B 光标向前移动\nCtrl+J 相当于Enter键，小心勿执行语句\nCtrl+O 相当于Enter键，小心勿执行语句\nCtrl+M 相当于Enter键，小心勿执行语句\nCtrl+H 相当于Backspace删除键\n```\n\n每一个快捷键都有其适用场合，尤其是`Ctrl + L` 可以非常便捷的完成清屏的作用，慢慢体会吧。如果您发现了更多有趣的使用方法，欢迎分享。\n\n看一个真正的专家操作命令行绝对是一种很好的体验-光标在单词之间来回穿梭，命令行不同的滚动。在这里强烈建立适应GUI节目的开发者尝试一下在提示符下面工作。但是事情也不是那么简单，还是需要知道“如何去做”。在单词之间跳转，使用 `Ctrl + 左右键`。`Ctrl + a` 跳到本行的行首，`Ctrl + e` 则跳到页尾。`Ctrl + u` 删除当前光标前面的文字 `Ctrl + k` -删除当前光标后面的文字 `Ctrl + w` 和`Alt + d` 对于当前的单词进行删除操作，`w`删除光标前面的单词的字符，`d` 则删除后面的字符`Alt + Backsapce` 删除当前光标后面的单词，如果删除错误，使用`Ctrl + y` 进行恢复`Ctrl + L` 进行清屏操作。","source":"_posts/2018-08-21-命令行工具rlwrap.md","raw":"---\ntitle: Linux 下 Oracle 命令行工具 Rlwrap\ncomments: true\ndate: 2018-08-20 17:05:48\nupdated: 2018-08-20 17:05:48\ntags: Oracle\ncategories: \n- Program\n- Oracle\n---\n\n如果您对Rlwrap这个工具不是很熟悉，建议参考一下这篇文章：[ Rlwrap Linux 上实现 Windows 的 SQL*Plus 保存 SQL 历史记录功能](http://space.itpub.net/519536/viewspace-614104)，这篇文章描述了如何部署安装 Rlwrap 工具。\n\n这个工具可以理解为在 UNIX 或 Linux 平台下模拟 Windows 下 SQL*Plus 的操作习惯（当然不仅限于此），同时在  SQL*Plus 中可以模拟 UNIX 或 Linux 的操作习惯，一旦掌握，可以提高在 SQL*Plus 中的操作效率。 \n\n以下是我尝试出来的一下快捷键，分享在此。\n```\nCtrl+L 将当前行置顶，相当于完成清屏的动作\nCtrl+P 上一条命令\nCtrl+N 下一条命令\nCtrl+U 从光标处删除到行首Ctrl+W 向前删除一个单词\nCtrl+R 增量搜索用过的命令，反复使用\nCtrl+R可以向前继续寻找包含关键字的命令，但不能循环\nCtrl+T 当前字母与前面的字母交换，最后的时候是最后两个字母交换\nCtrl+Z 后台运行，使用fg调出\nCtrl+XX 光标最近两次位置交换\nCtrl+B 光标向前移动\nCtrl+J 相当于Enter键，小心勿执行语句\nCtrl+O 相当于Enter键，小心勿执行语句\nCtrl+M 相当于Enter键，小心勿执行语句\nCtrl+H 相当于Backspace删除键\n```\n\n每一个快捷键都有其适用场合，尤其是`Ctrl + L` 可以非常便捷的完成清屏的作用，慢慢体会吧。如果您发现了更多有趣的使用方法，欢迎分享。\n\n看一个真正的专家操作命令行绝对是一种很好的体验-光标在单词之间来回穿梭，命令行不同的滚动。在这里强烈建立适应GUI节目的开发者尝试一下在提示符下面工作。但是事情也不是那么简单，还是需要知道“如何去做”。在单词之间跳转，使用 `Ctrl + 左右键`。`Ctrl + a` 跳到本行的行首，`Ctrl + e` 则跳到页尾。`Ctrl + u` 删除当前光标前面的文字 `Ctrl + k` -删除当前光标后面的文字 `Ctrl + w` 和`Alt + d` 对于当前的单词进行删除操作，`w`删除光标前面的单词的字符，`d` 则删除后面的字符`Alt + Backsapce` 删除当前光标后面的单词，如果删除错误，使用`Ctrl + y` 进行恢复`Ctrl + L` 进行清屏操作。","slug":"命令行工具rlwrap","published":1,"layout":"post","photos":[],"link":"","_id":"cjl4q6cee0003bwlrf3wm64yu","content":"<p>如果您对Rlwrap这个工具不是很熟悉，建议参考一下这篇文章：<a href=\"http://space.itpub.net/519536/viewspace-614104\" target=\"_blank\" rel=\"noopener\"> Rlwrap Linux 上实现 Windows 的 SQL*Plus 保存 SQL 历史记录功能</a>，这篇文章描述了如何部署安装 Rlwrap 工具。</p>\n<p>这个工具可以理解为在 UNIX 或 Linux 平台下模拟 Windows 下 SQL<em>Plus 的操作习惯（当然不仅限于此），同时在  SQL</em>Plus 中可以模拟 UNIX 或 Linux 的操作习惯，一旦掌握，可以提高在 SQL*Plus 中的操作效率。 </p>\n<p>以下是我尝试出来的一下快捷键，分享在此。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+L 将当前行置顶，相当于完成清屏的动作</span><br><span class=\"line\">Ctrl+P 上一条命令</span><br><span class=\"line\">Ctrl+N 下一条命令</span><br><span class=\"line\">Ctrl+U 从光标处删除到行首Ctrl+W 向前删除一个单词</span><br><span class=\"line\">Ctrl+R 增量搜索用过的命令，反复使用</span><br><span class=\"line\">Ctrl+R可以向前继续寻找包含关键字的命令，但不能循环</span><br><span class=\"line\">Ctrl+T 当前字母与前面的字母交换，最后的时候是最后两个字母交换</span><br><span class=\"line\">Ctrl+Z 后台运行，使用fg调出</span><br><span class=\"line\">Ctrl+XX 光标最近两次位置交换</span><br><span class=\"line\">Ctrl+B 光标向前移动</span><br><span class=\"line\">Ctrl+J 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+O 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+M 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+H 相当于Backspace删除键</span><br></pre></td></tr></table></figure></p>\n<p>每一个快捷键都有其适用场合，尤其是<code>Ctrl + L</code> 可以非常便捷的完成清屏的作用，慢慢体会吧。如果您发现了更多有趣的使用方法，欢迎分享。</p>\n<p>看一个真正的专家操作命令行绝对是一种很好的体验-光标在单词之间来回穿梭，命令行不同的滚动。在这里强烈建立适应GUI节目的开发者尝试一下在提示符下面工作。但是事情也不是那么简单，还是需要知道“如何去做”。在单词之间跳转，使用 <code>Ctrl + 左右键</code>。<code>Ctrl + a</code> 跳到本行的行首，<code>Ctrl + e</code> 则跳到页尾。<code>Ctrl + u</code> 删除当前光标前面的文字 <code>Ctrl + k</code> -删除当前光标后面的文字 <code>Ctrl + w</code> 和<code>Alt + d</code> 对于当前的单词进行删除操作，<code>w</code>删除光标前面的单词的字符，<code>d</code> 则删除后面的字符<code>Alt + Backsapce</code> 删除当前光标后面的单词，如果删除错误，使用<code>Ctrl + y</code> 进行恢复<code>Ctrl + L</code> 进行清屏操作。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>如果您对Rlwrap这个工具不是很熟悉，建议参考一下这篇文章：<a href=\"http://space.itpub.net/519536/viewspace-614104\" target=\"_blank\" rel=\"noopener\"> Rlwrap Linux 上实现 Windows 的 SQL*Plus 保存 SQL 历史记录功能</a>，这篇文章描述了如何部署安装 Rlwrap 工具。</p>\n<p>这个工具可以理解为在 UNIX 或 Linux 平台下模拟 Windows 下 SQL<em>Plus 的操作习惯（当然不仅限于此），同时在  SQL</em>Plus 中可以模拟 UNIX 或 Linux 的操作习惯，一旦掌握，可以提高在 SQL*Plus 中的操作效率。 </p>\n<p>以下是我尝试出来的一下快捷键，分享在此。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+L 将当前行置顶，相当于完成清屏的动作</span><br><span class=\"line\">Ctrl+P 上一条命令</span><br><span class=\"line\">Ctrl+N 下一条命令</span><br><span class=\"line\">Ctrl+U 从光标处删除到行首Ctrl+W 向前删除一个单词</span><br><span class=\"line\">Ctrl+R 增量搜索用过的命令，反复使用</span><br><span class=\"line\">Ctrl+R可以向前继续寻找包含关键字的命令，但不能循环</span><br><span class=\"line\">Ctrl+T 当前字母与前面的字母交换，最后的时候是最后两个字母交换</span><br><span class=\"line\">Ctrl+Z 后台运行，使用fg调出</span><br><span class=\"line\">Ctrl+XX 光标最近两次位置交换</span><br><span class=\"line\">Ctrl+B 光标向前移动</span><br><span class=\"line\">Ctrl+J 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+O 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+M 相当于Enter键，小心勿执行语句</span><br><span class=\"line\">Ctrl+H 相当于Backspace删除键</span><br></pre></td></tr></table></figure></p>\n<p>每一个快捷键都有其适用场合，尤其是<code>Ctrl + L</code> 可以非常便捷的完成清屏的作用，慢慢体会吧。如果您发现了更多有趣的使用方法，欢迎分享。</p>\n<p>看一个真正的专家操作命令行绝对是一种很好的体验-光标在单词之间来回穿梭，命令行不同的滚动。在这里强烈建立适应GUI节目的开发者尝试一下在提示符下面工作。但是事情也不是那么简单，还是需要知道“如何去做”。在单词之间跳转，使用 <code>Ctrl + 左右键</code>。<code>Ctrl + a</code> 跳到本行的行首，<code>Ctrl + e</code> 则跳到页尾。<code>Ctrl + u</code> 删除当前光标前面的文字 <code>Ctrl + k</code> -删除当前光标后面的文字 <code>Ctrl + w</code> 和<code>Alt + d</code> 对于当前的单词进行删除操作，<code>w</code>删除光标前面的单词的字符，<code>d</code> 则删除后面的字符<code>Alt + Backsapce</code> 删除当前光标后面的单词，如果删除错误，使用<code>Ctrl + y</code> 进行恢复<code>Ctrl + L</code> 进行清屏操作。</p>\n"},{"title":"第一篇文章","comments":1,"date":"2018-08-20T07:48:52.000Z","updated":"2018-08-20T07:48:52.000Z","_content":"\n","source":"_posts/2018-08-20-第一篇文章.md","raw":"---\ntitle: 第一篇文章\ncomments: true\ndate: 2018-08-20 15:48:52\nupdated: 2018-08-20 15:48:52\ntags: Python\ncategories: life\n---\n\n","slug":"第一篇文章","published":1,"layout":"post","photos":[],"link":"","_id":"cjl4q6cej0006bwlrh41p72w2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Git 常用命令小结","comments":1,"date":"2018-08-22T01:23:26.000Z","updated":"2018-08-22T01:23:26.000Z","_content":"## 前言\n\n阅读本篇文章需要读者了解 Git 的基本用法，如果你对 Git 完全不了解，请先行移步了解 Git 基础。\n下面是几份本人觉得不错的 Git 入门教程，新手可以参考。\n- [Git权威指南](http://www.worldhello.net/gotgit/index.html) | 国内一位大牛写的介绍 Git 用法的开源书籍，很详实\n- [Pro Git](https://git-scm.com/book/zh/v2) | Git 官方社区编著的介绍 Git 用法的书籍\n\n#### 创建新分支，并且切换到新分支\n```bash\n> git checkout -b <new_branch_name> # 根据当前所在分支，创建新分支\n> git checkout -b <new_branch_name> <remote_name>/<remote_branch_name> # 根据远程分支，创建分支\n```\n#### 切换分支\n\n`> git checkout <branch_name>`\n\n#### 删除分支（本地/远程）\n\n```bash\n> git branch -d <branch_name> # 删除本地分支，当该分支没有关联远程分支或者关联的远程分支已经合并过，才会被允许删除\n> git branch -D <branch_name> # 强制删除本地分支\n> git push <remote_name> -d <branch_name> # 删除远程分支，git v1.7.0（2010年的版本）之后支持\n> git push <remote_name> :<branch_name> # 删除远程分支，旧方式，新的也兼容这种\n\n```\n\n分支重命名\n\n```bash\n> git branch (-m | -M) [<oldbranch>] <newbranch> # 重命名分支语法，-M 强制重命名，具体参见 git branch --help\n> git branch -m <newbranch> # 重命名当前分支\n> git branch -m <oldbranch> <newbranch> # 重命名指定分支\n\n```\n\n重写 commit 信息\n\n```bash\n> git rebase -i HEAD~<num> # 交互式地重写 commit 信息，将会用终端默认的编辑器进行操作\n\n下面的例子中，保存之后，将会使得[328f67b Update Rust]这一条合并到[f55b189 Update cookbook]\n\npick 164bf1c Update cookbook\npick f55b189 Update cookbook\nf 328f67b Update Rust\npick 9834843 Update cookbook\n\n# Rebase 0b6762c..9834843 onto 0b6762c (4 commands)\n#\n# Commands:\n# p, pick = use commit\n# r, reword = use commit, but edit the commit message\n# e, edit = use commit, but stop for amending\n# s, squash = use commit, but meld into previous commit\n# f, fixup = like \"squash\", but discard this commit's log message\n# x, exec = run command (the rest of the line) using shell\n# d, drop = remove commit\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\n\n```\n\n> 注意：最好不要重写公共的 commit 信息，这会给协作者带来不必要的困惑，推荐仅仅重写本地没有提交的 commit 信息。假设，你非得重写远程 commit 信息，请使用 git push -f 来强制更新远程代码。\n\n#### 从一个分支摘取 commit 到另一个分支\n\n```bash\n> git checkout <target-branch> # 切换到目标分支\n> git cherry-pick <commit_id> # 将源分支的 commit 摘取到目的分支中\n```\n\n#### 想要切换分支时，发现本地有一些写了一半的代码\n\n```bash\n> git stash # 将当前工作目录内容储藏\n> git stash --include-untracked # 如果新添加了文件，将其一并储藏\n> git stash pop # 将储藏的内容恢复到当前分支\n```\n\n#### 回版、撤销commit\n\n```bash\n> git reset --hard <commit_id> # 彻底回退到指定 commit\n```\n\n![img](726930-5079e6da8900d0e2.jpg) \n\n#### 丢弃本地新添加的文件\n\n`> git clean `\n\n#### 丢弃新的改动\n\n`> git checkout . # 注意末尾有个句号`\n\n## 参考资料\n\n- [Git权威指南](http://www.worldhello.net/gotgit/index.html) \n\n- [Pro Git](https://git-scm.com/book/zh/v2)\n\n- Git cheatsheet\n\n- 图解Git\n\n  \n\n转载：本文非原创转载[简书](https://www.jianshu.com/p/15e3a4873d1d)","source":"_posts/2018-08-22-Git-常用命令小结.md","raw":"---\ntitle: Git 常用命令小结\ncomments: true\ndate: 2018-08-22 09:23:26\nupdated: 2018-08-22 09:23:26\ntags: [Git,版本控制]\ncategories: \n- Program \n- Git\n---\n## 前言\n\n阅读本篇文章需要读者了解 Git 的基本用法，如果你对 Git 完全不了解，请先行移步了解 Git 基础。\n下面是几份本人觉得不错的 Git 入门教程，新手可以参考。\n- [Git权威指南](http://www.worldhello.net/gotgit/index.html) | 国内一位大牛写的介绍 Git 用法的开源书籍，很详实\n- [Pro Git](https://git-scm.com/book/zh/v2) | Git 官方社区编著的介绍 Git 用法的书籍\n\n#### 创建新分支，并且切换到新分支\n```bash\n> git checkout -b <new_branch_name> # 根据当前所在分支，创建新分支\n> git checkout -b <new_branch_name> <remote_name>/<remote_branch_name> # 根据远程分支，创建分支\n```\n#### 切换分支\n\n`> git checkout <branch_name>`\n\n#### 删除分支（本地/远程）\n\n```bash\n> git branch -d <branch_name> # 删除本地分支，当该分支没有关联远程分支或者关联的远程分支已经合并过，才会被允许删除\n> git branch -D <branch_name> # 强制删除本地分支\n> git push <remote_name> -d <branch_name> # 删除远程分支，git v1.7.0（2010年的版本）之后支持\n> git push <remote_name> :<branch_name> # 删除远程分支，旧方式，新的也兼容这种\n\n```\n\n分支重命名\n\n```bash\n> git branch (-m | -M) [<oldbranch>] <newbranch> # 重命名分支语法，-M 强制重命名，具体参见 git branch --help\n> git branch -m <newbranch> # 重命名当前分支\n> git branch -m <oldbranch> <newbranch> # 重命名指定分支\n\n```\n\n重写 commit 信息\n\n```bash\n> git rebase -i HEAD~<num> # 交互式地重写 commit 信息，将会用终端默认的编辑器进行操作\n\n下面的例子中，保存之后，将会使得[328f67b Update Rust]这一条合并到[f55b189 Update cookbook]\n\npick 164bf1c Update cookbook\npick f55b189 Update cookbook\nf 328f67b Update Rust\npick 9834843 Update cookbook\n\n# Rebase 0b6762c..9834843 onto 0b6762c (4 commands)\n#\n# Commands:\n# p, pick = use commit\n# r, reword = use commit, but edit the commit message\n# e, edit = use commit, but stop for amending\n# s, squash = use commit, but meld into previous commit\n# f, fixup = like \"squash\", but discard this commit's log message\n# x, exec = run command (the rest of the line) using shell\n# d, drop = remove commit\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\n\n```\n\n> 注意：最好不要重写公共的 commit 信息，这会给协作者带来不必要的困惑，推荐仅仅重写本地没有提交的 commit 信息。假设，你非得重写远程 commit 信息，请使用 git push -f 来强制更新远程代码。\n\n#### 从一个分支摘取 commit 到另一个分支\n\n```bash\n> git checkout <target-branch> # 切换到目标分支\n> git cherry-pick <commit_id> # 将源分支的 commit 摘取到目的分支中\n```\n\n#### 想要切换分支时，发现本地有一些写了一半的代码\n\n```bash\n> git stash # 将当前工作目录内容储藏\n> git stash --include-untracked # 如果新添加了文件，将其一并储藏\n> git stash pop # 将储藏的内容恢复到当前分支\n```\n\n#### 回版、撤销commit\n\n```bash\n> git reset --hard <commit_id> # 彻底回退到指定 commit\n```\n\n![img](726930-5079e6da8900d0e2.jpg) \n\n#### 丢弃本地新添加的文件\n\n`> git clean `\n\n#### 丢弃新的改动\n\n`> git checkout . # 注意末尾有个句号`\n\n## 参考资料\n\n- [Git权威指南](http://www.worldhello.net/gotgit/index.html) \n\n- [Pro Git](https://git-scm.com/book/zh/v2)\n\n- Git cheatsheet\n\n- 图解Git\n\n  \n\n转载：本文非原创转载[简书](https://www.jianshu.com/p/15e3a4873d1d)","slug":"Git-常用命令小结","published":1,"layout":"post","photos":[],"link":"","_id":"cjl4q6cel0008bwlryaz4pcta","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>阅读本篇文章需要读者了解 Git 的基本用法，如果你对 Git 完全不了解，请先行移步了解 Git 基础。<br>下面是几份本人觉得不错的 Git 入门教程，新手可以参考。</p>\n<ul>\n<li><a href=\"http://www.worldhello.net/gotgit/index.html\" target=\"_blank\" rel=\"noopener\">Git权威指南</a> | 国内一位大牛写的介绍 Git 用法的开源书籍，很详实</li>\n<li><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Pro Git</a> | Git 官方社区编著的介绍 Git 用法的书籍</li>\n</ul>\n<h4 id=\"创建新分支，并且切换到新分支\"><a href=\"#创建新分支，并且切换到新分支\" class=\"headerlink\" title=\"创建新分支，并且切换到新分支\"></a>创建新分支，并且切换到新分支</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout -b &lt;new_branch_name&gt; <span class=\"comment\"># 根据当前所在分支，创建新分支</span></span><br><span class=\"line\">&gt; git checkout -b &lt;new_branch_name&gt; &lt;remote_name&gt;/&lt;remote_branch_name&gt; <span class=\"comment\"># 根据远程分支，创建分支</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"切换分支\"><a href=\"#切换分支\" class=\"headerlink\" title=\"切换分支\"></a>切换分支</h4><p><code>&gt; git checkout &lt;branch_name&gt;</code></p>\n<h4 id=\"删除分支（本地-远程）\"><a href=\"#删除分支（本地-远程）\" class=\"headerlink\" title=\"删除分支（本地/远程）\"></a>删除分支（本地/远程）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch -d &lt;branch_name&gt; <span class=\"comment\"># 删除本地分支，当该分支没有关联远程分支或者关联的远程分支已经合并过，才会被允许删除</span></span><br><span class=\"line\">&gt; git branch -D &lt;branch_name&gt; <span class=\"comment\"># 强制删除本地分支</span></span><br><span class=\"line\">&gt; git push &lt;remote_name&gt; -d &lt;branch_name&gt; <span class=\"comment\"># 删除远程分支，git v1.7.0（2010年的版本）之后支持</span></span><br><span class=\"line\">&gt; git push &lt;remote_name&gt; :&lt;branch_name&gt; <span class=\"comment\"># 删除远程分支，旧方式，新的也兼容这种</span></span><br></pre></td></tr></table></figure>\n<p>分支重命名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch (-m | -M) [&lt;oldbranch&gt;] &lt;newbranch&gt; <span class=\"comment\"># 重命名分支语法，-M 强制重命名，具体参见 git branch --help</span></span><br><span class=\"line\">&gt; git branch -m &lt;newbranch&gt; <span class=\"comment\"># 重命名当前分支</span></span><br><span class=\"line\">&gt; git branch -m &lt;oldbranch&gt; &lt;newbranch&gt; <span class=\"comment\"># 重命名指定分支</span></span><br></pre></td></tr></table></figure>\n<p>重写 commit 信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git rebase -i HEAD~&lt;num&gt; <span class=\"comment\"># 交互式地重写 commit 信息，将会用终端默认的编辑器进行操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">下面的例子中，保存之后，将会使得[328f67b Update Rust]这一条合并到[f55b189 Update cookbook]</span><br><span class=\"line\"></span><br><span class=\"line\">pick 164bf1c Update cookbook</span><br><span class=\"line\">pick f55b189 Update cookbook</span><br><span class=\"line\">f 328f67b Update Rust</span><br><span class=\"line\">pick 9834843 Update cookbook</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Rebase 0b6762c..9834843 onto 0b6762c (4 commands)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Commands:</span></span><br><span class=\"line\"><span class=\"comment\"># p, pick = use commit</span></span><br><span class=\"line\"><span class=\"comment\"># r, reword = use commit, but edit the commit message</span></span><br><span class=\"line\"><span class=\"comment\"># e, edit = use commit, but stop for amending</span></span><br><span class=\"line\"><span class=\"comment\"># s, squash = use commit, but meld into previous commit</span></span><br><span class=\"line\"><span class=\"comment\"># f, fixup = like \"squash\", but discard this commit's log message</span></span><br><span class=\"line\"><span class=\"comment\"># x, exec = run command (the rest of the line) using shell</span></span><br><span class=\"line\"><span class=\"comment\"># d, drop = remove commit</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Note that empty commits are commented out</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：最好不要重写公共的 commit 信息，这会给协作者带来不必要的困惑，推荐仅仅重写本地没有提交的 commit 信息。假设，你非得重写远程 commit 信息，请使用 git push -f 来强制更新远程代码。</p>\n</blockquote>\n<h4 id=\"从一个分支摘取-commit-到另一个分支\"><a href=\"#从一个分支摘取-commit-到另一个分支\" class=\"headerlink\" title=\"从一个分支摘取 commit 到另一个分支\"></a>从一个分支摘取 commit 到另一个分支</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout &lt;target-branch&gt; <span class=\"comment\"># 切换到目标分支</span></span><br><span class=\"line\">&gt; git cherry-pick &lt;commit_id&gt; <span class=\"comment\"># 将源分支的 commit 摘取到目的分支中</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"想要切换分支时，发现本地有一些写了一半的代码\"><a href=\"#想要切换分支时，发现本地有一些写了一半的代码\" class=\"headerlink\" title=\"想要切换分支时，发现本地有一些写了一半的代码\"></a>想要切换分支时，发现本地有一些写了一半的代码</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git stash <span class=\"comment\"># 将当前工作目录内容储藏</span></span><br><span class=\"line\">&gt; git stash --include-untracked <span class=\"comment\"># 如果新添加了文件，将其一并储藏</span></span><br><span class=\"line\">&gt; git stash pop <span class=\"comment\"># 将储藏的内容恢复到当前分支</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"回版、撤销commit\"><a href=\"#回版、撤销commit\" class=\"headerlink\" title=\"回版、撤销commit\"></a>回版、撤销commit</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git reset --hard &lt;commit_id&gt; <span class=\"comment\"># 彻底回退到指定 commit</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"726930-5079e6da8900d0e2.jpg\" alt=\"img\"> </p>\n<h4 id=\"丢弃本地新添加的文件\"><a href=\"#丢弃本地新添加的文件\" class=\"headerlink\" title=\"丢弃本地新添加的文件\"></a>丢弃本地新添加的文件</h4><p><code>&gt; git clean</code></p>\n<h4 id=\"丢弃新的改动\"><a href=\"#丢弃新的改动\" class=\"headerlink\" title=\"丢弃新的改动\"></a>丢弃新的改动</h4><p><code>&gt; git checkout . # 注意末尾有个句号</code></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><p><a href=\"http://www.worldhello.net/gotgit/index.html\" target=\"_blank\" rel=\"noopener\">Git权威指南</a> </p>\n</li>\n<li><p><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n</li>\n<li><p>Git cheatsheet</p>\n</li>\n<li><p>图解Git</p>\n</li>\n</ul>\n<p>转载：本文非原创转载<a href=\"https://www.jianshu.com/p/15e3a4873d1d\" target=\"_blank\" rel=\"noopener\">简书</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>阅读本篇文章需要读者了解 Git 的基本用法，如果你对 Git 完全不了解，请先行移步了解 Git 基础。<br>下面是几份本人觉得不错的 Git 入门教程，新手可以参考。</p>\n<ul>\n<li><a href=\"http://www.worldhello.net/gotgit/index.html\" target=\"_blank\" rel=\"noopener\">Git权威指南</a> | 国内一位大牛写的介绍 Git 用法的开源书籍，很详实</li>\n<li><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Pro Git</a> | Git 官方社区编著的介绍 Git 用法的书籍</li>\n</ul>\n<h4 id=\"创建新分支，并且切换到新分支\"><a href=\"#创建新分支，并且切换到新分支\" class=\"headerlink\" title=\"创建新分支，并且切换到新分支\"></a>创建新分支，并且切换到新分支</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout -b &lt;new_branch_name&gt; <span class=\"comment\"># 根据当前所在分支，创建新分支</span></span><br><span class=\"line\">&gt; git checkout -b &lt;new_branch_name&gt; &lt;remote_name&gt;/&lt;remote_branch_name&gt; <span class=\"comment\"># 根据远程分支，创建分支</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"切换分支\"><a href=\"#切换分支\" class=\"headerlink\" title=\"切换分支\"></a>切换分支</h4><p><code>&gt; git checkout &lt;branch_name&gt;</code></p>\n<h4 id=\"删除分支（本地-远程）\"><a href=\"#删除分支（本地-远程）\" class=\"headerlink\" title=\"删除分支（本地/远程）\"></a>删除分支（本地/远程）</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch -d &lt;branch_name&gt; <span class=\"comment\"># 删除本地分支，当该分支没有关联远程分支或者关联的远程分支已经合并过，才会被允许删除</span></span><br><span class=\"line\">&gt; git branch -D &lt;branch_name&gt; <span class=\"comment\"># 强制删除本地分支</span></span><br><span class=\"line\">&gt; git push &lt;remote_name&gt; -d &lt;branch_name&gt; <span class=\"comment\"># 删除远程分支，git v1.7.0（2010年的版本）之后支持</span></span><br><span class=\"line\">&gt; git push &lt;remote_name&gt; :&lt;branch_name&gt; <span class=\"comment\"># 删除远程分支，旧方式，新的也兼容这种</span></span><br></pre></td></tr></table></figure>\n<p>分支重命名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch (-m | -M) [&lt;oldbranch&gt;] &lt;newbranch&gt; <span class=\"comment\"># 重命名分支语法，-M 强制重命名，具体参见 git branch --help</span></span><br><span class=\"line\">&gt; git branch -m &lt;newbranch&gt; <span class=\"comment\"># 重命名当前分支</span></span><br><span class=\"line\">&gt; git branch -m &lt;oldbranch&gt; &lt;newbranch&gt; <span class=\"comment\"># 重命名指定分支</span></span><br></pre></td></tr></table></figure>\n<p>重写 commit 信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git rebase -i HEAD~&lt;num&gt; <span class=\"comment\"># 交互式地重写 commit 信息，将会用终端默认的编辑器进行操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">下面的例子中，保存之后，将会使得[328f67b Update Rust]这一条合并到[f55b189 Update cookbook]</span><br><span class=\"line\"></span><br><span class=\"line\">pick 164bf1c Update cookbook</span><br><span class=\"line\">pick f55b189 Update cookbook</span><br><span class=\"line\">f 328f67b Update Rust</span><br><span class=\"line\">pick 9834843 Update cookbook</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Rebase 0b6762c..9834843 onto 0b6762c (4 commands)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Commands:</span></span><br><span class=\"line\"><span class=\"comment\"># p, pick = use commit</span></span><br><span class=\"line\"><span class=\"comment\"># r, reword = use commit, but edit the commit message</span></span><br><span class=\"line\"><span class=\"comment\"># e, edit = use commit, but stop for amending</span></span><br><span class=\"line\"><span class=\"comment\"># s, squash = use commit, but meld into previous commit</span></span><br><span class=\"line\"><span class=\"comment\"># f, fixup = like \"squash\", but discard this commit's log message</span></span><br><span class=\"line\"><span class=\"comment\"># x, exec = run command (the rest of the line) using shell</span></span><br><span class=\"line\"><span class=\"comment\"># d, drop = remove commit</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Note that empty commits are commented out</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：最好不要重写公共的 commit 信息，这会给协作者带来不必要的困惑，推荐仅仅重写本地没有提交的 commit 信息。假设，你非得重写远程 commit 信息，请使用 git push -f 来强制更新远程代码。</p>\n</blockquote>\n<h4 id=\"从一个分支摘取-commit-到另一个分支\"><a href=\"#从一个分支摘取-commit-到另一个分支\" class=\"headerlink\" title=\"从一个分支摘取 commit 到另一个分支\"></a>从一个分支摘取 commit 到另一个分支</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout &lt;target-branch&gt; <span class=\"comment\"># 切换到目标分支</span></span><br><span class=\"line\">&gt; git cherry-pick &lt;commit_id&gt; <span class=\"comment\"># 将源分支的 commit 摘取到目的分支中</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"想要切换分支时，发现本地有一些写了一半的代码\"><a href=\"#想要切换分支时，发现本地有一些写了一半的代码\" class=\"headerlink\" title=\"想要切换分支时，发现本地有一些写了一半的代码\"></a>想要切换分支时，发现本地有一些写了一半的代码</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git stash <span class=\"comment\"># 将当前工作目录内容储藏</span></span><br><span class=\"line\">&gt; git stash --include-untracked <span class=\"comment\"># 如果新添加了文件，将其一并储藏</span></span><br><span class=\"line\">&gt; git stash pop <span class=\"comment\"># 将储藏的内容恢复到当前分支</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"回版、撤销commit\"><a href=\"#回版、撤销commit\" class=\"headerlink\" title=\"回版、撤销commit\"></a>回版、撤销commit</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git reset --hard &lt;commit_id&gt; <span class=\"comment\"># 彻底回退到指定 commit</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"726930-5079e6da8900d0e2.jpg\" alt=\"img\"> </p>\n<h4 id=\"丢弃本地新添加的文件\"><a href=\"#丢弃本地新添加的文件\" class=\"headerlink\" title=\"丢弃本地新添加的文件\"></a>丢弃本地新添加的文件</h4><p><code>&gt; git clean</code></p>\n<h4 id=\"丢弃新的改动\"><a href=\"#丢弃新的改动\" class=\"headerlink\" title=\"丢弃新的改动\"></a>丢弃新的改动</h4><p><code>&gt; git checkout . # 注意末尾有个句号</code></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><p><a href=\"http://www.worldhello.net/gotgit/index.html\" target=\"_blank\" rel=\"noopener\">Git权威指南</a> </p>\n</li>\n<li><p><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Pro Git</a></p>\n</li>\n<li><p>Git cheatsheet</p>\n</li>\n<li><p>图解Git</p>\n</li>\n</ul>\n<p>转载：本文非原创转载<a href=\"https://www.jianshu.com/p/15e3a4873d1d\" target=\"_blank\" rel=\"noopener\">简书</a></p>\n"},{"title":"Winddows bat 基础","date":"2018-08-20T03:13:56.000Z","_content":"\n### bat语法\n\n```cmd\ncd  ./RptFile/%Today%\ndir /B /A-D .\\end.ok 2>nul | find /V /C \"\">D:/TT/count.txt\nset /P c=<D:/TT/count.txt\necho END.OK   %c%个\n```\n\n```cmd\n::此脚本用来统计目录下文件与文件夹个数 与wind属性相似。\n::把D:\\putty替换成统计目录\n\n@echo off&title limq @ BAT-GO  At:2010-09-19 12:23:59\nset Today=%Date:~0,4%%Date:~5,2%%Date:~8,2%\necho 今天是%Today%下面开始统计文件\necho 统计中~~~\nfor /f \"delims=\" %%a in ('dir /s/b/a-d D:\\putty ') do set/a a+=1\nfor /f \"delims=\" %%a in ('dir /s/b/ad  D:\\putty ') do set/a b+=1\nset /p=【D:\\putty 】文件夹内有 %b% 个文件夹， %a% 个文件，<nul&pause\n```\n例子1：\n`for /r %%i in (  ) do echo %%i`\n解释：\n如果在括号里的是一些无特殊意义的字符如\".\"  \"abc\"之类的， 那输出的%%i\n的值为遍历到的文件夹的绝对地址（地址带有\\号）后加上这些特殊字符。\n\n如果括号里的是含有通配符（* ？）的，那么不是像上边那样直接加在文件夹地址后了。含有通配符的字符串会被扩展成实际存在的文件名。\n比如 `for /r %%i in (1.t*t) do echo %%i` 这个代码将显示所有符合要求（比如 1.txt 1.tt 1.tst）的文件的绝对路径。\n\n\n\n例子2：\n`for /d /r %%i in ( ) do echo %%i`\n解释：\n第一种情况和上面相似，直接把字符加在路径后面。\n\n如果含有通配符的，那么它将显示所有的文件夹名符合通配规则的文件夹的绝对路径，同时去掉\\号。\n\nps：\n\n例子1的代码会把当前目录和子目录显示出来，而例子2只显示当前目录的子目录。\n例子1显示的结果可以看成是文件，而例子2显示的结果则应该看成是文件夹，因为有/d 的存在。\n如果输出的%%i格式达不到要求，还可以用%%~fi 之类的修正。","source":"_posts/bat基础.md","raw":"---\ntitle: Winddows bat 基础\ndate: 2018-08-20 11:13:56\ntags: [bat, Windows]\ncategories: \n- Program \n- bat\n---\n\n### bat语法\n\n```cmd\ncd  ./RptFile/%Today%\ndir /B /A-D .\\end.ok 2>nul | find /V /C \"\">D:/TT/count.txt\nset /P c=<D:/TT/count.txt\necho END.OK   %c%个\n```\n\n```cmd\n::此脚本用来统计目录下文件与文件夹个数 与wind属性相似。\n::把D:\\putty替换成统计目录\n\n@echo off&title limq @ BAT-GO  At:2010-09-19 12:23:59\nset Today=%Date:~0,4%%Date:~5,2%%Date:~8,2%\necho 今天是%Today%下面开始统计文件\necho 统计中~~~\nfor /f \"delims=\" %%a in ('dir /s/b/a-d D:\\putty ') do set/a a+=1\nfor /f \"delims=\" %%a in ('dir /s/b/ad  D:\\putty ') do set/a b+=1\nset /p=【D:\\putty 】文件夹内有 %b% 个文件夹， %a% 个文件，<nul&pause\n```\n例子1：\n`for /r %%i in (  ) do echo %%i`\n解释：\n如果在括号里的是一些无特殊意义的字符如\".\"  \"abc\"之类的， 那输出的%%i\n的值为遍历到的文件夹的绝对地址（地址带有\\号）后加上这些特殊字符。\n\n如果括号里的是含有通配符（* ？）的，那么不是像上边那样直接加在文件夹地址后了。含有通配符的字符串会被扩展成实际存在的文件名。\n比如 `for /r %%i in (1.t*t) do echo %%i` 这个代码将显示所有符合要求（比如 1.txt 1.tt 1.tst）的文件的绝对路径。\n\n\n\n例子2：\n`for /d /r %%i in ( ) do echo %%i`\n解释：\n第一种情况和上面相似，直接把字符加在路径后面。\n\n如果含有通配符的，那么它将显示所有的文件夹名符合通配规则的文件夹的绝对路径，同时去掉\\号。\n\nps：\n\n例子1的代码会把当前目录和子目录显示出来，而例子2只显示当前目录的子目录。\n例子1显示的结果可以看成是文件，而例子2显示的结果则应该看成是文件夹，因为有/d 的存在。\n如果输出的%%i格式达不到要求，还可以用%%~fi 之类的修正。","slug":"bat基础","published":1,"updated":"2018-08-22T01:54:04.585Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl4q6cem0009bwlr34lxnknu","content":"<h3 id=\"bat语法\"><a href=\"#bat语法\" class=\"headerlink\" title=\"bat语法\"></a>bat语法</h3><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span>  ./RptFile/<span class=\"variable\">%Today%</span></span><br><span class=\"line\"><span class=\"built_in\">dir</span> /B /A-D .\\end.ok <span class=\"number\">2</span>&gt;<span class=\"built_in\">nul</span> | <span class=\"built_in\">find</span> /V /C \"\"&gt;D:/TT/count.txt</span><br><span class=\"line\"><span class=\"built_in\">set</span> /P c=&lt;D:/TT/count.txt</span><br><span class=\"line\"><span class=\"built_in\">echo</span> END.OK   <span class=\"variable\">%c%</span>个</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::此脚本用来统计目录下文件与文件夹个数 与wind属性相似。</span><br><span class=\"line\">::把D:\\putty替换成统计目录</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"built_in\">echo</span> off&amp;<span class=\"built_in\">title</span> limq @ BAT-GO  <span class=\"built_in\">At</span>:<span class=\"number\">2010</span>-<span class=\"number\">09</span>-<span class=\"number\">19</span> <span class=\"number\">12</span>:<span class=\"number\">23</span>:<span class=\"number\">59</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> Today=<span class=\"variable\">%Date:~0,4%</span><span class=\"variable\">%Date:~5,2%</span><span class=\"variable\">%Date:~8,2%</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 今天是<span class=\"variable\">%Today%</span>下面开始统计文件</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 统计中~~~</span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"delims=\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">dir</span> /s/b/a-d D:\\putty ') <span class=\"keyword\">do</span> <span class=\"built_in\">set</span>/a a+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"delims=\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">dir</span> /s/b/ad  D:\\putty ') <span class=\"keyword\">do</span> <span class=\"built_in\">set</span>/a b+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> /p=【D:\\putty 】文件夹内有 <span class=\"variable\">%b%</span> 个文件夹， <span class=\"variable\">%a%</span> 个文件，&lt;<span class=\"built_in\">nul</span>&amp;<span class=\"built_in\">pause</span></span><br></pre></td></tr></table></figure>\n<p>例子1：<br><code>for /r %%i in (  ) do echo %%i</code><br>解释：<br>如果在括号里的是一些无特殊意义的字符如”.”  “abc”之类的， 那输出的%%i<br>的值为遍历到的文件夹的绝对地址（地址带有\\号）后加上这些特殊字符。</p>\n<p>如果括号里的是含有通配符（<em> ？）的，那么不是像上边那样直接加在文件夹地址后了。含有通配符的字符串会被扩展成实际存在的文件名。<br>比如 `for /r %%i in (1.t</em>t) do echo %%i` 这个代码将显示所有符合要求（比如 1.txt 1.tt 1.tst）的文件的绝对路径。</p>\n<p>例子2：<br><code>for /d /r %%i in ( ) do echo %%i</code><br>解释：<br>第一种情况和上面相似，直接把字符加在路径后面。</p>\n<p>如果含有通配符的，那么它将显示所有的文件夹名符合通配规则的文件夹的绝对路径，同时去掉\\号。</p>\n<p>ps：</p>\n<p>例子1的代码会把当前目录和子目录显示出来，而例子2只显示当前目录的子目录。<br>例子1显示的结果可以看成是文件，而例子2显示的结果则应该看成是文件夹，因为有/d 的存在。<br>如果输出的%%i格式达不到要求，还可以用%%~fi 之类的修正。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"bat语法\"><a href=\"#bat语法\" class=\"headerlink\" title=\"bat语法\"></a>bat语法</h3><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span>  ./RptFile/<span class=\"variable\">%Today%</span></span><br><span class=\"line\"><span class=\"built_in\">dir</span> /B /A-D .\\end.ok <span class=\"number\">2</span>&gt;<span class=\"built_in\">nul</span> | <span class=\"built_in\">find</span> /V /C \"\"&gt;D:/TT/count.txt</span><br><span class=\"line\"><span class=\"built_in\">set</span> /P c=&lt;D:/TT/count.txt</span><br><span class=\"line\"><span class=\"built_in\">echo</span> END.OK   <span class=\"variable\">%c%</span>个</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::此脚本用来统计目录下文件与文件夹个数 与wind属性相似。</span><br><span class=\"line\">::把D:\\putty替换成统计目录</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"built_in\">echo</span> off&amp;<span class=\"built_in\">title</span> limq @ BAT-GO  <span class=\"built_in\">At</span>:<span class=\"number\">2010</span>-<span class=\"number\">09</span>-<span class=\"number\">19</span> <span class=\"number\">12</span>:<span class=\"number\">23</span>:<span class=\"number\">59</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> Today=<span class=\"variable\">%Date:~0,4%</span><span class=\"variable\">%Date:~5,2%</span><span class=\"variable\">%Date:~8,2%</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 今天是<span class=\"variable\">%Today%</span>下面开始统计文件</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 统计中~~~</span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"delims=\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">dir</span> /s/b/a-d D:\\putty ') <span class=\"keyword\">do</span> <span class=\"built_in\">set</span>/a a+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"delims=\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">dir</span> /s/b/ad  D:\\putty ') <span class=\"keyword\">do</span> <span class=\"built_in\">set</span>/a b+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> /p=【D:\\putty 】文件夹内有 <span class=\"variable\">%b%</span> 个文件夹， <span class=\"variable\">%a%</span> 个文件，&lt;<span class=\"built_in\">nul</span>&amp;<span class=\"built_in\">pause</span></span><br></pre></td></tr></table></figure>\n<p>例子1：<br><code>for /r %%i in (  ) do echo %%i</code><br>解释：<br>如果在括号里的是一些无特殊意义的字符如”.”  “abc”之类的， 那输出的%%i<br>的值为遍历到的文件夹的绝对地址（地址带有\\号）后加上这些特殊字符。</p>\n<p>如果括号里的是含有通配符（<em> ？）的，那么不是像上边那样直接加在文件夹地址后了。含有通配符的字符串会被扩展成实际存在的文件名。<br>比如 `for /r %%i in (1.t</em>t) do echo %%i` 这个代码将显示所有符合要求（比如 1.txt 1.tt 1.tst）的文件的绝对路径。</p>\n<p>例子2：<br><code>for /d /r %%i in ( ) do echo %%i</code><br>解释：<br>第一种情况和上面相似，直接把字符加在路径后面。</p>\n<p>如果含有通配符的，那么它将显示所有的文件夹名符合通配规则的文件夹的绝对路径，同时去掉\\号。</p>\n<p>ps：</p>\n<p>例子1的代码会把当前目录和子目录显示出来，而例子2只显示当前目录的子目录。<br>例子1显示的结果可以看成是文件，而例子2显示的结果则应该看成是文件夹，因为有/d 的存在。<br>如果输出的%%i格式达不到要求，还可以用%%~fi 之类的修正。</p>\n"},{"title":"git配置命令","date":"2018-08-20T03:13:56.000Z","_content":"\n### git配置\n```bash\ngit config --global user.name \"limq-debianvm-home\"\ngit config --global user.email \"gylimingqi@163.com\"\ngit config --global push.default simple\ngit remote add origin git@github.com:dadiqq/nework-git.git\ngit remote add origin_soft  git@github.com:dadiqq/software.git\ngit config --global user.name \"debian\"\ngit config --global user.email \"gylimingqi@163.com\"\n### git config --global push.default simple\n[root@ora11g ~]# mkdir .ssh\n[root@ora11g ~]# cd .ssh/\n //用ssh-keygen命令来生成密钥对，passphrase我们输入或不输入都行。\n[root@ora11g .ssh]# ssh-keygen -t rsa -C \"gylimigqi@163.com\"\n[root@ora11g etl]# echo 'unset SSH_ASKPASS' >> ~/.bashrc && source ~/.bashrc\ngit remote add origin git@github.com:dadiqq/nework-git.git\ngit remote add origin_soft  git@github.com:dadiqq/software.git\ngit remote add origin  git@github.com:dadiqq/VFP.git\ngit clone https://github.com/dadiqq/nework-git.git\ngit clone https://github.com/dadiqq/VFP.git\n\n```\n\n### 设置github上的公钥\n#### 步骤如下：\n\n​    a. 登陆github后 -> \"Account Setting\" -> \"SSH Keys\"\n    b. \"Add SSH Key\"\n    c. Title随便填写一个，Key那里我们把把id_rsa.pub里的内容拷贝进去。\n\n#### 上传 \n```bash\n env GIT_SSL_NO_VERIFY=true git push\n[root@ora11g etl]# echo 'unset SSH_ASKPASS' >> ~/.bashrc && source ~/.bashrc   \n查看远程库\nenv GIT_SSL_NO_VERIFY=true  git remote show origin\n下载\nenv GIT_SSL_NO_VERIFY=true   git clone https://github.com/dadiqq/nework-git.git\nhttps://github.com/dadiqq/nework-git.git  \n git clone  git@github.com:dadiqq/nework-git.git\ngit remote add origin  git@github.com:dadiqq/nework-git.git\ngit clone --no-checkout https://github.com/dadiqq/nework-git.git tmp\nmv tmp/.git   ./nework-git/.git\nrmdir tmp\ncd nework-git\ngit reset --hard HEAD\ngit push -u origin master\ncurl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt\n```\n#### 测试 \n\nssh -T git@github.com\n工作的时候经常需要在各个目录之间跳转，可以通过环境变量对目录进行缩写，方便地在多个目录直接切换。\n在 ~/.bashrc 添加：\n\nexport wd=\"/d/Projects/MyProject/git\"\nexport doc=\"/d/Projects/documents/\"\n\n下面来验证以上的说法。\n创建一个空的项目，\n```bash\n$ mkdir project\n$ cd project\n$ git init\n$ vi  readme    # 添加一行文字并保存，比如“1111”\n$ git add readme\n$ git commit -m \"1st commit\"\n\n此时来看仓库中的对象目录\n\n$ tree .git/objects/\n```\n### 如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：\n\n`fatal: destination path '.' already exists and is not an empty directory.`\n\n#### 解决的办法是：\n```bash\n1. 进入非空目录，假设是 /workdir/proj1\n2. git clone --no-checkout https://git.oschina.net/NextApp/platform.git tmp\n3. mv tmp/.git .   #将 tmp 目录下的 .git 目录移到当前目录\n4. rmdir tmp\n5. git reset --hard HEAD\n```\n然后就可以进行各种正常操作了。\n\n#### 第二方案\n```bash\n\t1. \nls -a  \n\t2. \nrm .git/ -rf \n\n```\n\n\n- [ ] 跑步\n- [ ] 写博客\n- [ ] 学习\n","source":"_posts/git配置命令.md","raw":"---\ntitle: git配置命令\ndate: 2018-08-20 11:13:56\ntags: Python\ncategories: life\n---\n\n### git配置\n```bash\ngit config --global user.name \"limq-debianvm-home\"\ngit config --global user.email \"gylimingqi@163.com\"\ngit config --global push.default simple\ngit remote add origin git@github.com:dadiqq/nework-git.git\ngit remote add origin_soft  git@github.com:dadiqq/software.git\ngit config --global user.name \"debian\"\ngit config --global user.email \"gylimingqi@163.com\"\n### git config --global push.default simple\n[root@ora11g ~]# mkdir .ssh\n[root@ora11g ~]# cd .ssh/\n //用ssh-keygen命令来生成密钥对，passphrase我们输入或不输入都行。\n[root@ora11g .ssh]# ssh-keygen -t rsa -C \"gylimigqi@163.com\"\n[root@ora11g etl]# echo 'unset SSH_ASKPASS' >> ~/.bashrc && source ~/.bashrc\ngit remote add origin git@github.com:dadiqq/nework-git.git\ngit remote add origin_soft  git@github.com:dadiqq/software.git\ngit remote add origin  git@github.com:dadiqq/VFP.git\ngit clone https://github.com/dadiqq/nework-git.git\ngit clone https://github.com/dadiqq/VFP.git\n\n```\n\n### 设置github上的公钥\n#### 步骤如下：\n\n​    a. 登陆github后 -> \"Account Setting\" -> \"SSH Keys\"\n    b. \"Add SSH Key\"\n    c. Title随便填写一个，Key那里我们把把id_rsa.pub里的内容拷贝进去。\n\n#### 上传 \n```bash\n env GIT_SSL_NO_VERIFY=true git push\n[root@ora11g etl]# echo 'unset SSH_ASKPASS' >> ~/.bashrc && source ~/.bashrc   \n查看远程库\nenv GIT_SSL_NO_VERIFY=true  git remote show origin\n下载\nenv GIT_SSL_NO_VERIFY=true   git clone https://github.com/dadiqq/nework-git.git\nhttps://github.com/dadiqq/nework-git.git  \n git clone  git@github.com:dadiqq/nework-git.git\ngit remote add origin  git@github.com:dadiqq/nework-git.git\ngit clone --no-checkout https://github.com/dadiqq/nework-git.git tmp\nmv tmp/.git   ./nework-git/.git\nrmdir tmp\ncd nework-git\ngit reset --hard HEAD\ngit push -u origin master\ncurl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt\n```\n#### 测试 \n\nssh -T git@github.com\n工作的时候经常需要在各个目录之间跳转，可以通过环境变量对目录进行缩写，方便地在多个目录直接切换。\n在 ~/.bashrc 添加：\n\nexport wd=\"/d/Projects/MyProject/git\"\nexport doc=\"/d/Projects/documents/\"\n\n下面来验证以上的说法。\n创建一个空的项目，\n```bash\n$ mkdir project\n$ cd project\n$ git init\n$ vi  readme    # 添加一行文字并保存，比如“1111”\n$ git add readme\n$ git commit -m \"1st commit\"\n\n此时来看仓库中的对象目录\n\n$ tree .git/objects/\n```\n### 如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：\n\n`fatal: destination path '.' already exists and is not an empty directory.`\n\n#### 解决的办法是：\n```bash\n1. 进入非空目录，假设是 /workdir/proj1\n2. git clone --no-checkout https://git.oschina.net/NextApp/platform.git tmp\n3. mv tmp/.git .   #将 tmp 目录下的 .git 目录移到当前目录\n4. rmdir tmp\n5. git reset --hard HEAD\n```\n然后就可以进行各种正常操作了。\n\n#### 第二方案\n```bash\n\t1. \nls -a  \n\t2. \nrm .git/ -rf \n\n```\n\n\n- [ ] 跑步\n- [ ] 写博客\n- [ ] 学习\n","slug":"git配置命令","published":1,"updated":"2018-08-22T00:31:21.170Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl4q6ceq000bbwlr4wkp4k89","content":"<h3 id=\"git配置\"><a href=\"#git配置\" class=\"headerlink\" title=\"git配置\"></a>git配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"limq-debianvm-home\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"gylimingqi@163.com\"</span></span><br><span class=\"line\">git config --global push.default simple</span><br><span class=\"line\">git remote add origin git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git remote add origin_soft  git@github.com:dadiqq/software.git</span><br><span class=\"line\">git config --global user.name <span class=\"string\">\"debian\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"gylimingqi@163.com\"</span></span><br><span class=\"line\"><span class=\"comment\">### git config --global push.default simple</span></span><br><span class=\"line\">[root@ora11g ~]<span class=\"comment\"># mkdir .ssh</span></span><br><span class=\"line\">[root@ora11g ~]<span class=\"comment\"># cd .ssh/</span></span><br><span class=\"line\"> //用ssh-keygen命令来生成密钥对，passphrase我们输入或不输入都行。</span><br><span class=\"line\">[root@ora11g .ssh]<span class=\"comment\"># ssh-keygen -t rsa -C \"gylimigqi@163.com\"</span></span><br><span class=\"line\">[root@ora11g etl]<span class=\"comment\"># echo 'unset SSH_ASKPASS' &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc</span></span><br><span class=\"line\">git remote add origin git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git remote add origin_soft  git@github.com:dadiqq/software.git</span><br><span class=\"line\">git remote add origin  git@github.com:dadiqq/VFP.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/nework-git.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/VFP.git</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置github上的公钥\"><a href=\"#设置github上的公钥\" class=\"headerlink\" title=\"设置github上的公钥\"></a>设置github上的公钥</h3><h4 id=\"步骤如下：\"><a href=\"#步骤如下：\" class=\"headerlink\" title=\"步骤如下：\"></a>步骤如下：</h4><p>​    a. 登陆github后 -&gt; “Account Setting” -&gt; “SSH Keys”<br>    b. “Add SSH Key”<br>    c. Title随便填写一个，Key那里我们把把id_rsa.pub里的内容拷贝进去。</p>\n<h4 id=\"上传\"><a href=\"#上传\" class=\"headerlink\" title=\"上传\"></a>上传</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span> git push</span><br><span class=\"line\">[root@ora11g etl]<span class=\"comment\"># echo 'unset SSH_ASKPASS' &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc   </span></span><br><span class=\"line\">查看远程库</span><br><span class=\"line\">env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span>  git remote show origin</span><br><span class=\"line\">下载</span><br><span class=\"line\">env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span>   git <span class=\"built_in\">clone</span> https://github.com/dadiqq/nework-git.git</span><br><span class=\"line\">https://github.com/dadiqq/nework-git.git  </span><br><span class=\"line\"> git <span class=\"built_in\">clone</span>  git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git remote add origin  git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --no-checkout https://github.com/dadiqq/nework-git.git tmp</span><br><span class=\"line\">mv tmp/.git   ./nework-git/.git</span><br><span class=\"line\">rmdir tmp</span><br><span class=\"line\"><span class=\"built_in\">cd</span> nework-git</span><br><span class=\"line\">git reset --hard HEAD</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\">curl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>ssh -T <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a><br>工作的时候经常需要在各个目录之间跳转，可以通过环境变量对目录进行缩写，方便地在多个目录直接切换。<br>在 ~/.bashrc 添加：</p>\n<p>export wd=”/d/Projects/MyProject/git”<br>export doc=”/d/Projects/documents/“</p>\n<p>下面来验证以上的说法。<br>创建一个空的项目，<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir project</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> project</span><br><span class=\"line\">$ git init</span><br><span class=\"line\">$ vi  readme    <span class=\"comment\"># 添加一行文字并保存，比如“1111”</span></span><br><span class=\"line\">$ git add readme</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"1st commit\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">此时来看仓库中的对象目录</span><br><span class=\"line\"></span><br><span class=\"line\">$ tree .git/objects/</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"如果我们往一个非空的目录下-clone-git-项目，就会提示错误信息：\"><a href=\"#如果我们往一个非空的目录下-clone-git-项目，就会提示错误信息：\" class=\"headerlink\" title=\"如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：\"></a>如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：</h3><p><code>fatal: destination path &#39;.&#39; already exists and is not an empty directory.</code></p>\n<h4 id=\"解决的办法是：\"><a href=\"#解决的办法是：\" class=\"headerlink\" title=\"解决的办法是：\"></a>解决的办法是：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 进入非空目录，假设是 /workdir/proj1</span><br><span class=\"line\">2. git <span class=\"built_in\">clone</span> --no-checkout https://git.oschina.net/NextApp/platform.git tmp</span><br><span class=\"line\">3. mv tmp/.git .   <span class=\"comment\">#将 tmp 目录下的 .git 目录移到当前目录</span></span><br><span class=\"line\">4. rmdir tmp</span><br><span class=\"line\">5. git reset --hard HEAD</span><br></pre></td></tr></table></figure>\n<p>然后就可以进行各种正常操作了。</p>\n<h4 id=\"第二方案\"><a href=\"#第二方案\" class=\"headerlink\" title=\"第二方案\"></a>第二方案</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t1. </span><br><span class=\"line\">ls -a  </span><br><span class=\"line\">\t2. </span><br><span class=\"line\">rm .git/ -rf</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 跑步</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 写博客</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 学习</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"git配置\"><a href=\"#git配置\" class=\"headerlink\" title=\"git配置\"></a>git配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"limq-debianvm-home\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"gylimingqi@163.com\"</span></span><br><span class=\"line\">git config --global push.default simple</span><br><span class=\"line\">git remote add origin git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git remote add origin_soft  git@github.com:dadiqq/software.git</span><br><span class=\"line\">git config --global user.name <span class=\"string\">\"debian\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"gylimingqi@163.com\"</span></span><br><span class=\"line\"><span class=\"comment\">### git config --global push.default simple</span></span><br><span class=\"line\">[root@ora11g ~]<span class=\"comment\"># mkdir .ssh</span></span><br><span class=\"line\">[root@ora11g ~]<span class=\"comment\"># cd .ssh/</span></span><br><span class=\"line\"> //用ssh-keygen命令来生成密钥对，passphrase我们输入或不输入都行。</span><br><span class=\"line\">[root@ora11g .ssh]<span class=\"comment\"># ssh-keygen -t rsa -C \"gylimigqi@163.com\"</span></span><br><span class=\"line\">[root@ora11g etl]<span class=\"comment\"># echo 'unset SSH_ASKPASS' &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc</span></span><br><span class=\"line\">git remote add origin git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git remote add origin_soft  git@github.com:dadiqq/software.git</span><br><span class=\"line\">git remote add origin  git@github.com:dadiqq/VFP.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/nework-git.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/dadiqq/VFP.git</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置github上的公钥\"><a href=\"#设置github上的公钥\" class=\"headerlink\" title=\"设置github上的公钥\"></a>设置github上的公钥</h3><h4 id=\"步骤如下：\"><a href=\"#步骤如下：\" class=\"headerlink\" title=\"步骤如下：\"></a>步骤如下：</h4><p>​    a. 登陆github后 -&gt; “Account Setting” -&gt; “SSH Keys”<br>    b. “Add SSH Key”<br>    c. Title随便填写一个，Key那里我们把把id_rsa.pub里的内容拷贝进去。</p>\n<h4 id=\"上传\"><a href=\"#上传\" class=\"headerlink\" title=\"上传\"></a>上传</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span> git push</span><br><span class=\"line\">[root@ora11g etl]<span class=\"comment\"># echo 'unset SSH_ASKPASS' &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc   </span></span><br><span class=\"line\">查看远程库</span><br><span class=\"line\">env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span>  git remote show origin</span><br><span class=\"line\">下载</span><br><span class=\"line\">env GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span>   git <span class=\"built_in\">clone</span> https://github.com/dadiqq/nework-git.git</span><br><span class=\"line\">https://github.com/dadiqq/nework-git.git  </span><br><span class=\"line\"> git <span class=\"built_in\">clone</span>  git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git remote add origin  git@github.com:dadiqq/nework-git.git</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --no-checkout https://github.com/dadiqq/nework-git.git tmp</span><br><span class=\"line\">mv tmp/.git   ./nework-git/.git</span><br><span class=\"line\">rmdir tmp</span><br><span class=\"line\"><span class=\"built_in\">cd</span> nework-git</span><br><span class=\"line\">git reset --hard HEAD</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\">curl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>ssh -T <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a><br>工作的时候经常需要在各个目录之间跳转，可以通过环境变量对目录进行缩写，方便地在多个目录直接切换。<br>在 ~/.bashrc 添加：</p>\n<p>export wd=”/d/Projects/MyProject/git”<br>export doc=”/d/Projects/documents/“</p>\n<p>下面来验证以上的说法。<br>创建一个空的项目，<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir project</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> project</span><br><span class=\"line\">$ git init</span><br><span class=\"line\">$ vi  readme    <span class=\"comment\"># 添加一行文字并保存，比如“1111”</span></span><br><span class=\"line\">$ git add readme</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"1st commit\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">此时来看仓库中的对象目录</span><br><span class=\"line\"></span><br><span class=\"line\">$ tree .git/objects/</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"如果我们往一个非空的目录下-clone-git-项目，就会提示错误信息：\"><a href=\"#如果我们往一个非空的目录下-clone-git-项目，就会提示错误信息：\" class=\"headerlink\" title=\"如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：\"></a>如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：</h3><p><code>fatal: destination path &#39;.&#39; already exists and is not an empty directory.</code></p>\n<h4 id=\"解决的办法是：\"><a href=\"#解决的办法是：\" class=\"headerlink\" title=\"解决的办法是：\"></a>解决的办法是：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 进入非空目录，假设是 /workdir/proj1</span><br><span class=\"line\">2. git <span class=\"built_in\">clone</span> --no-checkout https://git.oschina.net/NextApp/platform.git tmp</span><br><span class=\"line\">3. mv tmp/.git .   <span class=\"comment\">#将 tmp 目录下的 .git 目录移到当前目录</span></span><br><span class=\"line\">4. rmdir tmp</span><br><span class=\"line\">5. git reset --hard HEAD</span><br></pre></td></tr></table></figure>\n<p>然后就可以进行各种正常操作了。</p>\n<h4 id=\"第二方案\"><a href=\"#第二方案\" class=\"headerlink\" title=\"第二方案\"></a>第二方案</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t1. </span><br><span class=\"line\">ls -a  </span><br><span class=\"line\">\t2. </span><br><span class=\"line\">rm .git/ -rf</span><br></pre></td></tr></table></figure>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 跑步</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 写博客</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> 学习</li>\n</ul>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-08-22T00:31:21.170Z","updated":"2018-08-22T00:31:21.170Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl4q6cet000ebwlrag52i5dp","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"test","date":"2018-08-20T02:08:41.000Z","_content":"# 李白\n\n目录（在这里设置锚点）\n\n[01. 早发白帝城](#早发白帝城)\n\n[02. 赠汪伦](#赠汪伦)\n\n[03. 望庐山瀑布](#望庐山瀑布)\n\n## 早发白帝城\n\n​\t朝辞白帝彩云间，\n\n​\t千里江陵一日还。\n\n​\t两岸猿声啼不住，\n\n​\t轻舟已过万重山。\n\n\n\n## 赠汪伦\n\n​\t\n\n​\t李白乘舟将欲行，\n\n​\t忽闻岸上踏歌声。\n\n​\t桃花潭水深千尺，\n\n​\t不及汪伦送我情。\n\n\n\n## 望庐山瀑布\n\n​\t日照香炉生紫烟，\n\t\n​\t遥看瀑布挂前川。\n\t\n​\t飞流直下三千尺，\n\t\n​\t疑是银行落九天。\n\n","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2018-08-20 10:08:41\ntags: test\ncategories: life\n---\n# 李白\n\n目录（在这里设置锚点）\n\n[01. 早发白帝城](#早发白帝城)\n\n[02. 赠汪伦](#赠汪伦)\n\n[03. 望庐山瀑布](#望庐山瀑布)\n\n## 早发白帝城\n\n​\t朝辞白帝彩云间，\n\n​\t千里江陵一日还。\n\n​\t两岸猿声啼不住，\n\n​\t轻舟已过万重山。\n\n\n\n## 赠汪伦\n\n​\t\n\n​\t李白乘舟将欲行，\n\n​\t忽闻岸上踏歌声。\n\n​\t桃花潭水深千尺，\n\n​\t不及汪伦送我情。\n\n\n\n## 望庐山瀑布\n\n​\t日照香炉生紫烟，\n\t\n​\t遥看瀑布挂前川。\n\t\n​\t飞流直下三千尺，\n\t\n​\t疑是银行落九天。\n\n","slug":"test","published":1,"updated":"2018-08-22T00:31:21.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl4q6cev000gbwlr7f5f76b2","content":"<h1 id=\"李白\"><a href=\"#李白\" class=\"headerlink\" title=\"李白\"></a>李白</h1><p>目录（在这里设置锚点）</p>\n<p><a href=\"#早发白帝城\">01. 早发白帝城</a></p>\n<p><a href=\"#赠汪伦\">02. 赠汪伦</a></p>\n<p><a href=\"#望庐山瀑布\">03. 望庐山瀑布</a></p>\n<h2 id=\"早发白帝城\"><a href=\"#早发白帝城\" class=\"headerlink\" title=\"早发白帝城\"></a>早发白帝城</h2><p>​    朝辞白帝彩云间，</p>\n<p>​    千里江陵一日还。</p>\n<p>​    两岸猿声啼不住，</p>\n<p>​    轻舟已过万重山。</p>\n<h2 id=\"赠汪伦\"><a href=\"#赠汪伦\" class=\"headerlink\" title=\"赠汪伦\"></a>赠汪伦</h2><p>​    </p>\n<p>​    李白乘舟将欲行，</p>\n<p>​    忽闻岸上踏歌声。</p>\n<p>​    桃花潭水深千尺，</p>\n<p>​    不及汪伦送我情。</p>\n<h2 id=\"望庐山瀑布\"><a href=\"#望庐山瀑布\" class=\"headerlink\" title=\"望庐山瀑布\"></a>望庐山瀑布</h2><p>​    日照香炉生紫烟，</p>\n<p>​    遥看瀑布挂前川。</p>\n<p>​    飞流直下三千尺，</p>\n<p>​    疑是银行落九天。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"李白\"><a href=\"#李白\" class=\"headerlink\" title=\"李白\"></a>李白</h1><p>目录（在这里设置锚点）</p>\n<p><a href=\"#早发白帝城\">01. 早发白帝城</a></p>\n<p><a href=\"#赠汪伦\">02. 赠汪伦</a></p>\n<p><a href=\"#望庐山瀑布\">03. 望庐山瀑布</a></p>\n<h2 id=\"早发白帝城\"><a href=\"#早发白帝城\" class=\"headerlink\" title=\"早发白帝城\"></a>早发白帝城</h2><p>​    朝辞白帝彩云间，</p>\n<p>​    千里江陵一日还。</p>\n<p>​    两岸猿声啼不住，</p>\n<p>​    轻舟已过万重山。</p>\n<h2 id=\"赠汪伦\"><a href=\"#赠汪伦\" class=\"headerlink\" title=\"赠汪伦\"></a>赠汪伦</h2><p>​    </p>\n<p>​    李白乘舟将欲行，</p>\n<p>​    忽闻岸上踏歌声。</p>\n<p>​    桃花潭水深千尺，</p>\n<p>​    不及汪伦送我情。</p>\n<h2 id=\"望庐山瀑布\"><a href=\"#望庐山瀑布\" class=\"headerlink\" title=\"望庐山瀑布\"></a>望庐山瀑布</h2><p>​    日照香炉生紫烟，</p>\n<p>​    遥看瀑布挂前川。</p>\n<p>​    飞流直下三千尺，</p>\n<p>​    疑是银行落九天。</p>\n"},{"title":"用 Hexo + Github 搭建属于自己的博客","date":"2018-08-20T03:13:56.000Z","_content":"\n最近几天一直想做一个自己的博客，把学习过的技术看过的文章都整理起来，花了几天的时间[博客](limqvip.github.io)初步搭建完成，看了很多大佬文章，但是自己搭建还是遇到很多坑，下面就写写搭建过程。希望对看到的人有帮助。\n\n本文主要介绍 Windows 7 x64 下 Hexo: 3.7.1 + GitHub 搭建（不同的 Hexo 版本，有的设置可能会有差异）。\n\n## 搭建环境\n\n#### \t1. 安装 git\n\n可以到 [git](https://git-scm.com/download/win) 官网下载相应平台版本进行安装。\n\n#### \t2. 申请 GitHub 账号\n\n进入 [GitHub ](https://link.jianshu.com/?t=https://github.com/) 注册。注册过程略。\n\n#### \t3. 安装 node.js\n\n到 [node.js](https://link.jianshu.com/?t=https://nodejs.org/en/download/) 官网下载相应平台的最新版本，傻瓜式安装（自带安装 npm）。在 git bash 下执行`npm -v` 查看是否安装成功 npm。如果安装成功会显示对应版本号。\n\n```bash\n$ npm -v\n5.6.0\n```\n\n#### 4. 安装 Hexo\n\n打开 git bash 或者 cmd, 执行以下命令:\n`npm install -g hexo`\n\n## 搭建 Hexo\n\n#### 1. 初始化 \n\n执行`hexo init myblog`创建一个名为 myblog 的博客。该命令会生成一个 myblog 文件夹。进入 myblog 目录 `cd myblog `, myblog 是博客的主目录。\n\n#### 2. 安装必须依赖包\n\n`hexo install <name>`\n\n#### 3. 生成静态页面\n\n`hexo generate` or `hexo g`\n\n#### 4. 本地运行\n\n`hexo server` 或者 `hexo s`\n\n打开浏览器，在地址栏输入localhost:4000，就可以看到我们搭建好的本地博客了。到此只是搭建好了本地博客。\n\n## 部署博客到 GitHub , 通过域名访问博客。\n#### 1.新建repository\n\n建立与你用户名对应的仓库，仓库名必须为【 your_username.github.io】,例如我的博客 limqvip.github.io. \n\n#### 2.部署博客\n\n##### 1. 修改配置文件\n\n进入你的hexo文件夹根目录下，用编辑器打开 _config.yml, 修改 deploy 项，如下（根据你的 GitHub 进行相应更改）：\n\n```bash\ndeploy:\n  type: git       #注意：有的版本type是github\n  repo: https://github.com/limqvip/limqvip.github.io.git\n  branch: master\n```\n\n##### 2. 执行 `hexo d` 部署到 github 上。\n\n```bash\nINFO  Deploying: git\nINFO  Clearing .deploy_git folder...\nINFO  Copying files from public folder...\nINFO  Copying files from extend dirs...\n…略\n create mode 100644 \"tags/\\347\\211\\210\\346\\234\\254\\346\\216\\247\\345\\210\\266/index.html\"\nBranch master set up to track remote branch master from git@github.com:limqvip/limqvip.github.io.git.\nTo github.com:limqvip/limqvip.github.io.git\n   5867eb8..f25e3d4  HEAD -> master\nINFO  Deploy done: git\n```\n\n此时就完成部署了，用浏览器访问 https://limqvip.github.io 即可(第一次发布可能会有 10 分钟的延迟)。\n\n每次修改完本地的文件后要执行以下命令，重新部署到 github 上：\n\n`hexo clean`\n`hexo generate`\n`hexo deploy` 或者 `hexo d`\n\n#### 常用命令\n\n`hexo new \"postName\"` #新建文章\n`hexo new page \"pageName\"` #新建页面\n`hexo generate` #生成静态页面至public目录\n`hexo server` #开启预览访问端口（默认端口 4000, 'ctrl + c' 关闭 server）\n`hexo deploy` #将 .deploy 目录部署到 GitHub\n`hexo help` # 查看帮助\n`hexo version` #查看 Hexo 的版本\n\n#### 报错总结\n\n1. 出现 error deployer not found:git 或者 error deployer not found:github 的错误\n\n   解决办法：执行 npm install hexo-deployer-git --save\n\n2. 出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: ... 错误\n\n   解决办法：_config.yml 中配置项的英文冒号后面要用空格隔开，再跟内容。\n\n3. 中文乱码问题\n\n   解决办法：将文件的内容编码改为 UTF8 格式\n\n4. 'hexo sever' 能够成功运行，但是 localhost:4000 无法访问\n\n   解决办法：执行 hexo s -p 5000, 改用其他端口启动\n\n   ---\n\n   安装步骤很简单，但中间走了很多弯路，因此，主要记录一下那些曾经走过的弯路。\n\n   1. 新建项目时报错：\nnpm WARN deprecated istanbul-lib-hook@1.2.1: 1.2.0 should have\n been a major version bumpnpm ERR! Unexpected end of JSON input while parsing near ‘...registry.npm.taobao.o‘ npm ERR! A complete log of this run can be found in:npm ERR!     \nC:\\Users\\Admin\\AppData\\Roaming\\npm-cache\\_logs\\2018-06-08T14_01_13_067Z-debug.logPackage install failed, see above. 如下所示：\n\n      解决方法：网上查找的一般是说运行：`npm cache clean --force`，但清除缓存之后，再次新建项目，还是报这个错。然后根据提示信息，取消了淘宝镜像，问题解决。\n\n      取消淘宝镜像：\n\n      ```bash\n      npm uninstall -g angular-cli \n      npm uninstall -g @angular/cli \n      npm cache clean \n      ```\n\n      运行 `npm config edit` 可看到 registry 中已经变成了默认镜像。参考：设置和取消淘宝镜像 \n\n   2. 新建项目时报的警告：npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"}) ‘git‘ 不是内部或外部命令，也不是可运行的程序或批处理文件。 安装git插件\n\n   3. 卸载 angular, 因为反反复复卸载重装了好几次 angular, 因此也记录一下卸载过程吧。\n\n      ```bash\n      npm uninstall -g angular-cli \n      npm uninstall -g @angular/cli\n      npm cache clean  \n      ```\n\n       在运行 `npm cache clean`  时报错如下图，根据信息提示改成了 `npm cache verify`  总结：一定要根据官网教程安装，网上的教程很多很乱，开始就是根据网上教程装的很混乱，   导致报了很多莫名其妙的错。 本文由职坐标整理并发布，希望对同学们有所帮助。了解更多详情请关注 WEB 前端 Node.js 频道！ ","source":"_posts/limqfirst.md","raw":"---\ntitle: 用 Hexo + Github 搭建属于自己的博客\ndate: 2018-08-20 11:13:56\ntags: Python\ncategories: \n- Program\n- hexo\n---\n\n最近几天一直想做一个自己的博客，把学习过的技术看过的文章都整理起来，花了几天的时间[博客](limqvip.github.io)初步搭建完成，看了很多大佬文章，但是自己搭建还是遇到很多坑，下面就写写搭建过程。希望对看到的人有帮助。\n\n本文主要介绍 Windows 7 x64 下 Hexo: 3.7.1 + GitHub 搭建（不同的 Hexo 版本，有的设置可能会有差异）。\n\n## 搭建环境\n\n#### \t1. 安装 git\n\n可以到 [git](https://git-scm.com/download/win) 官网下载相应平台版本进行安装。\n\n#### \t2. 申请 GitHub 账号\n\n进入 [GitHub ](https://link.jianshu.com/?t=https://github.com/) 注册。注册过程略。\n\n#### \t3. 安装 node.js\n\n到 [node.js](https://link.jianshu.com/?t=https://nodejs.org/en/download/) 官网下载相应平台的最新版本，傻瓜式安装（自带安装 npm）。在 git bash 下执行`npm -v` 查看是否安装成功 npm。如果安装成功会显示对应版本号。\n\n```bash\n$ npm -v\n5.6.0\n```\n\n#### 4. 安装 Hexo\n\n打开 git bash 或者 cmd, 执行以下命令:\n`npm install -g hexo`\n\n## 搭建 Hexo\n\n#### 1. 初始化 \n\n执行`hexo init myblog`创建一个名为 myblog 的博客。该命令会生成一个 myblog 文件夹。进入 myblog 目录 `cd myblog `, myblog 是博客的主目录。\n\n#### 2. 安装必须依赖包\n\n`hexo install <name>`\n\n#### 3. 生成静态页面\n\n`hexo generate` or `hexo g`\n\n#### 4. 本地运行\n\n`hexo server` 或者 `hexo s`\n\n打开浏览器，在地址栏输入localhost:4000，就可以看到我们搭建好的本地博客了。到此只是搭建好了本地博客。\n\n## 部署博客到 GitHub , 通过域名访问博客。\n#### 1.新建repository\n\n建立与你用户名对应的仓库，仓库名必须为【 your_username.github.io】,例如我的博客 limqvip.github.io. \n\n#### 2.部署博客\n\n##### 1. 修改配置文件\n\n进入你的hexo文件夹根目录下，用编辑器打开 _config.yml, 修改 deploy 项，如下（根据你的 GitHub 进行相应更改）：\n\n```bash\ndeploy:\n  type: git       #注意：有的版本type是github\n  repo: https://github.com/limqvip/limqvip.github.io.git\n  branch: master\n```\n\n##### 2. 执行 `hexo d` 部署到 github 上。\n\n```bash\nINFO  Deploying: git\nINFO  Clearing .deploy_git folder...\nINFO  Copying files from public folder...\nINFO  Copying files from extend dirs...\n…略\n create mode 100644 \"tags/\\347\\211\\210\\346\\234\\254\\346\\216\\247\\345\\210\\266/index.html\"\nBranch master set up to track remote branch master from git@github.com:limqvip/limqvip.github.io.git.\nTo github.com:limqvip/limqvip.github.io.git\n   5867eb8..f25e3d4  HEAD -> master\nINFO  Deploy done: git\n```\n\n此时就完成部署了，用浏览器访问 https://limqvip.github.io 即可(第一次发布可能会有 10 分钟的延迟)。\n\n每次修改完本地的文件后要执行以下命令，重新部署到 github 上：\n\n`hexo clean`\n`hexo generate`\n`hexo deploy` 或者 `hexo d`\n\n#### 常用命令\n\n`hexo new \"postName\"` #新建文章\n`hexo new page \"pageName\"` #新建页面\n`hexo generate` #生成静态页面至public目录\n`hexo server` #开启预览访问端口（默认端口 4000, 'ctrl + c' 关闭 server）\n`hexo deploy` #将 .deploy 目录部署到 GitHub\n`hexo help` # 查看帮助\n`hexo version` #查看 Hexo 的版本\n\n#### 报错总结\n\n1. 出现 error deployer not found:git 或者 error deployer not found:github 的错误\n\n   解决办法：执行 npm install hexo-deployer-git --save\n\n2. 出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: ... 错误\n\n   解决办法：_config.yml 中配置项的英文冒号后面要用空格隔开，再跟内容。\n\n3. 中文乱码问题\n\n   解决办法：将文件的内容编码改为 UTF8 格式\n\n4. 'hexo sever' 能够成功运行，但是 localhost:4000 无法访问\n\n   解决办法：执行 hexo s -p 5000, 改用其他端口启动\n\n   ---\n\n   安装步骤很简单，但中间走了很多弯路，因此，主要记录一下那些曾经走过的弯路。\n\n   1. 新建项目时报错：\nnpm WARN deprecated istanbul-lib-hook@1.2.1: 1.2.0 should have\n been a major version bumpnpm ERR! Unexpected end of JSON input while parsing near ‘...registry.npm.taobao.o‘ npm ERR! A complete log of this run can be found in:npm ERR!     \nC:\\Users\\Admin\\AppData\\Roaming\\npm-cache\\_logs\\2018-06-08T14_01_13_067Z-debug.logPackage install failed, see above. 如下所示：\n\n      解决方法：网上查找的一般是说运行：`npm cache clean --force`，但清除缓存之后，再次新建项目，还是报这个错。然后根据提示信息，取消了淘宝镜像，问题解决。\n\n      取消淘宝镜像：\n\n      ```bash\n      npm uninstall -g angular-cli \n      npm uninstall -g @angular/cli \n      npm cache clean \n      ```\n\n      运行 `npm config edit` 可看到 registry 中已经变成了默认镜像。参考：设置和取消淘宝镜像 \n\n   2. 新建项目时报的警告：npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"}) ‘git‘ 不是内部或外部命令，也不是可运行的程序或批处理文件。 安装git插件\n\n   3. 卸载 angular, 因为反反复复卸载重装了好几次 angular, 因此也记录一下卸载过程吧。\n\n      ```bash\n      npm uninstall -g angular-cli \n      npm uninstall -g @angular/cli\n      npm cache clean  \n      ```\n\n       在运行 `npm cache clean`  时报错如下图，根据信息提示改成了 `npm cache verify`  总结：一定要根据官网教程安装，网上的教程很多很乱，开始就是根据网上教程装的很混乱，   导致报了很多莫名其妙的错。 本文由职坐标整理并发布，希望对同学们有所帮助。了解更多详情请关注 WEB 前端 Node.js 频道！ ","slug":"limqfirst","published":1,"updated":"2018-08-22T05:55:44.611Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjl4q6cex000ibwlrrdqbsb2g","content":"<p>最近几天一直想做一个自己的博客，把学习过的技术看过的文章都整理起来，花了几天的时间<a href=\"limqvip.github.io\">博客</a>初步搭建完成，看了很多大佬文章，但是自己搭建还是遇到很多坑，下面就写写搭建过程。希望对看到的人有帮助。</p>\n<p>本文主要介绍 Windows 7 x64 下 Hexo: 3.7.1 + GitHub 搭建（不同的 Hexo 版本，有的设置可能会有差异）。</p>\n<h2 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h2><h4 id=\"1-安装-git\"><a href=\"#1-安装-git\" class=\"headerlink\" title=\"1. 安装 git\"></a>1. 安装 git</h4><p>可以到 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a> 官网下载相应平台版本进行安装。</p>\n<h4 id=\"2-申请-GitHub-账号\"><a href=\"#2-申请-GitHub-账号\" class=\"headerlink\" title=\"2. 申请 GitHub 账号\"></a>2. 申请 GitHub 账号</h4><p>进入 <a href=\"https://link.jianshu.com/?t=https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub </a> 注册。注册过程略。</p>\n<h4 id=\"3-安装-node-js\"><a href=\"#3-安装-node-js\" class=\"headerlink\" title=\"3. 安装 node.js\"></a>3. 安装 node.js</h4><p>到 <a href=\"https://link.jianshu.com/?t=https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">node.js</a> 官网下载相应平台的最新版本，傻瓜式安装（自带安装 npm）。在 git bash 下执行<code>npm -v</code> 查看是否安装成功 npm。如果安装成功会显示对应版本号。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm -v</span><br><span class=\"line\">5.6.0</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-安装-Hexo\"><a href=\"#4-安装-Hexo\" class=\"headerlink\" title=\"4. 安装 Hexo\"></a>4. 安装 Hexo</h4><p>打开 git bash 或者 cmd, 执行以下命令:<br><code>npm install -g hexo</code></p>\n<h2 id=\"搭建-Hexo\"><a href=\"#搭建-Hexo\" class=\"headerlink\" title=\"搭建 Hexo\"></a>搭建 Hexo</h2><h4 id=\"1-初始化\"><a href=\"#1-初始化\" class=\"headerlink\" title=\"1. 初始化\"></a>1. 初始化</h4><p>执行<code>hexo init myblog</code>创建一个名为 myblog 的博客。该命令会生成一个 myblog 文件夹。进入 myblog 目录 <code>cd myblog</code>, myblog 是博客的主目录。</p>\n<h4 id=\"2-安装必须依赖包\"><a href=\"#2-安装必须依赖包\" class=\"headerlink\" title=\"2. 安装必须依赖包\"></a>2. 安装必须依赖包</h4><p><code>hexo install &lt;name&gt;</code></p>\n<h4 id=\"3-生成静态页面\"><a href=\"#3-生成静态页面\" class=\"headerlink\" title=\"3. 生成静态页面\"></a>3. 生成静态页面</h4><p><code>hexo generate</code> or <code>hexo g</code></p>\n<h4 id=\"4-本地运行\"><a href=\"#4-本地运行\" class=\"headerlink\" title=\"4. 本地运行\"></a>4. 本地运行</h4><p><code>hexo server</code> 或者 <code>hexo s</code></p>\n<p>打开浏览器，在地址栏输入localhost:4000，就可以看到我们搭建好的本地博客了。到此只是搭建好了本地博客。</p>\n<h2 id=\"部署博客到-GitHub-通过域名访问博客。\"><a href=\"#部署博客到-GitHub-通过域名访问博客。\" class=\"headerlink\" title=\"部署博客到 GitHub , 通过域名访问博客。\"></a>部署博客到 GitHub , 通过域名访问博客。</h2><h4 id=\"1-新建repository\"><a href=\"#1-新建repository\" class=\"headerlink\" title=\"1.新建repository\"></a>1.新建repository</h4><p>建立与你用户名对应的仓库，仓库名必须为【 your_username.github.io】,例如我的博客 limqvip.github.io. </p>\n<h4 id=\"2-部署博客\"><a href=\"#2-部署博客\" class=\"headerlink\" title=\"2.部署博客\"></a>2.部署博客</h4><h5 id=\"1-修改配置文件\"><a href=\"#1-修改配置文件\" class=\"headerlink\" title=\"1. 修改配置文件\"></a>1. 修改配置文件</h5><p>进入你的hexo文件夹根目录下，用编辑器打开 _config.yml, 修改 deploy 项，如下（根据你的 GitHub 进行相应更改）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git       <span class=\"comment\">#注意：有的版本type是github</span></span><br><span class=\"line\">  repo: https://github.com/limqvip/limqvip.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-执行-hexo-d-部署到-github-上。\"><a href=\"#2-执行-hexo-d-部署到-github-上。\" class=\"headerlink\" title=\"2. 执行 hexo d 部署到 github 上。\"></a>2. 执行 <code>hexo d</code> 部署到 github 上。</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INFO  Deploying: git</span><br><span class=\"line\">INFO  Clearing .deploy_git folder...</span><br><span class=\"line\">INFO  Copying files from public folder...</span><br><span class=\"line\">INFO  Copying files from extend <span class=\"built_in\">dirs</span>...</span><br><span class=\"line\">…略</span><br><span class=\"line\"> create mode 100644 <span class=\"string\">\"tags/\\347\\211\\210\\346\\234\\254\\346\\216\\247\\345\\210\\266/index.html\"</span></span><br><span class=\"line\">Branch master <span class=\"built_in\">set</span> up to track remote branch master from git@github.com:limqvip/limqvip.github.io.git.</span><br><span class=\"line\">To github.com:limqvip/limqvip.github.io.git</span><br><span class=\"line\">   5867eb8..f25e3d4  HEAD -&gt; master</span><br><span class=\"line\">INFO  Deploy <span class=\"keyword\">done</span>: git</span><br></pre></td></tr></table></figure>\n<p>此时就完成部署了，用浏览器访问 <a href=\"https://limqvip.github.io\" target=\"_blank\" rel=\"noopener\">https://limqvip.github.io</a> 即可(第一次发布可能会有 10 分钟的延迟)。</p>\n<p>每次修改完本地的文件后要执行以下命令，重新部署到 github 上：</p>\n<p><code>hexo clean</code><br><code>hexo generate</code><br><code>hexo deploy</code> 或者 <code>hexo d</code></p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p><code>hexo new &quot;postName&quot;</code> #新建文章<br><code>hexo new page &quot;pageName&quot;</code> #新建页面<br><code>hexo generate</code> #生成静态页面至public目录<br><code>hexo server</code> #开启预览访问端口（默认端口 4000, ‘ctrl + c’ 关闭 server）<br><code>hexo deploy</code> #将 .deploy 目录部署到 GitHub<br><code>hexo help</code> # 查看帮助<br><code>hexo version</code> #查看 Hexo 的版本</p>\n<h4 id=\"报错总结\"><a href=\"#报错总结\" class=\"headerlink\" title=\"报错总结\"></a>报错总结</h4><ol>\n<li><p>出现 error deployer not found:git 或者 error deployer not found:github 的错误</p>\n<p>解决办法：执行 npm install hexo-deployer-git –save</p>\n</li>\n<li><p>出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: … 错误</p>\n<p>解决办法：_config.yml 中配置项的英文冒号后面要用空格隔开，再跟内容。</p>\n</li>\n<li><p>中文乱码问题</p>\n<p>解决办法：将文件的内容编码改为 UTF8 格式</p>\n</li>\n<li><p>‘hexo sever’ 能够成功运行，但是 localhost:4000 无法访问</p>\n<p>解决办法：执行 hexo s -p 5000, 改用其他端口启动</p>\n<hr>\n<p>安装步骤很简单，但中间走了很多弯路，因此，主要记录一下那些曾经走过的弯路。</p>\n<ol>\n<li><p>新建项目时报错：<br>npm WARN deprecated <a href=\"mailto:istanbul-lib-hook@1.2.1\" target=\"_blank\" rel=\"noopener\">istanbul-lib-hook@1.2.1</a>: 1.2.0 should have<br>been a major version bumpnpm ERR! Unexpected end of JSON input while parsing near ‘…registry.npm.taobao.o‘ npm ERR! A complete log of this run can be found in:npm ERR!<br>C:\\Users\\Admin\\AppData\\Roaming\\npm-cache_logs\\2018-06-08T14_01_13_067Z-debug.logPackage install failed, see above. 如下所示：</p>\n<p>解决方法：网上查找的一般是说运行：<code>npm cache clean --force</code>，但清除缓存之后，再次新建项目，还是报这个错。然后根据提示信息，取消了淘宝镜像，问题解决。</p>\n<p>取消淘宝镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall -g angular-cli </span><br><span class=\"line\">npm uninstall -g @angular/cli </span><br><span class=\"line\">npm cache clean</span><br></pre></td></tr></table></figure>\n<p>运行 <code>npm config edit</code> 可看到 registry 中已经变成了默认镜像。参考：设置和取消淘宝镜像 </p>\n</li>\n<li><p>新建项目时报的警告：npm WARN optional SKIPPING OPTIONAL DEPENDENCY: <a href=\"mailto:fsevents@1.2.4\" target=\"_blank\" rel=\"noopener\">fsevents@1.2.4</a> (node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for <a href=\"mailto:fsevents@1.2.4\" target=\"_blank\" rel=\"noopener\">fsevents@1.2.4</a>: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”win32”,”arch”:”x64”}) ‘git‘ 不是内部或外部命令，也不是可运行的程序或批处理文件。 安装git插件</p>\n</li>\n<li><p>卸载 angular, 因为反反复复卸载重装了好几次 angular, 因此也记录一下卸载过程吧。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall -g angular-cli </span><br><span class=\"line\">npm uninstall -g @angular/cli</span><br><span class=\"line\">npm cache clean</span><br></pre></td></tr></table></figure>\n<p> 在运行 <code>npm cache clean</code>  时报错如下图，根据信息提示改成了 <code>npm cache verify</code>  总结：一定要根据官网教程安装，网上的教程很多很乱，开始就是根据网上教程装的很混乱，   导致报了很多莫名其妙的错。 本文由职坐标整理并发布，希望对同学们有所帮助。了解更多详情请关注 WEB 前端 Node.js 频道！ </p>\n</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>最近几天一直想做一个自己的博客，把学习过的技术看过的文章都整理起来，花了几天的时间<a href=\"limqvip.github.io\">博客</a>初步搭建完成，看了很多大佬文章，但是自己搭建还是遇到很多坑，下面就写写搭建过程。希望对看到的人有帮助。</p>\n<p>本文主要介绍 Windows 7 x64 下 Hexo: 3.7.1 + GitHub 搭建（不同的 Hexo 版本，有的设置可能会有差异）。</p>\n<h2 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h2><h4 id=\"1-安装-git\"><a href=\"#1-安装-git\" class=\"headerlink\" title=\"1. 安装 git\"></a>1. 安装 git</h4><p>可以到 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a> 官网下载相应平台版本进行安装。</p>\n<h4 id=\"2-申请-GitHub-账号\"><a href=\"#2-申请-GitHub-账号\" class=\"headerlink\" title=\"2. 申请 GitHub 账号\"></a>2. 申请 GitHub 账号</h4><p>进入 <a href=\"https://link.jianshu.com/?t=https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub </a> 注册。注册过程略。</p>\n<h4 id=\"3-安装-node-js\"><a href=\"#3-安装-node-js\" class=\"headerlink\" title=\"3. 安装 node.js\"></a>3. 安装 node.js</h4><p>到 <a href=\"https://link.jianshu.com/?t=https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener\">node.js</a> 官网下载相应平台的最新版本，傻瓜式安装（自带安装 npm）。在 git bash 下执行<code>npm -v</code> 查看是否安装成功 npm。如果安装成功会显示对应版本号。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm -v</span><br><span class=\"line\">5.6.0</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-安装-Hexo\"><a href=\"#4-安装-Hexo\" class=\"headerlink\" title=\"4. 安装 Hexo\"></a>4. 安装 Hexo</h4><p>打开 git bash 或者 cmd, 执行以下命令:<br><code>npm install -g hexo</code></p>\n<h2 id=\"搭建-Hexo\"><a href=\"#搭建-Hexo\" class=\"headerlink\" title=\"搭建 Hexo\"></a>搭建 Hexo</h2><h4 id=\"1-初始化\"><a href=\"#1-初始化\" class=\"headerlink\" title=\"1. 初始化\"></a>1. 初始化</h4><p>执行<code>hexo init myblog</code>创建一个名为 myblog 的博客。该命令会生成一个 myblog 文件夹。进入 myblog 目录 <code>cd myblog</code>, myblog 是博客的主目录。</p>\n<h4 id=\"2-安装必须依赖包\"><a href=\"#2-安装必须依赖包\" class=\"headerlink\" title=\"2. 安装必须依赖包\"></a>2. 安装必须依赖包</h4><p><code>hexo install &lt;name&gt;</code></p>\n<h4 id=\"3-生成静态页面\"><a href=\"#3-生成静态页面\" class=\"headerlink\" title=\"3. 生成静态页面\"></a>3. 生成静态页面</h4><p><code>hexo generate</code> or <code>hexo g</code></p>\n<h4 id=\"4-本地运行\"><a href=\"#4-本地运行\" class=\"headerlink\" title=\"4. 本地运行\"></a>4. 本地运行</h4><p><code>hexo server</code> 或者 <code>hexo s</code></p>\n<p>打开浏览器，在地址栏输入localhost:4000，就可以看到我们搭建好的本地博客了。到此只是搭建好了本地博客。</p>\n<h2 id=\"部署博客到-GitHub-通过域名访问博客。\"><a href=\"#部署博客到-GitHub-通过域名访问博客。\" class=\"headerlink\" title=\"部署博客到 GitHub , 通过域名访问博客。\"></a>部署博客到 GitHub , 通过域名访问博客。</h2><h4 id=\"1-新建repository\"><a href=\"#1-新建repository\" class=\"headerlink\" title=\"1.新建repository\"></a>1.新建repository</h4><p>建立与你用户名对应的仓库，仓库名必须为【 your_username.github.io】,例如我的博客 limqvip.github.io. </p>\n<h4 id=\"2-部署博客\"><a href=\"#2-部署博客\" class=\"headerlink\" title=\"2.部署博客\"></a>2.部署博客</h4><h5 id=\"1-修改配置文件\"><a href=\"#1-修改配置文件\" class=\"headerlink\" title=\"1. 修改配置文件\"></a>1. 修改配置文件</h5><p>进入你的hexo文件夹根目录下，用编辑器打开 _config.yml, 修改 deploy 项，如下（根据你的 GitHub 进行相应更改）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git       <span class=\"comment\">#注意：有的版本type是github</span></span><br><span class=\"line\">  repo: https://github.com/limqvip/limqvip.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-执行-hexo-d-部署到-github-上。\"><a href=\"#2-执行-hexo-d-部署到-github-上。\" class=\"headerlink\" title=\"2. 执行 hexo d 部署到 github 上。\"></a>2. 执行 <code>hexo d</code> 部署到 github 上。</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INFO  Deploying: git</span><br><span class=\"line\">INFO  Clearing .deploy_git folder...</span><br><span class=\"line\">INFO  Copying files from public folder...</span><br><span class=\"line\">INFO  Copying files from extend <span class=\"built_in\">dirs</span>...</span><br><span class=\"line\">…略</span><br><span class=\"line\"> create mode 100644 <span class=\"string\">\"tags/\\347\\211\\210\\346\\234\\254\\346\\216\\247\\345\\210\\266/index.html\"</span></span><br><span class=\"line\">Branch master <span class=\"built_in\">set</span> up to track remote branch master from git@github.com:limqvip/limqvip.github.io.git.</span><br><span class=\"line\">To github.com:limqvip/limqvip.github.io.git</span><br><span class=\"line\">   5867eb8..f25e3d4  HEAD -&gt; master</span><br><span class=\"line\">INFO  Deploy <span class=\"keyword\">done</span>: git</span><br></pre></td></tr></table></figure>\n<p>此时就完成部署了，用浏览器访问 <a href=\"https://limqvip.github.io\" target=\"_blank\" rel=\"noopener\">https://limqvip.github.io</a> 即可(第一次发布可能会有 10 分钟的延迟)。</p>\n<p>每次修改完本地的文件后要执行以下命令，重新部署到 github 上：</p>\n<p><code>hexo clean</code><br><code>hexo generate</code><br><code>hexo deploy</code> 或者 <code>hexo d</code></p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p><code>hexo new &quot;postName&quot;</code> #新建文章<br><code>hexo new page &quot;pageName&quot;</code> #新建页面<br><code>hexo generate</code> #生成静态页面至public目录<br><code>hexo server</code> #开启预览访问端口（默认端口 4000, ‘ctrl + c’ 关闭 server）<br><code>hexo deploy</code> #将 .deploy 目录部署到 GitHub<br><code>hexo help</code> # 查看帮助<br><code>hexo version</code> #查看 Hexo 的版本</p>\n<h4 id=\"报错总结\"><a href=\"#报错总结\" class=\"headerlink\" title=\"报错总结\"></a>报错总结</h4><ol>\n<li><p>出现 error deployer not found:git 或者 error deployer not found:github 的错误</p>\n<p>解决办法：执行 npm install hexo-deployer-git –save</p>\n</li>\n<li><p>出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: … 错误</p>\n<p>解决办法：_config.yml 中配置项的英文冒号后面要用空格隔开，再跟内容。</p>\n</li>\n<li><p>中文乱码问题</p>\n<p>解决办法：将文件的内容编码改为 UTF8 格式</p>\n</li>\n<li><p>‘hexo sever’ 能够成功运行，但是 localhost:4000 无法访问</p>\n<p>解决办法：执行 hexo s -p 5000, 改用其他端口启动</p>\n<hr>\n<p>安装步骤很简单，但中间走了很多弯路，因此，主要记录一下那些曾经走过的弯路。</p>\n<ol>\n<li><p>新建项目时报错：<br>npm WARN deprecated <a href=\"mailto:istanbul-lib-hook@1.2.1\" target=\"_blank\" rel=\"noopener\">istanbul-lib-hook@1.2.1</a>: 1.2.0 should have<br>been a major version bumpnpm ERR! Unexpected end of JSON input while parsing near ‘…registry.npm.taobao.o‘ npm ERR! A complete log of this run can be found in:npm ERR!<br>C:\\Users\\Admin\\AppData\\Roaming\\npm-cache_logs\\2018-06-08T14_01_13_067Z-debug.logPackage install failed, see above. 如下所示：</p>\n<p>解决方法：网上查找的一般是说运行：<code>npm cache clean --force</code>，但清除缓存之后，再次新建项目，还是报这个错。然后根据提示信息，取消了淘宝镜像，问题解决。</p>\n<p>取消淘宝镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall -g angular-cli </span><br><span class=\"line\">npm uninstall -g @angular/cli </span><br><span class=\"line\">npm cache clean</span><br></pre></td></tr></table></figure>\n<p>运行 <code>npm config edit</code> 可看到 registry 中已经变成了默认镜像。参考：设置和取消淘宝镜像 </p>\n</li>\n<li><p>新建项目时报的警告：npm WARN optional SKIPPING OPTIONAL DEPENDENCY: <a href=\"mailto:fsevents@1.2.4\" target=\"_blank\" rel=\"noopener\">fsevents@1.2.4</a> (node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for <a href=\"mailto:fsevents@1.2.4\" target=\"_blank\" rel=\"noopener\">fsevents@1.2.4</a>: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”win32”,”arch”:”x64”}) ‘git‘ 不是内部或外部命令，也不是可运行的程序或批处理文件。 安装git插件</p>\n</li>\n<li><p>卸载 angular, 因为反反复复卸载重装了好几次 angular, 因此也记录一下卸载过程吧。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall -g angular-cli </span><br><span class=\"line\">npm uninstall -g @angular/cli</span><br><span class=\"line\">npm cache clean</span><br></pre></td></tr></table></figure>\n<p> 在运行 <code>npm cache clean</code>  时报错如下图，根据信息提示改成了 <code>npm cache verify</code>  总结：一定要根据官网教程安装，网上的教程很多很乱，开始就是根据网上教程装的很混乱，   导致报了很多莫名其妙的错。 本文由职坐标整理并发布，希望对同学们有所帮助。了解更多详情请关注 WEB 前端 Node.js 频道！ </p>\n</li>\n</ol>\n</li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/2018-08-20-数据库基础1/Image.png","slug":"Image.png","post":"cjl4q6ce90001bwlriar7asw7","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjl4q6cev000gbwlr7f5f76b2","category_id":"cjl4q6ceu000fbwlrod73mr0s","_id":"cjl4q6cez000nbwlrtnbp9a2r"},{"post_id":"cjl4q6cej0006bwlrh41p72w2","category_id":"cjl4q6ceu000fbwlrod73mr0s","_id":"cjl4q6cf0000pbwlrv37sq74g"},{"post_id":"cjl4q6cel0008bwlryaz4pcta","category_id":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cf0000sbwlri9n8e2vq"},{"post_id":"cjl4q6cel0008bwlryaz4pcta","category_id":"cjl4q6cey000kbwlrdzdzmgdt","_id":"cjl4q6cf1000vbwlr89igf6en"},{"post_id":"cjl4q6ce90001bwlriar7asw7","category_id":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cf2000xbwlr4x3g5ime"},{"post_id":"cjl4q6ce90001bwlriar7asw7","category_id":"cjl4q6cez000obwlrxdz46yds","_id":"cjl4q6cf3000zbwlrgwskbmpy"},{"post_id":"cjl4q6cem0009bwlr34lxnknu","category_id":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cf40013bwlrqa5k2ouw"},{"post_id":"cjl4q6cem0009bwlr34lxnknu","category_id":"cjl4q6cf0000tbwlrhhuzznxb","_id":"cjl4q6cf40015bwlrzk6jlv9m"},{"post_id":"cjl4q6ceq000bbwlr4wkp4k89","category_id":"cjl4q6ceu000fbwlrod73mr0s","_id":"cjl4q6cf50018bwlr892xpyrw"},{"post_id":"cjl4q6cee0003bwlrf3wm64yu","category_id":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cf5001bbwlrl7wsy45n"},{"post_id":"cjl4q6cee0003bwlrf3wm64yu","category_id":"cjl4q6cf30012bwlrt2j7z6d6","_id":"cjl4q6cf6001cbwlrzo4w1dy4"},{"post_id":"cjl4q6cex000ibwlrrdqbsb2g","category_id":"cjl4q6ceh0004bwlrebqs7mqt","_id":"cjl4q6cf6001dbwlru4gmm23u"},{"post_id":"cjl4q6cex000ibwlrrdqbsb2g","category_id":"cjl4q6cf50019bwlrw21bzy7u","_id":"cjl4q6cf6001ebwlruryd774e"}],"PostTag":[{"post_id":"cjl4q6cee0003bwlrf3wm64yu","tag_id":"cjl4q6cek0007bwlrglvpx2ct","_id":"cjl4q6cet000dbwlr9bkhjucw"},{"post_id":"cjl4q6cej0006bwlrh41p72w2","tag_id":"cjl4q6ces000cbwlrq1pmq205","_id":"cjl4q6cey000jbwlri8nnr0qr"},{"post_id":"cjl4q6cex000ibwlrrdqbsb2g","tag_id":"cjl4q6ces000cbwlrq1pmq205","_id":"cjl4q6cez000mbwlrfiz3ec7d"},{"post_id":"cjl4q6cel0008bwlryaz4pcta","tag_id":"cjl4q6cew000hbwlry3ggdqny","_id":"cjl4q6cf0000rbwlr4zxcj6z7"},{"post_id":"cjl4q6cel0008bwlryaz4pcta","tag_id":"cjl4q6cez000lbwlradp0scwe","_id":"cjl4q6cf1000ubwlrygpr6wn8"},{"post_id":"cjl4q6cem0009bwlr34lxnknu","tag_id":"cjl4q6cf0000qbwlr2r8uc3pp","_id":"cjl4q6cf30011bwlrygk12041"},{"post_id":"cjl4q6cem0009bwlr34lxnknu","tag_id":"cjl4q6cf2000wbwlrokmywqh9","_id":"cjl4q6cf40014bwlrnjsspkme"},{"post_id":"cjl4q6ceq000bbwlr4wkp4k89","tag_id":"cjl4q6ces000cbwlrq1pmq205","_id":"cjl4q6cf50017bwlrl172hjw0"},{"post_id":"cjl4q6cev000gbwlr7f5f76b2","tag_id":"cjl4q6cf40016bwlrzx0mu8mm","_id":"cjl4q6cf5001abwlr4lklufu8"}],"Tag":[{"name":"Oracle","_id":"cjl4q6cek0007bwlrglvpx2ct"},{"name":"Python","_id":"cjl4q6ces000cbwlrq1pmq205"},{"name":"Git","_id":"cjl4q6cew000hbwlry3ggdqny"},{"name":"版本控制","_id":"cjl4q6cez000lbwlradp0scwe"},{"name":"bat","_id":"cjl4q6cf0000qbwlr2r8uc3pp"},{"name":"Windows","_id":"cjl4q6cf2000wbwlrokmywqh9"},{"name":"test","_id":"cjl4q6cf40016bwlrzx0mu8mm"}]}}